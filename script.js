// Telegram WebApp API
const tg = window.Telegram.WebApp;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
tg.ready();
tg.expand();

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let userInfo = {};
let currentTest = null;
let currentQuestion = 0;
let testAnswers = {};

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ –≤—ã–≥–æ—Ä–∞–Ω–∏—è
let burnoutCurrentQuestion = 0;
let burnoutAnswers = {};

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ —Ç—Ä–µ–≤–æ–≥–∏
let anxietyCurrentQuestion = 0;
let anxietyAnswers = {};
let anxietyCurrentScale = 'state'; // 'state' –∏–ª–∏ 'trait'

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ –¥–µ–ø—Ä–µ—Å—Å–∏–∏
let depressionCurrentQuestion = 0;
let depressionAnswers = {};

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ –Ω–∞ –±—É–ª–ª–∏–Ω–≥
let bullyingCurrentSection = 0;
let bullyingCurrentQuestion = 0;
let bullyingAnswers = {};

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ –î. –û–ª–≤–µ—É—Å–∞ "–ë—É–ª–ª–∏–Ω–≥"
let olweusBullyingCurrentQuestion = 0;
let olweusBullyingAnswers = {};

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è
let aggressionCurrentQuestion = 0;
let aggressionAnswers = {};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞ –≤ Telegram (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É)
async function sendTestResultsToTelegram(results, userInfo, testName) {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ Telegram
        const telegramUser = tg.initDataUnsafe?.user;
        const userName = telegramUser ? `${telegramUser.first_name} ${telegramUser.last_name || ''}`.trim() : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        const userId = telegramUser?.id || 'unknown';
        const username = telegramUser?.username ? `@${telegramUser.username}` : '–ù–µ—Ç username';

        let message = `
üìä <b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ ${testName}</b>

üë§ <b>–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>
‚Ä¢ –ò–º—è: ${userName}
‚Ä¢ Username: ${username}
‚Ä¢ Telegram ID: ${userId}
‚Ä¢ –ü–æ–ª: ${userInfo.gender === 'male' ? '–ú—É–∂—Å–∫–æ–π' : '–ñ–µ–Ω—Å–∫–∏–π'}
‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç: ${userInfo.age} –ª–µ—Ç
‚Ä¢ –ì—Ä—É–ø–ø–∞: ${userInfo.group}

üìà <b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:</b>`;

        // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ç–µ—Å—Ç–∞
        if (testName === '–°–ê–ù') {
            message += `
‚Ä¢ –°–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ: ${results.wellbeing} –±–∞–ª–ª–æ–≤
‚Ä¢ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${results.activity} –±–∞–ª–ª–æ–≤
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: ${results.mood} –±–∞–ª–ª–æ–≤
‚Ä¢ –û–±—â–∏–π –±–∞–ª–ª: ${results.total} –±–∞–ª–ª–æ–≤`;
        } else if (testName === 'PSM-25') {
            message += `
‚Ä¢ –û–±—â–∏–π –±–∞–ª–ª —Å—Ç—Ä–µ—Å—Å–∞: ${results.total} –±–∞–ª–ª–æ–≤
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞: ${results.level} –∏–∑ 8`;
        } else if (testName === '–û–ø—Ä–æ—Å–Ω–∏–∫ –≤—ã–≥–æ—Ä–∞–Ω–∏—è') {
            message += `
‚Ä¢ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∏—Å—Ç–æ—â–µ–Ω–∏–µ: ${results.emotional} –±–∞–ª–ª–æ–≤ (${results.emotionalLevel})
‚Ä¢ –î–µ–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è: ${results.depersonalization} –±–∞–ª–ª–æ–≤ (${results.depersonalizationLevel})
‚Ä¢ –†–µ–¥—É–∫—Ü–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º–∞: ${results.professional} –±–∞–ª–ª–æ–≤ (${results.professionalLevel})`;
        } else if (testName === '–®–∫–∞–ª–∞ —Ç—Ä–µ–≤–æ–≥–∏') {
            message += `
‚Ä¢ –°–∏—Ç—É–∞—Ü–∏–æ–Ω–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å: ${results.state} –±–∞–ª–ª–æ–≤ (—Å—Ä–µ–¥–Ω–∏–π: ${results.stateAverage.toFixed(1)}) - ${results.stateLevel}
‚Ä¢ –õ–∏—á–Ω–æ—Å—Ç–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å: ${results.trait} –±–∞–ª–ª–æ–≤ (—Å—Ä–µ–¥–Ω–∏–π: ${results.traitAverage.toFixed(1)}) - ${results.traitLevel}`;
        } else if (testName === '–®–∫–∞–ª–∞ –¥–µ–ø—Ä–µ—Å—Å–∏–∏') {
            message += `
‚Ä¢ –û–±—â–∏–π –±–∞–ª–ª: ${results.total} –±–∞–ª–ª–æ–≤ - ${results.level}
‚Ä¢ –ö–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–∞—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è —Å—É–±—à–∫–∞–ª–∞: ${results.cognitiveAffective} –±–∞–ª–ª–æ–≤
‚Ä¢ –°–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å—É–±—à–∫–∞–ª–∞: ${results.somatic} –±–∞–ª–ª–æ–≤`;
        } else if (testName === '–û–ø—Ä–æ—Å–Ω–∏–∫ —Ä–∏—Å–∫–∞ –±—É–ª–ª–∏–Ω–≥–∞') {
            message += `
‚Ä¢ –®–∫–∞–ª–∞ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: ${results.insecurity} –±–∞–ª–ª–æ–≤ - ${results.insecurityLevel}
‚Ä¢ –®–∫–∞–ª–∞ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è: ${results.wellbeing} –±–∞–ª–ª–æ–≤ - ${results.wellbeingLevel}
‚Ä¢ –®–∫–∞–ª–∞ —Ä–∞–∑–æ–±—â–µ–Ω–Ω–æ—Å—Ç–∏: ${results.disunity} –±–∞–ª–ª–æ–≤ - ${results.disunityLevel}
‚Ä¢ –®–∫–∞–ª–∞ —Ä–∞–≤–Ω–æ–ø—Ä–∞–≤–∏—è: ${results.equality} –±–∞–ª–ª–æ–≤ - ${results.equalityLevel}`;
        } else if (testName === '–û–ø—Ä–æ—Å–Ω–∏–∫ –î. –û–ª–≤–µ—É—Å–∞ ¬´–ë—É–ª–ª–∏–Ω–≥¬ª') {
            message += `
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–π –±—É–ª–ª–∏–Ω–≥: ${results.activeBullying} –±–∞–ª–ª–æ–≤ - ${results.activeBullyingLevel}
‚Ä¢ –ü—Ä—è–º–æ–π –∞–∫—Ç–∏–≤–Ω—ã–π –±—É–ª–ª–∏–Ω–≥: ${results.directActive} –±–∞–ª–ª–æ–≤ - ${results.directActiveLevel}
‚Ä¢ –ö–æ—Å–≤–µ–Ω–Ω—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –±—É–ª–ª–∏–Ω–≥: ${results.indirectActive} –±–∞–ª–ª–æ–≤ - ${results.indirectActiveLevel}
‚Ä¢ –ü–∞—Å—Å–∏–≤–Ω—ã–π –±—É–ª–ª–∏–Ω–≥ (–≤–∏–∫—Ç–∏–º–∏–∑–∞—Ü–∏—è): ${results.passiveBullying} –±–∞–ª–ª–æ–≤ - ${results.passiveBullyingLevel}
‚Ä¢ –ü—Ä—è–º–∞—è –≤–∏–∫—Ç–∏–º–∏–∑–∞—Ü–∏—è: ${results.directVictim} –±–∞–ª–ª–æ–≤ - ${results.directVictimLevel}
‚Ä¢ –ö–æ—Å–≤–µ–Ω–Ω–∞—è –≤–∏–∫—Ç–∏–º–∏–∑–∞—Ü–∏—è: ${results.indirectVictim} –±–∞–ª–ª–æ–≤ - ${results.indirectVictimLevel}`;
        } else if (testName === '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è') {
            message += `
‚Ä¢ –í–µ—Ä–±–∞–ª—å–Ω–∞—è –∞–≥—Ä–µ—Å—Å–∏—è (–í–ê): ${results.verbal} –±–∞–ª–ª–æ–≤
‚Ä¢ –§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–≥—Ä–µ—Å—Å–∏—è (–§–ê): ${results.physical} –±–∞–ª–ª–æ–≤
‚Ä¢ –ü—Ä–µ–¥–º–µ—Ç–Ω–∞—è –∞–≥—Ä–µ—Å—Å–∏—è (–ü–ê): ${results.object} –±–∞–ª–ª–æ–≤
‚Ä¢ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–≥—Ä–µ—Å—Å–∏—è (–≠–ê): ${results.emotional} –±–∞–ª–ª–æ–≤
‚Ä¢ –°–∞–º–æ–∞–≥—Ä–µ—Å—Å–∏—è (–°–ê): ${results.self} –±–∞–ª–ª–æ–≤
‚Ä¢ –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç–∏: ${results.total} –±–∞–ª–ª–æ–≤`;
        }

        message += `

‚è∞ –í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è: ${new Date().toLocaleString('ru-RU')}
üîó –ò—Å—Ç–æ—á–Ω–∏–∫: Telegram WebApp`;

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
        const sendPromises = CONFIG.ADMIN_CHAT_IDS.map(async (adminId) => {
            const data = {
                chat_id: adminId,
                text: message,
                parse_mode: 'HTML'
            };
            return await sendToTelegram(data);
        });

        try {
            const responses = await Promise.all(sendPromises);
            const successCount = responses.filter(response => response !== null).length;
            console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã ${successCount} –∏–∑ ${CONFIG.ADMIN_CHAT_IDS.length} –∞–¥–º–∏–Ω–æ–≤ –≤ Telegram`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–¥–º–∏–Ω–∞–º:', error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–¥–º–∏–Ω—É:', error);
    }
}

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ PSM-25
const psm25TestData = {
    name: "PSM-25 (–®–∫–∞–ª–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç—Ä–µ—Å—Å–∞)",
    questions: [
        { id: 1, text: "–Ø –Ω–∞–ø—Ä—è–∂–µ–Ω(–∞) –∏ –≤–∑–≤–æ–ª–Ω–æ–≤–∞–Ω(–∞) (–≤–∑–≤–∏–Ω—á–µ–Ω)" },
        { id: 2, text: "–£ –º–µ–Ω—è –∫–æ–º –≤ –≥–æ—Ä–ª–µ, –∏ (–∏–ª–∏) —è –æ—â—É—â–∞—é —Å—É—Ö–æ—Å—Ç—å –≤–æ —Ä—Ç—É" },
        { id: 3, text: "–Ø –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω(–∞) —Ä–∞–±–æ—Ç–æ–π. –ú–Ω–µ —Å–æ–≤—Å–µ–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–∏" },
        { id: 4, text: "–Ø –ø—Ä–æ–≥–ª–∞—Ç—ã–≤–∞—é –ø–∏—â—É –∏–ª–∏ –∑–∞–±—ã–≤–∞—é –ø–æ–µ—Å—Ç—å" },
        { id: 5, text: "–ü–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã —è –Ω–µ –º–æ–≥—É –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç –º—ã—Å–ª–µ–π –æ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –¥–µ–ª–∞—Ö, –ø—Ä–æ–±–ª–µ–º–∞—Ö, –ø–ª–∞–Ω–∞—Ö; —è ¬´–∑–∞—Å—Ç—Ä–µ–≤–∞—é¬ª –Ω–∞ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è—Ö —Ä–∞–±–æ—á–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π –∏ –Ω–µ—Ä–µ—à–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –æ–±–¥—É–º—ã–≤–∞—é —Å–≤–æ–∏ –∏–¥–µ–∏ —Å–Ω–æ–≤–∞ –∏ —Å–Ω–æ–≤–∞" },
        { id: 6, text: "–Ø —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –æ–¥–∏–Ω–æ–∫–∏–º(–æ–π), –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º(–æ–π) –∏ –Ω–µ–ø–æ–Ω—è—Ç—ã–º(–æ–π)" },
        { id: 7, text: "–Ø —Å—Ç—Ä–∞–¥–∞—é –æ—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –Ω–µ–¥–æ–º–æ–≥–∞–Ω–∏—è; —É –º–µ–Ω—è –±–æ–ª–∏—Ç –≥–æ–ª–æ–≤–∞, –Ω–∞–ø—Ä—è–∂–µ–Ω—ã –º—ã—à—Ü—ã —à–µ–∏, –±–æ–ª–∏ –≤ —Å–ø–∏–Ω–µ, —Å–ø–∞–∑–º—ã –≤ –∂–µ–ª—É–¥–∫–µ" },
        { id: 8, text: "–Ø –ø–æ–≥–ª–æ—â–µ–Ω(–∞) –º—Ä–∞—á–Ω—ã–º–∏ –º—ã—Å–ª—è–º–∏, –∏–∑–º—É—á–µ–Ω(–∞) —Ç—Ä–µ–≤–æ–∂–Ω—ã–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏" },
        { id: 9, text: "–ú–µ–Ω—è –≤–Ω–µ–∑–∞–ø–Ω–æ –±—Ä–æ—Å–∞–µ—Ç —Ç–æ –≤ –∂–∞—Ä, —Ç–æ –≤ —Ö–æ–ª–æ–¥" },
        { id: 10, text: "–Ø —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –Ω–µ —Å–ø—Ä–∞–≤–ª—è—é—Å—å —Å–æ –≤—Å–µ–º–∏ –¥–µ–ª–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–µ–Ω(–∞) –¥–µ–ª–∞—Ç—å" },
        { id: 11, text: "–Ø –ª–µ–≥–∫–æ –º–æ–≥—É –∑–∞–ø–ª–∞–∫–∞—Ç—å" },
        { id: 12, text: "–Ø —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —É—Å—Ç–∞–≤—à–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º" },
        { id: 13, text: "–í —Ç—Ä—É–¥–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ —è –∫—Ä–µ–ø–∫–æ —Å—Ç–∏—Å–∫–∏–≤–∞—é –∑—É–±—ã (–∏–ª–∏ —Å–∂–∏–º–∞—é –∫—É–ª–∞–∫–∏)" },
        { id: 14, text: "–Ø –Ω–µ —Å–ø–æ–∫–æ–µ–Ω / –Ω–µ —Å–ø–æ–∫–æ–π–Ω–∞" },
        { id: 15, text: "–ú–Ω–µ —Ç—è–∂–µ–ª–æ –¥—ã—à–∞—Ç—å, –∏ (–∏–ª–∏) —É –º–µ–Ω—è –≤–Ω–µ–∑–∞–ø–Ω–æ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –¥—ã—Ö–∞–Ω–∏–µ" },
        { id: 16, text: "–Ø –∏–º–µ—é –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏–µ–º –∏ —Å –∫–∏—à–µ—á–Ω–∏–∫–æ–º (–±–æ–ª–∏, –∫–æ–ª–∏–∫–∏, —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏–ª–∏ –∑–∞–ø–æ—Ä—ã)" },
        { id: 17, text: "–Ø –≤–∑–≤–æ–ª–Ω–æ–≤–∞–Ω(–∞), –æ–±–µ—Å–ø–æ–∫–æ–µ–Ω(–∞) –∏–ª–∏ —Å–º—É—â–µ–Ω(–∞)" },
        { id: 18, text: "–Ø –ª–µ–≥–∫–æ –ø—É–≥–∞—é—Å—å; —à—É–º –∏–ª–∏ –≥—Ä–æ—Ö–æ—Ç –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ–Ω—è –≤–∑–¥—Ä–∞–≥–∏–≤–∞—Ç—å" },
        { id: 19, text: "–ú–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±–æ–ª–µ–µ —á–µ–º –ø–æ–ª—á–∞—Å–∞ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞—Å–Ω—É—Ç—å" },
        { id: 20, text: "–Ø —Å–±–∏—Ç(–∞) —Å —Ç–æ–ª–∫—É; –º–æ–∏ –º—ã—Å–ª–∏ —Å–ø—É—Ç–∞–Ω—ã; –º–Ω–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–µ–Ω–Ω–æ—Å—Ç–∏, –∏ —è –Ω–µ –º–æ–≥—É —Å–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ" },
        { id: 21, text: "–£ –º–µ–Ω—è —É—Å—Ç–∞–ª—ã–π –≤–∏–¥; –º–µ—à–∫–∏ –∏–ª–∏ –∫—Ä—É–≥–∏ –ø–æ–¥ –≥–ª–∞–∑–∞–º–∏" },
        { id: 22, text: "–Ø —á—É–≤—Å—Ç–≤—É—é —Ç—è–∂–µ—Å—Ç—å –Ω–∞ —Å–≤–æ–∏—Ö –ø–ª–µ—á–∞—Ö" },
        { id: 23, text: "–Ø –≤—Å—Ç—Ä–µ–≤–æ–∂–µ–Ω(–∞). –ú–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –¥–≤–∏–≥–∞—Ç—å—Å—è; —è –Ω–µ –º–æ–≥—É —É—Å—Ç–æ—è—Ç—å –Ω–∞ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ" },
        { id: 24, text: "–ú–Ω–µ —Ç—Ä—É–¥–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –ø–æ—Å—Ç—É–ø–∫–∏, —ç–º–æ—Ü–∏–∏, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏–ª–∏ –∂–µ—Å—Ç—ã" },
        { id: 25, text: "–Ø —á—É–≤—Å—Ç–≤—É—é –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω–æ—Å—Ç—å" }
    ]
};

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ –≤—ã–≥–æ—Ä–∞–Ω–∏—è
const burnoutTestData = {
    name: "–û–ø—Ä–æ—Å–Ω–∏–∫ –≤—ã–≥–æ—Ä–∞–Ω–∏—è",
    questions: [
        { id: 1, text: "–Ø —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ–ø—É—Å—Ç–æ—à–µ–Ω–Ω—ã–º", scale: "emotional" },
        { id: 2, text: "–ü–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –∫–∞–∫ ¬´–≤—ã–∂–∞—Ç—ã–π –ª–∏–º–æ–Ω¬ª", scale: "emotional" },
        { id: 3, text: "–£—Ç—Ä–æ–º —è —á—É–≤—Å—Ç–≤—É—é —É—Å—Ç–∞–ª–æ—Å—Ç—å –∏ –Ω–µ–∂–µ–ª–∞–Ω–∏–µ –∏–¥—Ç–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É", scale: "emotional" },
        { id: 4, text: "–Ø —Ö–æ—Ä–æ—à–æ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —á—É–≤—Å—Ç–≤—É—é—Ç –º–æ–∏ –ø–æ–¥—á–∏–Ω–µ–Ω–Ω—ã–µ –∏ –∫–æ–ª–ª–µ–≥–∏, –∏ —Å—Ç–∞—Ä–∞—é—Å—å —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ –≤ –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö –¥–µ–ª–∞", scale: "professional", reverse: true },
        { id: 5, text: "–Ø —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –æ–±—â–∞—é—Å—å —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –ø–æ–¥—á–∏–Ω–µ–Ω–Ω—ã–º–∏ –∏ –∫–æ–ª–ª–µ–≥–∞–º–∏ –∫–∞–∫ —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ (–±–µ–∑ —Ç–µ–ø–ª–æ—Ç—ã –∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫ –Ω–∏–º)", scale: "depersonalization" },
        { id: 6, text: "–ü–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è —Ö–æ—á–µ—Ç—Å—è —É–µ–¥–∏–Ω–∏—Ç—å—Å—è –æ—Ç –≤—Å–µ—Ö –∏ –≤—Å–µ–≥–æ", scale: "emotional", reverse: true },
        { id: 7, text: "–Ø —É–º–µ—é –Ω–∞—Ö–æ–¥–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏—Ö –ø—Ä–∏ –æ–±—â–µ–Ω–∏–∏ —Å –∫–æ–ª–ª–µ–≥–∞–º–∏", scale: "professional" },
        { id: 8, text: "–Ø —á—É–≤—Å—Ç–≤—É—é —É–≥–Ω–µ—Ç–µ–Ω–Ω–æ—Å—Ç—å –∏ –∞–ø–∞—Ç–∏—é", scale: "emotional" },
        { id: 9, text: "–Ø —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –º–æ—è —Ä–∞–±–æ—Ç–∞ –Ω—É–∂–Ω–∞ –ª—é–¥—è–º", scale: "professional" },
        { id: 10, text: "–í –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —è —Å—Ç–∞–ª –±–æ–ª–µ–µ ¬´—á–µ—Ä—Å—Ç–≤—ã–º¬ª –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ —Ç–µ–º, —Å –∫–µ–º —Ä–∞–±–æ—Ç–∞—é", scale: "depersonalization" },
        { id: 11, text: "–Ø –∑–∞–º–µ—á–∞—é, —á—Ç–æ –º–æ—è —Ä–∞–±–æ—Ç–∞ –æ–∂–µ—Å—Ç–æ—á–∞–µ—Ç –º–µ–Ω—è", scale: "depersonalization" },
        { id: 12, text: "–£ –º–µ–Ω—è –º–Ω–æ–≥–æ –ø–ª–∞–Ω–æ–≤ –Ω–∞ –±—É–¥—É—â–µ–µ, –∏ —è –≤–µ—Ä—é –≤ –∏—Ö –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏–µ", scale: "professional" },
        { id: 13, text: "–ú–æ—è —Ä–∞–±–æ—Ç–∞ –≤—Å–µ –±–æ–ª—å—à–µ –º–µ–Ω—è —Ä–∞–∑–æ—á–∞—Ä–æ–≤—ã–≤–∞–µ—Ç", scale: "emotional" },
        { id: 14, text: "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ —è —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ä–∞–±–æ—Ç–∞—é", scale: "emotional" },
        { id: 15, text: "–ë—ã–≤–∞–µ—Ç, —á—Ç–æ –º–Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –±–µ–∑—Ä–∞–∑–ª–∏—á–Ω–æ —Ç–æ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –º–æ–∏–º–∏ –ø–æ–¥—á–∏–Ω–µ–Ω–Ω—ã–º–∏ –∏ –∫–æ–ª–ª–µ–≥–∞–º–∏", scale: "depersonalization" },
        { id: 16, text: "–ú–Ω–µ —Ö–æ—á–µ—Ç—Å—è —É–µ–¥–∏–Ω–∏—Ç—å—Å—è –∏ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –æ—Ç –≤—Å–µ–≥–æ –∏ –≤—Å–µ—Ö", scale: "emotional" },
        { id: 17, text: "–Ø –ª–µ–≥–∫–æ –º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –≤ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–µ", scale: "professional" },
        { id: 18, text: "–í–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —è —á—É–≤—Å—Ç–≤—É—é –ø—Ä–∏—è—Ç–Ω–æ–µ –æ–∂–∏–≤–ª–µ–Ω–∏–µ", scale: "professional" },
        { id: 19, text: "–ë–ª–∞–≥–æ–¥–∞—Ä—è —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç–µ —è —É–∂–µ —Å–¥–µ–ª–∞–ª –≤ –∂–∏–∑–Ω–∏ –º–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ü–µ–Ω–Ω–æ–≥–æ", scale: "professional" },
        { id: 20, text: "–Ø —á—É–≤—Å—Ç–≤—É—é —Ä–∞–≤–Ω–æ–¥—É—à–∏–µ –∏ –ø–æ—Ç–µ—Ä—é –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫–æ –º–Ω–æ–≥–æ–º—É, —á—Ç–æ —Ä–∞–¥–æ–≤–∞–ª–æ –º–µ–Ω—è –≤ –º–æ–µ–π —Ä–∞–±–æ—Ç–µ", scale: "emotional" },
        { id: 21, text: "–ù–∞ —Ä–∞–±–æ—Ç–µ —è —Å–ø–æ–∫–æ–π–Ω–æ —Å–ø—Ä–∞–≤–ª—è—é—Å—å —Å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏", scale: "professional" },
        { id: 22, text: "–í –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –∫–æ–ª–ª–µ–≥–∏ –∏ –ø–æ–¥—á–∏–Ω–µ–Ω–Ω—ã–µ –≤—Å–µ —á–∞—â–µ –ø–µ—Ä–µ–∫–ª–∞–¥—ã–≤–∞—é—Ç –Ω–∞ –º–µ–Ω—è –≥—Ä—É–∑ —Å–≤–æ–∏—Ö –ø—Ä–æ–±–ª–µ–º –∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π", scale: "depersonalization" }
    ]
};

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ —Ç—Ä–µ–≤–æ–≥–∏ (Spielberger-Khanin)
const anxietyTestData = {
    name: "–®–∫–∞–ª–∞ —Ç—Ä–µ–≤–æ–≥–∏",
    stateQuestions: [ // –°–∏—Ç—É–∞—Ü–∏–æ–Ω–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å (1-20)
        { id: 1, text: "–Ø —Å–ø–æ–∫–æ–µ–Ω", reverse: true },
        { id: 2, text: "–ú–Ω–µ –Ω–∏—á—Ç–æ –Ω–µ —É–≥—Ä–æ–∂–∞–µ—Ç", reverse: true },
        { id: 3, text: "–Ø –Ω–∞—Ö–æ–∂—É—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è" },
        { id: 4, text: "–Ø –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ —Å–ø–æ–∫–æ–µ–Ω", reverse: true },
        { id: 5, text: "–Ø —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —Å–ø–æ–∫–æ–π–Ω–æ", reverse: true },
        { id: 6, text: "–Ø —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω" },
        { id: 7, text: "–ú–µ–Ω—è –≤–æ–ª–Ω—É—é—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –Ω–µ—É–¥–∞—á–∏" },
        { id: 8, text: "–Ø –æ—â—É—â–∞—é –¥—É—à–µ–≤–Ω—ã–π –ø–æ–∫–æ–π", reverse: true },
        { id: 9, text: "–Ø –≤—Å—Ç—Ä–µ–≤–æ–∂–µ–Ω" },
        { id: 10, text: "–Ø –∏—Å–ø—ã—Ç—ã–≤–∞—é —á—É–≤—Å—Ç–≤–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏—è", reverse: true },
        { id: 11, text: "–Ø —É–≤–µ—Ä–µ–Ω –≤ —Å–µ–±–µ", reverse: true },
        { id: 12, text: "–Ø –Ω–µ—Ä–≤–Ω–∏—á–∞—é" },
        { id: 13, text: "–Ø –Ω–µ –Ω–∞—Ö–æ–∂—É —Å–µ–±–µ –º–µ—Å—Ç–∞" },
        { id: 14, text: "–Ø –≤–∑–≤–∏–Ω—á–µ–Ω" },
        { id: 15, text: "–Ø –Ω–µ —á—É–≤—Å—Ç–≤—É—é —Å–∫–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏ –∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è", reverse: true },
        { id: 16, text: "–Ø –¥–æ–≤–æ–ª–µ–Ω", reverse: true },
        { id: 17, text: "–Ø –æ–∑–∞–±–æ—á–µ–Ω" },
        { id: 18, text: "–Ø —Å–ª–∏—à–∫–æ–º –≤–æ–∑–±—É–∂–¥–µ–Ω, –∏ –º–Ω–µ –Ω–µ –ø–æ —Å–µ–±–µ" },
        { id: 19, text: "–ú–Ω–µ —Ä–∞–¥–æ—Å—Ç–Ω–æ", reverse: true },
        { id: 20, text: "–ú–Ω–µ –ø—Ä–∏—è—Ç–Ω–æ", reverse: true }
    ],
    traitQuestions: [ // –õ–∏—á–Ω–æ—Å—Ç–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å (21-40)
        { id: 21, text: "–£ –º–µ–Ω—è –±—ã–≤–∞–µ—Ç –ø—Ä–∏–ø–æ–¥–Ω—è—Ç–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", reverse: true },
        { id: 22, text: "–Ø –±—ã–≤–∞—é —Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω—ã–º" },
        { id: 23, text: "–Ø –ª–µ–≥–∫–æ –º–æ–≥—É —Ä–∞—Å—Å—Ç—Ä–æ–∏—Ç—å—Å—è" },
        { id: 24, text: "–Ø —Ö–æ—Ç–µ–ª –±—ã –±—ã—Ç—å —Ç–∞–∫–∏–º –∂–µ —É–¥–∞—á–ª–∏–≤—ã–º, –∫–∞–∫ –¥—Ä—É–≥–∏–µ" },
        { id: 25, text: "–Ø —Å–∏–ª—å–Ω–æ –ø–µ—Ä–µ–∂–∏–≤–∞—é –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ—Å—Ç–∏ –∏ –¥–æ–ª–≥–æ –Ω–µ –º–æ–≥—É –æ –Ω–∏—Ö –∑–∞–±—ã—Ç—å" },
        { id: 26, text: "–Ø —á—É–≤—Å—Ç–≤—É—é –ø—Ä–∏–ª–∏–≤ —Å–∏–ª, –∂–µ–ª–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—Ç—å", reverse: true },
        { id: 27, text: "–Ø —Å–ø–æ–∫–æ–µ–Ω, —Ö–ª–∞–¥–Ω–æ–∫—Ä–æ–≤–µ–Ω –∏ —Å–æ–±—Ä–∞–Ω", reverse: true },
        { id: 28, text: "–ú–µ–Ω—è —Ç—Ä–µ–≤–æ–∂–∞—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏" },
        { id: 29, text: "–Ø —Å–ª–∏—à–∫–æ–º –ø–µ—Ä–µ–∂–∏–≤–∞—é –∏–∑-–∑–∞ –ø—É—Å—Ç—è–∫–æ–≤" },
        { id: 30, text: "–Ø –±—ã–≤–∞—é –≤–ø–æ–ª–Ω–µ —Å—á–∞—Å—Ç–ª–∏–≤", reverse: true },
        { id: 31, text: "–Ø –≤—Å–µ –ø—Ä–∏–Ω–∏–º–∞—é –±–ª–∏–∑–∫–æ –∫ —Å–µ—Ä–¥—Ü—É" },
        { id: 32, text: "–ú–Ω–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –∫ —Å–µ–±–µ" },
        { id: 33, text: "–Ø —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –±–µ–∑–∑–∞—â–∏—Ç–Ω—ã–º" },
        { id: 34, text: "–Ø —Å—Ç–∞—Ä–∞—é—Å—å –∏–∑–±–µ–≥–∞—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π –∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π" },
        { id: 35, text: "–£ –º–µ–Ω—è –±—ã–≤–∞–µ—Ç —Ö–∞–Ω–¥—Ä–∞" },
        { id: 36, text: "–Ø –±—ã–≤–∞—é –¥–æ–≤–æ–ª–µ–Ω", reverse: true },
        { id: 37, text: "–í—Å—è–∫–∏–µ –ø—É—Å—Ç—è–∫–∏ –æ—Ç–≤–ª–µ–∫–∞—é—Ç –∏ –≤–æ–ª–Ω—É—é—Ç –º–µ–Ω—è" },
        { id: 38, text: "–ë—ã–≤–∞–µ—Ç, —á—Ç–æ —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –Ω–µ—É–¥–∞—á–Ω–∏–∫–æ–º" },
        { id: 39, text: "–Ø —É–≤–µ—Ä–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫", reverse: true },
        { id: 40, text: "–ú–µ–Ω—è –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–æ, –∫–æ–≥–¥–∞ —è –¥—É–º–∞—é –æ —Å–≤–æ–∏—Ö –¥–µ–ª–∞—Ö –∏ –∑–∞–±–æ—Ç–∞—Ö" }
    ]
};

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ –®–∫–∞–ª–∞ –¥–µ–ø—Ä–µ—Å—Å–∏–∏ –ë–µ–∫–∞
const beckDepressionTestData = {
    name: "–®–∫–∞–ª–∞ –¥–µ–ø—Ä–µ—Å—Å–∏–∏ –ë–µ–∫–∞",
    questions: [
        { id: 1, text: "–Ø –Ω–µ —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º, –ø–µ—á–∞–ª—å–Ω—ã–º", score: 0 },
        { id: 1, text: "–Ø —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω", score: 1 },
        { id: 1, text: "–Ø –≤—Å–µ –≤—Ä–µ–º—è —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω –∏ –Ω–µ –º–æ–≥—É –æ—Ç —ç—Ç–æ–≥–æ –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è", score: 2 },
        { id: 1, text: "–Ø –Ω–∞—Å—Ç–æ–ª—å–∫–æ —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω –∏ –Ω–µ—Å—á–∞—Å—Ç–ª–∏–≤, —á—Ç–æ –Ω–µ –º–æ–≥—É —ç—Ç–æ –≤—ã–¥–µ—Ä–∂–∞—Ç—å", score: 3 },
        
        { id: 2, text: "–Ø –Ω–µ —Ç—Ä–µ–≤–æ–∂—É—Å—å –æ —Å–≤–æ–µ–º –±—É–¥—É—â–µ–º", score: 0 },
        { id: 2, text: "–Ø —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –æ–∑–∞–¥–∞—á–µ–Ω –±—É–¥—É—â–∏–º", score: 1 },
        { id: 2, text: "–Ø —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –º–µ–Ω—è –Ω–∏—á–µ–≥–æ –Ω–µ –∂–¥–µ—Ç –≤ –±—É–¥—É—â–µ–º", score: 2 },
        { id: 2, text: "–ú–æ–µ –±—É–¥—É—â–µ–µ –±–µ–∑–Ω–∞–¥–µ–∂–Ω–æ, –∏ –Ω–∏—á—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –∫ –ª—É—á—à–µ–º—É", score: 3 },
        
        { id: 3, text: "–Ø –Ω–µ —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –Ω–µ—É–¥–∞—á–Ω–∏–∫–æ–º", score: 0 },
        { id: 3, text: "–Ø —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ —Ç–µ—Ä–ø–µ–ª –±–æ–ª—å—à–µ –Ω–µ—É–¥–∞—á, —á–µ–º –¥—Ä—É–≥–∏–µ –ª—é–¥–∏", score: 1 },
        { id: 3, text: "–ö–æ–≥–¥–∞ —è –æ–≥–ª—è–¥—ã–≤–∞—é—Å—å –Ω–∞ —Å–≤–æ—é –∂–∏–∑–Ω—å, —è –≤–∏–∂—É –≤ –Ω–µ–π –º–Ω–æ–≥–æ –Ω–µ—É–¥–∞—á", score: 2 },
        { id: 3, text: "–Ø —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –∫–∞–∫ –ª–∏—á–Ω–æ—Å—Ç—å —è - –ø–æ–ª–Ω—ã–π –Ω–µ—É–¥–∞—á–Ω–∏–∫", score: 3 },
        
        { id: 4, text: "–Ø –ø–æ–ª—É—á–∞—é —Å—Ç–æ–ª—å–∫–æ –∂–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏—è –æ—Ç –∂–∏–∑–Ω–∏, –∫–∞–∫ —Ä–∞–Ω—å—à–µ", score: 0 },
        { id: 4, text: "–Ø –Ω–µ –ø–æ–ª—É—á–∞—é —Å—Ç–æ–ª—å–∫–æ –∂–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏—è –æ—Ç –∂–∏–∑–Ω–∏, –∫–∞–∫ —Ä–∞–Ω—å—à–µ", score: 1 },
        { id: 4, text: "–Ø –±–æ–ª—å—à–µ –Ω–µ –ø–æ–ª—É—á–∞—é —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏—è –Ω–∏ –æ—Ç —á–µ–≥–æ", score: 2 },
        { id: 4, text: "–Ø –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω –∂–∏–∑–Ω—å—é –∏ –º–Ω–µ –≤—Å–µ –Ω–∞–¥–æ–µ–ª–æ", score: 3 },
        
        { id: 5, text: "–Ø –Ω–µ —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –≤ —á–µ–º-–Ω–∏–±—É–¥—å –≤–∏–Ω–æ–≤–∞—Ç—ã–º", score: 0 },
        { id: 5, text: "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —á–∞—Å—Ç–æ —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –≤–∏–Ω–æ–≤–∞—Ç—ã–º", score: 1 },
        { id: 5, text: "–ë–æ–ª—å—à—É—é —á–∞—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏ —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –≤–∏–Ω–æ–≤–∞—Ç—ã–º", score: 2 },
        { id: 5, text: "–Ø –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∏—Å–ø—ã—Ç—ã–≤–∞—é —á—É–≤—Å—Ç–≤–æ –≤–∏–Ω—ã", score: 3 },
        
        { id: 6, text: "–Ø –Ω–µ —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –º–æ–≥—É –±—ã—Ç—å –Ω–∞–∫–∞–∑–∞–Ω–Ω—ã–º –∑–∞ —á—Ç–æ-–ª–∏–±–æ", score: 0 },
        { id: 6, text: "–Ø —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –º–æ–≥—É –±—ã—Ç—å –Ω–∞–∫–∞–∑–∞–Ω", score: 1 },
        { id: 6, text: "–Ø –æ–∂–∏–¥–∞—é, —á—Ç–æ –º–æ–≥—É –±—ã—Ç—å –Ω–∞–∫–∞–∑–∞–Ω", score: 2 },
        { id: 6, text: "–Ø —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —É–∂–µ –Ω–∞–∫–∞–∑–∞–Ω–Ω—ã–º", score: 3 },
        
        { id: 7, text: "–Ø –Ω–µ —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–ª—Å—è –≤ —Å–µ–±–µ", score: 0 },
        { id: 7, text: "–Ø —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–ª—Å—è –≤ —Å–µ–±–µ", score: 1 },
        
        { id: 8, text: "–Ø –Ω–µ —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —Ö—É–∂–µ –¥—Ä—É–≥–∏—Ö", score: 0 },
        { id: 8, text: "–Ø –∫—Ä–∏—Ç–∏–∫—É—é —Å–µ–±—è –∑–∞ —Å–ª–∞–±–æ—Å—Ç–∏ –∏ –æ—à–∏–±–∫–∏", score: 1 },
        { id: 8, text: "–Ø –≤–∏–Ω—é —Å–µ–±—è –∑–∞ –≤—Å–µ –ø–ª–æ—Ö–æ–µ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç", score: 2 },
        { id: 8, text: "–Ø –≤–∏–Ω—é —Å–µ–±—è –≤–æ –≤—Å–µ–º –ø–ª–æ—Ö–æ–º, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç", score: 3 },
        
        { id: 9, text: "–Ø –Ω–µ –¥—É–º–∞—é –æ —Ç–æ–º, —á—Ç–æ–±—ã –ø–æ–∫–æ–Ω—á–∏—Ç—å —Å —Å–æ–±–æ–π", score: 0 },
        { id: 9, text: "–£ –º–µ–Ω—è –µ—Å—Ç—å –º—ã—Å–ª–∏ –ø–æ–∫–æ–Ω—á–∏—Ç—å —Å —Å–æ–±–æ–π, –Ω–æ —è –Ω–µ –±—É–¥—É —ç—Ç–æ–≥–æ –¥–µ–ª–∞—Ç—å", score: 1 },
        { id: 9, text: "–Ø —Ö–æ—Ç–µ–ª –±—ã –ø–æ–∫–æ–Ω—á–∏—Ç—å —Å —Å–æ–±–æ–π", score: 2 },
        { id: 9, text: "–Ø –±—ã –ø–æ–∫–æ–Ω—á–∏–ª —Å —Å–æ–±–æ–π, –µ—Å–ª–∏ –±—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞—Å—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å", score: 3 },
        
        { id: 10, text: "–Ø –ø–ª–∞—á—É –Ω–µ –±–æ–ª—å—à–µ –æ–±—ã—á–Ω–æ–≥–æ", score: 0 },
        { id: 10, text: "–°–µ–π—á–∞—Å —è –ø–ª–∞—á—É –±–æ–ª—å—à–µ, —á–µ–º —Ä–∞–Ω—å—à–µ", score: 1 },
        { id: 10, text: "–°–µ–π—á–∞—Å —è –≤—Å–µ –≤—Ä–µ–º—è –ø–ª–∞—á—É", score: 2 },
        { id: 10, text: "–†–∞–Ω—å—à–µ —è –º–æ–≥ –ø–ª–∞–∫–∞—Ç—å, –Ω–æ —Ç–µ–ø–µ—Ä—å –Ω–µ –º–æ–≥—É, –¥–∞–∂–µ –µ—Å–ª–∏ —Ö–æ—á–µ—Ç—Å—è", score: 3 },
        
        { id: 11, text: "–°–µ–π—á–∞—Å —è –Ω–µ –±–æ–ª–µ–µ —Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª–µ–Ω, —á–µ–º –æ–±—ã—á–Ω–æ", score: 0 },
        { id: 11, text: "–Ø –±–æ–ª–µ–µ –ª–µ–≥–∫–æ —Ä–∞–∑–¥—Ä–∞–∂–∞—é—Å—å, —á–µ–º —Ä–∞–Ω—å—à–µ", score: 1 },
        { id: 11, text: "–°–µ–π—á–∞—Å —è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —á—É–≤—Å—Ç–≤—É—é —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ", score: 2 },
        { id: 11, text: "–Ø —Å—Ç–∞–ª —Ä–∞–≤–Ω–æ–¥—É—à–µ–Ω –∫ –≤–µ—â–∞–º, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–Ω—å—à–µ –º–µ–Ω—è —Ä–∞–∑–¥—Ä–∞–∂–∞–ª–∏", score: 3 },
        
        { id: 12, text: "–Ø –Ω–µ –ø–æ—Ç–µ—Ä—è–ª –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ –¥—Ä—É–≥–∏–º –ª—é–¥—è–º", score: 0 },
        { id: 12, text: "–Ø –º–µ–Ω—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Å—å –¥—Ä—É–≥–∏–º–∏ –ª—é–¥—å–º–∏, —á–µ–º —Ä–∞–Ω—å—à–µ", score: 1 },
        { id: 12, text: "–Ø –ø–æ—Ç–µ—Ä—è–ª –±–æ–ª—å—à—É—é —á–∞—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ –¥—Ä—É–≥–∏–º –ª—é–¥—è–º", score: 2 },
        { id: 12, text: "–Ø –ø–æ—Ç–µ—Ä—è–ª –≤—Å—è–∫–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∫ –¥—Ä—É–≥–∏–º –ª—é–¥—è–º", score: 3 },
        
        { id: 13, text: "–Ø –ø—Ä–∏–Ω–∏–º–∞—é —Ä–µ—à–µ–Ω–∏—è —Ç–∞–∫ –∂–µ —Ö–æ—Ä–æ—à–æ, –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ", score: 0 },
        { id: 13, text: "–Ø –æ—Ç–∫–ª–∞–¥—ã–≤–∞—é –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π –Ω–∞ –ø–æ—Ç–æ–º", score: 1 },
        { id: 13, text: "–ú–Ω–µ —Ç—Ä—É–¥–Ω–µ–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è, —á–µ–º —Ä–∞–Ω—å—à–µ", score: 2 },
        { id: 13, text: "–Ø –±–æ–ª—å—à–µ –Ω–µ –º–æ–≥—É –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è", score: 3 },
        
        { id: 14, text: "–Ø –Ω–µ —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –≤—ã–≥–ª—è–∂—É —Ö—É–∂–µ, —á–µ–º –æ–±—ã—á–Ω–æ", score: 0 },
        { id: 14, text: "–ú–µ–Ω—è –±–µ—Å–ø–æ–∫–æ–∏—Ç, —á—Ç–æ —è –≤—ã–≥–ª—è–∂—É —Å—Ç–∞—Ä—ã–º –∏–ª–∏ –Ω–µ–ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º", score: 1 },
        { id: 14, text: "–Ø –∑–Ω–∞—é, —á—Ç–æ –≤ –º–æ–µ–π –≤–Ω–µ—à–Ω–æ—Å—Ç–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –º–µ–Ω—è –Ω–µ–ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º", score: 2 },
        { id: 14, text: "–Ø –∑–Ω–∞—é, —á—Ç–æ –≤—ã–≥–ª—è–∂—É –Ω–µ–ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ", score: 3 },
        
        { id: 15, text: "–Ø –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–∞–∫ –∂–µ —Ö–æ—Ä–æ—à–æ, –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ", score: 0 },
        { id: 15, text: "–ú–Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É—Å–∏–ª–∏–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —á—Ç–æ-—Ç–æ –¥–µ–ª–∞—Ç—å", score: 1 },
        { id: 15, text: "–Ø —Å —Ç—Ä—É–¥–æ–º –∑–∞—Å—Ç–∞–≤–ª—è—é —Å–µ–±—è –¥–µ–ª–∞—Ç—å —á—Ç–æ-–ª–∏–±–æ", score: 2 },
        { id: 15, text: "–Ø —Å–æ–≤—Å–µ–º –Ω–µ –º–æ–≥—É –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–∏–∫–∞–∫—É—é —Ä–∞–±–æ—Ç—É", score: 3 },
        
        { id: 16, text: "–Ø —Å–ø–ª—é —Ç–∞–∫ –∂–µ —Ö–æ—Ä–æ—à–æ, –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ", score: 0 },
        { id: 16, text: "–°–µ–π—á–∞—Å —è —Å–ø–ª—é —Ö—É–∂–µ, —á–µ–º —Ä–∞–Ω—å—à–µ", score: 1 },
        { id: 16, text: "–Ø –ø—Ä–æ—Å—ã–ø–∞—é—Å—å –Ω–∞ 1-2 —á–∞—Å–∞ —Ä–∞–Ω—å—à–µ –æ–±—ã—á–Ω–æ–≥–æ –∏ —Å —Ç—Ä—É–¥–æ–º –∑–∞—Å—ã–ø–∞—é —Å–Ω–æ–≤–∞", score: 2 },
        { id: 16, text: "–Ø –ø—Ä–æ—Å—ã–ø–∞—é—Å—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ —Ä–∞–Ω—å—à–µ –æ–±—ã—á–Ω–æ–≥–æ –∏ –±–æ–ª—å—à–µ –Ω–µ –º–æ–≥—É –∑–∞—Å–Ω—É—Ç—å", score: 3 },
        
        { id: 17, text: "–Ø —É—Å—Ç–∞—é –Ω–µ –±–æ–ª—å—à–µ, —á–µ–º –æ–±—ã—á–Ω–æ", score: 0 },
        { id: 17, text: "–¢–µ–ø–µ—Ä—å —è —É—Å—Ç–∞—é –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º —Ä–∞–Ω—å—à–µ", score: 1 },
        { id: 17, text: "–Ø —É—Å—Ç–∞—é –ø–æ—á—Ç–∏ –æ—Ç –≤—Å–µ–≥–æ, —á—Ç–æ —è –¥–µ–ª–∞—é", score: 2 },
        { id: 17, text: "–Ø –Ω–µ –º–æ–≥—É –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å –∏–∑-–∑–∞ —É—Å—Ç–∞–ª–æ—Å—Ç–∏", score: 3 },
        
        { id: 18, text: "–ú–æ–π –∞–ø–ø–µ—Ç–∏—Ç –Ω–µ —Ö—É–∂–µ, —á–µ–º –æ–±—ã—á–Ω–æ", score: 0 },
        { id: 18, text: "–ú–æ–π –∞–ø–ø–µ—Ç–∏—Ç —Å—Ç–∞–ª —Ö—É–∂–µ, —á–µ–º —Ä–∞–Ω—å—à–µ", score: 1 },
        { id: 18, text: "–ú–æ–π –∞–ø–ø–µ—Ç–∏—Ç —Ç–µ–ø–µ—Ä—å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —Ö—É–∂–µ", score: 2 },
        { id: 18, text: "–£ –º–µ–Ω—è –≤–æ–æ–±—â–µ –Ω–µ—Ç –∞–ø–ø–µ—Ç–∏—Ç–∞", score: 3 },
        
        { id: 19, text: "–í –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —è –Ω–µ –ø–æ—Ö—É–¥–µ–ª –∏–ª–∏ –ø–æ—Ç–µ—Ä—è –≤–µ—Å–∞ –±—ã–ª–∞ –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–π", score: 0 },
        { id: 19, text: "–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —è –ø–æ—Ç–µ—Ä—è–ª –±–æ–ª–µ–µ 2 –∫–≥", score: 1 },
        { id: 19, text: "–Ø –ø–æ—Ç–µ—Ä—è–ª –±–æ–ª–µ–µ 5 –∫–≥", score: 2 },
        { id: 19, text: "–Ø –ø–æ—Ç–µ—Ä—è–ª –±–æ–ª–µ–µ 7 –∫–≥", score: 3 },
        
        { id: 20, text: "–Ø –±–µ—Å–ø–æ–∫–æ—é—Å—å –æ —Å–≤–æ–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –Ω–µ –±–æ–ª—å—à–µ, —á–µ–º –æ–±—ã—á–Ω–æ", score: 0 },
        { id: 20, text: "–ú–µ–Ω—è –±–µ—Å–ø–æ–∫–æ—è—Ç –ø—Ä–æ–±–ª–µ–º—ã —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è, —Ç–∞–∫–∏–µ –∫–∞–∫ –±–æ–ª–∏, —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∂–µ–ª—É–¥–∫–∞, –∑–∞–ø–æ—Ä—ã –∏ —Ç.–¥.", score: 1 },
        { id: 20, text: "–Ø –æ—á–µ–Ω—å –æ–±–µ—Å–ø–æ–∫–æ–µ–Ω —Å–≤–æ–∏–º —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, –∏ –º–Ω–µ —Ç—Ä—É–¥–Ω–æ –¥—É–º–∞—Ç—å –æ —á–µ–º-—Ç–æ –¥—Ä—É–≥–æ–º", score: 2 },
        { id: 20, text: "–Ø –Ω–∞—Å—Ç–æ–ª—å–∫–æ –æ–±–µ—Å–ø–æ–∫–æ–µ–Ω —Å–≤–æ–∏–º —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, —á—Ç–æ –±–æ–ª—å—à–µ –Ω–∏ –æ —á–µ–º –Ω–µ –º–æ–≥—É –¥—É–º–∞—Ç—å", score: 3 },
        
        { id: 21, text: "–í –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —è –Ω–µ –∑–∞–º–µ—á–∞–ª –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ —Å–µ–∫—Å—É", score: 0 },
        { id: 21, text: "–ú–µ–Ω—è –º–µ–Ω—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Å–µ–∫—Å, —á–µ–º —Ä–∞–Ω—å—à–µ", score: 1 },
        { id: 21, text: "–°–µ–π—á–∞—Å —è –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –º–µ–Ω—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Å—å —Å–µ–∫—Å–æ–º", score: 2 },
        { id: 21, text: "–Ø –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ—Ç–µ—Ä—è–ª –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Å–µ–∫—Å—É", score: 3 }
    ]
};

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ –Ω–∞ –±—É–ª–ª–∏–Ω–≥
const bullyingTestData = {
    name: "–û–ø—Ä–æ—Å–Ω–∏–∫ —Ä–∏—Å–∫–∞ –±—É–ª–ª–∏–Ω–≥–∞",
    description: "–û—Ü–µ–Ω–∫–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ –∏ —Ä–∏—Å–∫–∞ –±—É–ª–ª–∏–Ω–≥–∞",
    sections: [
        {
            id: 1,
            title: "–í –≤–∞—à–µ–π –≥—Ä—É–ø–ø–µ –ø—Ä–∏–Ω—è—Ç–æ...",
            questions: [
                { id: "1.1", text: "–º–µ—à–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥—É, –ª–µ–∑—Ç—å, –ø—Ä–∏—Å—Ç–∞–≤–∞—Ç—å", scale: "insecurity" },
                { id: "1.2", text: "–≤–º–µ—Å—Ç–µ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –ø–∞—Ä", scale: "wellbeing", reverse: true },
                { id: "1.3", text: "—à—É—Ç–∏—Ç—å –Ω–∞–¥ –∫–µ–º-–Ω–∏–±—É–¥—å —Ç–∞–∫, —á—Ç–æ–±—ã —Å–º–µ—è–ª–∞—Å—å –≤—Å—è –≥—Ä—É–ø–ø–∞", scale: "insecurity" },
                { id: "1.4", text: "–¥—Ä–∞—Ç—å—Å—è", scale: "disunity" },
                { id: "1.5", text: "—Ö–æ–¥–∏—Ç—å –¥—Ä—É–≥ –∫ –¥—Ä—É–≥—É –≤ –≥–æ—Å—Ç–∏", scale: "wellbeing", reverse: true },
                { id: "1.6", text: "–∑–∞—Å—Ç—É–ø–∞—Ç—å—Å—è –∑–∞ —Å–≤–æ–∏—Ö", scale: "wellbeing", reverse: true },
                { id: "1.7", text: "–æ–±–∑—ã–≤–∞—Ç—å—Å—è", scale: "insecurity" },
                { id: "1.8", text: "–Ω–µ –º–µ—à–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥—É –∑–∞–Ω–∏–º–∞—Ç—å—Å—è, —á–µ–º –∑–∞—Ö–æ—á–µ—Ç—Å—è", scale: "insecurity", reverse: true }
            ]
        },
        {
            id: 2,
            title: "–í –≤–∞—à–µ–π –≥—Ä—É–ø–ø–µ –µ—Å—Ç—å –∫—Ç–æ-—Ç–æ...",
            questions: [
                { id: "2.1", text: "–∫–æ–≥–æ –≤—Å–µ —É–≤–∞–∂–∞—é—Ç", scale: "equality" },
                { id: "2.2", text: "–∫–æ–≥–æ –≤—Å–µ –±–æ—è—Ç—Å—è", scale: "equality" },
                { id: "2.3", text: "–Ω–∞–¥ –∫–µ–º –≤—Å–µ —Å–º–µ—é—Ç—Å—è", scale: "insecurity" },
                { id: "2.4", text: "–∫–µ–º —á–∞—Å—Ç–æ –Ω–µ–¥–æ–≤–æ–ª—å–Ω—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏", scale: "insecurity" },
                { id: "2.5", text: "–Ω–∞ –∫–æ–≥–æ —Ö–æ—á–µ—Ç—Å—è –±—ã—Ç—å –ø–æ—Ö–æ–∂–∏–º", scale: "equality" },
                { id: "2.6", text: "—Å –∫–µ–º –ª—É—á—à–µ –Ω–µ —Å–ø–æ—Ä–∏—Ç—å", scale: "equality" },
                { id: "2.7", text: "–∫—Ç–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–æ–≥—É–ª–∏–≤–∞–µ—Ç", scale: "wellbeing" },
                { id: "2.8", text: "—Å –∫–µ–º –¥–∞–∂–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è", scale: "insecurity" }
            ]
        },
        {
            id: 3,
            title: "–ö–∞–∫ –∫ –≤–∞–º –≤ –≥—Ä—É–ø–ø–µ –æ–±—Ä–∞—â–∞—é—Ç—Å—è –æ–±—ã—á–Ω–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏?",
            questions: [
                { id: "3.1", text: "–ø–æ –∏–º–µ–Ω–∏", scale: "wellbeing" },
                { id: "3.2", text: "–ø–æ –∏–º–µ–Ω–∏ –∏ –æ—Ç—á–µ—Å—Ç–≤—É", scale: "equality" },
                { id: "3.3", text: "–ø–æ —Ñ–∞–º–∏–ª–∏–∏", scale: "wellbeing", reverse: true },
                { id: "3.4", text: "–ø–æ –ø—Ä–æ–∑–≤–∏—â–∞–º", scale: "insecurity" }
            ]
        },
        {
            id: 4,
            title: "–ö–æ–≥–¥–∞ –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥—Ä–∞–∫–∞, –≤—ã...",
            questions: [
                { id: "4.1", text: "—É–¥–∏–≤–ª—è–µ—Ç–µ—Å—å", scale: "insecurity", reverse: true },
                { id: "4.2", text: "–Ω–µ –æ–±—Ä–∞—â–∞–µ—Ç–µ –≤–Ω–∏–º–∞–Ω–∏—è, —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ –¥–µ–ª–æ", scale: "disunity" },
                { id: "4.3", text: "–ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç–µ—Å—å, –≤—Å—Ç–∞–≤ –Ω–∞ —á—å—é-—Ç–æ —Å—Ç–æ—Ä–æ–Ω—É", scale: "equality" },
                { id: "4.4", text: "–º–Ω–æ–≥–æ —ç—Ç–æ –ø–æ—Ç–æ–º –æ–±—Å—É–∂–¥–∞–µ—Ç–µ –º–µ–∂–¥—É —Å–æ–±–æ–π –≤ –≥—Ä—É–ø–ø–µ", scale: "equality" }
            ]
        },
        {
            id: 5,
            title: "–¶–µ–Ω–Ω—ã–µ –≤–µ—â–∏...",
            questions: [
                { id: "5.1", text: "—Å—Ç–∞—Ä–∞—é—Å—å –Ω–µ –Ω–æ—Å–∏—Ç—å –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –≤–æ–æ–±—â–µ", scale: "wellbeing", reverse: true },
                { id: "5.2", text: "—Å–ø–æ–∫–æ–π–Ω–æ –æ—Å—Ç–∞–≤–ª—è—é –≤ –∞—É–¥–∏—Ç–æ—Ä–∏–∏", scale: "wellbeing" },
                { id: "5.3", text: "–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ", scale: "wellbeing" },
                { id: "5.4", text: "–±—ã–ª —Å–ª—É—á–∞–π, —á—Ç–æ —É–∫—Ä–∞–ª–∏", scale: "wellbeing", reverse: true },
                { id: "5.5", text: "–æ—Å—Ç–∞–≤–ª—è—é –≤ —Ä–∞–∑–¥–µ–≤–∞–ª–∫–µ", scale: "equality" }
            ]
        },
        {
            id: 6,
            title: "–í—ã–∑–æ–≤ –≤ –¥–µ–∫–∞–Ω–∞—Ç - —ç—Ç–æ...",
            questions: [
                { id: "6.1", text: "—Ö–æ—Ç—è—Ç –∑–∞ —á—Ç–æ-—Ç–æ –ø–æ—Ö–≤–∞–ª–∏—Ç—å", scale: "equality" }
            ]
        },
        {
            id: 7,
            title: "–í –≤–∞—à–µ–º —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ –º–∞—Ç, —Ä—É–≥–∞—Ç–µ–ª—å—Å—Ç–≤–∞...",
            questions: [
                { id: "7.1", text: "–∑–≤—É—á–∞—Ç –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–∞—Ö –≤ –ª–∏—á–Ω—ã—Ö —Ä–∞–∑–≥–æ–≤–æ—Ä–∞—Ö", scale: "insecurity" },
                { id: "7.2", text: "–Ω–µ –ø—Ä–∏–Ω—è—Ç—ã –≤–æ–æ–±—â–µ", scale: "insecurity", reverse: true }
            ]
        },
        {
            id: 8,
            title: "–í –≤–∞—à–µ–º —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ...",
            questions: [
                { id: "8.1", text: "–∫—É—Ä—è—Ç –≤ —Ç—É–∞–ª–µ—Ç–∞—Ö, –ø–æ–¥ –ª–µ—Å—Ç–Ω–∏—Ü–∞–º–∏", scale: "insecurity" }
            ]
        },
        {
            id: 9,
            title: "–í –≤–∞—à–µ–º —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ —Å—Ç–µ–Ω—ã, –º–µ–±–µ–ª—å...",
            questions: [
                { id: "9.1", text: "–∏—Å–ø–∏—Å–∞–Ω–Ω—ã–µ, –∏—Å–ø–∞—á–∫–∞–Ω–Ω—ã–µ", scale: "insecurity" }
            ]
        },
        {
            id: 10,
            title: "–ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ –Ω–∞—á–∏–Ω–∞–µ—Ç –æ—Ä–∞—Ç—å, –¥—Ä–∞—Ç—å—Å—è, –∫–ª–∞—Å—Å ¬´–≤—Å—Ç–∞–µ—Ç –Ω–∞ —É—à–∏¬ª; —á—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —ç—Ç–æ –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª–æ—Å—å:",
            questions: [
                { id: "10.1", text: "–∫—Ç–æ-—Ç–æ –∏–∑ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–µ–Ω —Å–∫–∞–∑–∞—Ç—å ¬´—Ö–≤–∞—Ç–∏—Ç¬ª", scale: "insecurity", reverse: true },
                { id: "10.2", text: "–¥–æ–ª–∂–µ–Ω –ø—Ä–∏–π—Ç–∏ –∫—É—Ä–∞—Ç–æ—Ä", scale: "insecurity" },
                { id: "10.3", text: "—ç—Ç–æ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—Å—è, –∫–æ–≥–¥–∞ –≤—Å–µ —É—Å—Ç–∞–Ω—É—Ç", scale: "disunity" }
            ]
        },
        {
            id: 11,
            title: "–í —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ –≤–∞–º...",
            questions: [
                { id: "11.1", text: "–≤ —Ü–µ–ª–æ–º –Ω—Ä–∞–≤–∏—Ç—Å—è, –ø—Ä–∏—è—Ç–Ω–æ, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ", scale: "wellbeing", reverse: true },
                { id: "11.2", text: "–≤ —Ü–µ–ª–æ–º –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –ø–ª–æ—Ö–æ, –Ω–∏–∫—Ç–æ –Ω–∏ —Å –∫–µ–º –Ω–µ –¥—Ä—É–∂–∏—Ç", scale: "disunity" }
            ]
        },
        {
            id: 12,
            title: "–ü–µ—Ä–µ–º–µ–Ω—É —è –ø—Ä–æ–≤–æ–∂—É:",
            questions: [
                { id: "12.1", text: "–∑–∞—Ö–æ–∂—É –∫ –¥—Ä—É–∑—å—è–º –≤ –¥—Ä—É–≥–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏", scale: "equality" }
            ]
        },
        {
            id: 13,
            title: "–ö–æ–≥–¥–∞ –≤–∞—à–∞ –≥—Ä—É–ø–ø–∞ –µ–¥–µ—Ç –∫—É–¥–∞-—Ç–æ —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏:",
            questions: [
                { id: "13.1", text: "—ç—Ç–æ –æ–±—ã—á–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è", scale: "wellbeing" },
                { id: "13.2", text: "–≤–∞–º —ç—Ç–æ –Ω—Ä–∞–≤–∏—Ç—Å—è, —ç—Ç–æ –≤–µ—Å–µ–ª–æ", scale: "wellbeing", reverse: true },
                { id: "13.3", text: "–≤—ã —Å—Ç–∞—Ä–∞–µ—Ç–µ—Å—å –Ω–µ –µ–∑–¥–∏—Ç—å", scale: "disunity" },
                { id: "13.4", text: "–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º —ç—Ç–æ —Å–ª–æ–∂–Ω–æ, –æ–Ω–∏ –∫–∞–∂–¥—ã–π –≥–æ–≤–æ—Ä—è—Ç, —á—Ç–æ —ç—Ç–æ ¬´–≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑¬ª", scale: "wellbeing", reverse: true }
            ]
        },
        {
            id: 14,
            title: "–í–∞—à–∞ –≥—Ä—É–ø–ø–∞ –∏–º–µ–µ—Ç —Ä–µ–ø—É—Ç–∞—Ü–∏—é",
            questions: [
                { id: "14.1", text: "–æ—Ç–ª–∏—á–Ω–∏–∫–æ–≤", scale: "equality" },
                { id: "14.2", text: "—Ö—É–ª–∏–≥–∞–Ω–æ–≤", scale: "insecurity" },
                { id: "14.3", text: "—Å–∞–º–æ–π –æ–±—ã—á–Ω–æ–π, –Ω–∏—á–µ–º –Ω–µ –æ—Ç–ª–∏—á–∞—é—â–µ–π—Å—è –æ—Ç –¥—Ä—É–≥–∏—Ö –≥—Ä—É–ø–ø –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ", scale: "wellbeing" },
                { id: "14.4", text: "–≥—Ä—É–ø–ø–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∏–∫—Ç–æ –Ω–µ —Ö–æ—á–µ—Ç –±—ã—Ç—å –∫—É—Ä–∞—Ç–æ—Ä–æ–º", scale: "wellbeing", reverse: true }
            ]
        }
    ],
    scales: {
        insecurity: {
            name: "–®–∫–∞–ª–∞ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
            description: "–•–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω–æ—Å—Ç—å –Ω–µ—É–≤–∞–∂–µ–Ω–∏—è, –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–Ω–µ–±—Ä–µ–∂–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ –≤ –∫–ª–∞—Å—Å–µ"
        },
        wellbeing: {
            name: "–®–∫–∞–ª–∞ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è", 
            description: "–•–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –≥—Ä–∞–Ω–∏—Ü, —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —É–≤–∞–∂–µ–Ω–∏—è –∫–∞–∫ –Ω–æ—Ä–º—ã –≤ –≥—Ä—É–ø–ø–µ"
        },
        disunity: {
            name: "–®–∫–∞–ª–∞ —Ä–∞–∑–æ–±—â–µ–Ω–Ω–æ—Å—Ç–∏",
            description: "–í—ã—è–≤–ª—è–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–ø–ª–æ—á–µ–Ω–Ω–æ—Å—Ç–∏, —Å—Ç–µ–ø–µ–Ω—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –º–µ–∂–¥—É –ø–æ–¥—Ä–æ—Å—Ç–∫–∞–º–∏ –∏ –º–µ–∂–¥—É –ø–æ–¥—Ä–æ—Å—Ç–∫–∞–º–∏ –∏ —É—á–∏—Ç–µ–ª—è–º–∏"
        },
        equality: {
            name: "–®–∫–∞–ª–∞ —Ä–∞–≤–Ω–æ–ø—Ä–∞–≤–∏—è",
            description: "–û—Ü–µ–Ω–∏–≤–∞–µ—Ç —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≥—Ä—É–ø–ø—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ä–æ–ª–∏ –∏ –≤—Å—Ç—É–ø–∞—Ç—å –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ"
        }
    }
};

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ –î. –û–ª–≤–µ—É—Å–∞ "–ë—É–ª–ª–∏–Ω–≥"
const olweusBullyingTestData = {
    name: "–û–ø—Ä–æ—Å–Ω–∏–∫ –î. –û–ª–≤–µ—É—Å–∞ ¬´–ë—É–ª–ª–∏–Ω–≥¬ª",
    description: "–í—ã—è–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—è–≤–ª–µ–Ω–∏–π –±—É–ª–ª–∏–Ω–≥–∞ –∏ –ø–æ–¥–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç–∏ –µ–º—É",
    questions: [
        // –ê–∫—Ç–∏–≤–Ω—ã–π –±—É–ª–ª–∏–Ω–≥ (–ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–∏)
        // –ü—Ä—è–º–æ–π –∞–∫—Ç–∏–≤–Ω—ã–π –±—É–ª–ª–∏–Ω–≥ (–≤–æ–ø—Ä–æ—Å—ã 1, 3, 5, 6)
        { id: 1, text: "—è –∫–æ–≥–æ-—Ç–æ –æ–±–æ–∑–≤–∞–ª", scale: "direct_active" },
        { id: 2, text: "—è —Å –∫–µ–º-—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –Ω–µ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–ª", scale: "indirect_active" },
        { id: 3, text: "—è –Ω–∞–Ω–µ—Å –∫–æ–º—É-—Ç–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–π –≤—Ä–µ–¥, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–æ–ª–∫–Ω—É–ª –∏–ª–∏ —É–¥–∞—Ä–∏–ª", scale: "direct_active" },
        { id: 4, text: "—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–ª –æ –∫–æ–º-—Ç–æ —Å–ø–ª–µ—Ç–Ω–∏", scale: "indirect_active" },
        { id: 5, text: "—è —É–≥—Ä–æ–∂–∞–ª", scale: "direct_active" },
        { id: 6, text: "—è —É–∫—Ä–∞–ª –∏–ª–∏ –∏—Å–ø–æ—Ä—Ç–∏–ª —á—å–∏-—Ç–æ –≤–µ—â–∏", scale: "direct_active" },
        
        // –ü–∞—Å—Å–∏–≤–Ω—ã–π –±—É–ª–ª–∏–Ω–≥ (–≤–∏–∫—Ç–∏–º–∏–∑–∞—Ü–∏—è)
        // –ü—Ä—è–º–∞—è –≤–∏–∫—Ç–∏–º–∏–∑–∞—Ü–∏—è (–≤–æ–ø—Ä–æ—Å—ã 7, 10, 11, 13)
        { id: 7, text: "–º–µ–Ω—è –æ–±–∑—ã–≤–∞–ª–∏", scale: "direct_victim" },
        { id: 8, text: "–æ–±–æ –º–Ω–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–ª–∏ —Å–ø–ª–µ—Ç–Ω–∏", scale: "indirect_victim" },
        { id: 9, text: "–Ω–∏–∫—Ç–æ –Ω–µ —Ö–æ—á–µ—Ç —Å–∏–¥–µ—Ç—å —Å–æ –º–Ω–æ–π –∏–ª–∏ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è", scale: "indirect_victim" },
        { id: 10, text: "—É –º–µ–Ω—è —É–∫—Ä–∞–ª–∏ –≤–µ—â–∏", scale: "direct_victim" },
        { id: 11, text: "–º–Ω–µ –Ω–∞–Ω–µ—Å–ª–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–π –≤—Ä–µ–¥ (—É–¥–∞—Ä–∏–ª–∏, —Ç–æ–ª–∫–Ω—É–ª–∏)", scale: "direct_victim" },
        { id: 12, text: "–Ω–∏–∫—Ç–æ –Ω–µ –≥–æ–≤–æ—Ä–∏—Ç —Å–æ –º–Ω–æ–π", scale: "indirect_victim" },
        { id: 13, text: "–º–Ω–µ —É–≥—Ä–æ–∂–∞–ª–∏", scale: "direct_victim" }
    ],
    scales: {
        direct_active: {
            name: "–ü—Ä—è–º–æ–π –∞–∫—Ç–∏–≤–Ω—ã–π –±—É–ª–ª–∏–Ω–≥",
            description: "–ü—Ä–æ—è–≤–ª–µ–Ω–∏—è —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∏ –≤–µ—Ä–±–∞–ª—å–Ω–æ–π –∞–≥—Ä–µ—Å—Å–∏–∏",
            questions: [1, 3, 5, 6]
        },
        indirect_active: {
            name: "–ö–æ—Å–≤–µ–Ω–Ω—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –±—É–ª–ª–∏–Ω–≥", 
            description: "–ü—Ä–æ—è–≤–ª–µ–Ω–∏—è –∏–∑–æ–ª—è—Ü–∏–∏ (—Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –¥–µ–ø—Ä–∏–≤–∞—Ü–∏–∏)",
            questions: [2, 4]
        },
        direct_victim: {
            name: "–ü—Ä—è–º–∞—è –≤–∏–∫—Ç–∏–º–∏–∑–∞—Ü–∏—è",
            description: "–ü–æ–¥–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∏ –≤–µ—Ä–±–∞–ª—å–Ω–æ–π –∞–≥—Ä–µ—Å—Å–∏–∏",
            questions: [7, 10, 11, 13]
        },
        indirect_victim: {
            name: "–ö–æ—Å–≤–µ–Ω–Ω–∞—è –≤–∏–∫—Ç–∏–º–∏–∑–∞—Ü–∏—è",
            description: "–ü–æ–¥–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç—å —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –¥–µ–ø—Ä–∏–≤–∞—Ü–∏–∏",
            questions: [8, 9, 12]
        }
    }
};

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è (–õ.–ì. –ü–æ—á–µ–±—É—Ç)
const aggressionTestData = {
    name: "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è",
    description: "–û–ø—Ä–æ—Å–Ω–∏–∫ –õ.–ì. –ü–æ—á–µ–±—É—Ç –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è",
    questions: [
        { id: 1, text: "–í–æ –≤—Ä–µ–º—è —Å–ø–æ—Ä–∞ —è —á–∞—Å—Ç–æ –ø–æ–≤—ã—à–∞—é –≥–æ–ª–æ—Å." },
        { id: 2, text: "–ï—Å–ª–∏ –º–µ–Ω—è –∫—Ç–æ-—Ç–æ —Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç, —è –º–æ–≥—É —Å–∫–∞–∑–∞—Ç—å –µ–º—É –≤—Å–µ, —á—Ç–æ –æ –Ω–µ–º –¥—É–º–∞—é." },
        { id: 3, text: "–ï—Å–ª–∏ –º–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç –ø—Ä–∏–±–µ–≥–Ω—É—Ç—å –∫ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π —Å–∏–ª–µ –¥–ª—è –∑–∞—â–∏—Ç—ã —Å–≤–æ–∏—Ö –ø—Ä–∞–≤, —è, –Ω–µ —Ä–∞–∑–¥—É–º—ã–≤–∞—è, —Å–¥–µ–ª–∞—é —ç—Ç–æ." },
        { id: 4, text: "–ö–æ–≥–¥–∞ —è –≤—Å—Ç—Ä–µ—á–∞—é –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ–≥–æ –º–Ω–µ —á–µ–ª–æ–≤–µ–∫–∞, —è –º–æ–≥—É –ø–æ–∑–≤–æ–ª–∏—Ç—å —Å–µ–±–µ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ —É—â–∏–ø–Ω—É—Ç—å –∏–ª–∏ —Ç–æ–ª–∫–Ω—É—Ç—å –µ–≥–æ." },
        { id: 5, text: "–£–≤–ª–µ–∫—à–∏—Å—å —Å–ø–æ—Ä–æ–º —Å –¥—Ä—É–≥–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º, —è –º–æ–≥—É —Å—Ç—É–∫–Ω—É—Ç—å –∫—É–ª–∞–∫–æ–º –ø–æ —Å—Ç–æ–ª—É, —á—Ç–æ–±—ã –ø—Ä–∏–≤–ª–µ—á—å –∫ —Å–µ–±–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∏–ª–∏ –¥–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –ø—Ä–∞–≤–æ—Ç—É." },
        { id: 6, text: "–Ø –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –¥—Ä—É–≥–∏–µ –Ω–µ —É–≤–∞–∂–∞—é—Ç –º–æ–∏ –ø—Ä–∞–≤–∞." },
        { id: 7, text: "–í—Å–ø–æ–º–∏–Ω–∞—è –ø—Ä–æ—à–ª–æ–µ, –ø–æ—Ä–æ–π –º–Ω–µ –±—ã–≤–∞–µ—Ç –æ–±–∏–¥–Ω–æ –∑–∞ —Å–µ–±—è." },
        { id: 8, text: "–•–æ—Ç—è —è –∏ –Ω–µ –ø–æ–¥–∞—é –≤–∏–¥–∞, –∏–Ω–æ–≥–¥–∞ –º–µ–Ω—è –≥–ª–æ–∂–µ—Ç –∑–∞–≤–∏—Å—Ç—å." },
        { id: 9, text: "–ï—Å–ª–∏ —è –Ω–µ –æ–¥–æ–±—Ä—è—é –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å–≤–æ–∏—Ö –∑–Ω–∞–∫–æ–º—ã—Ö, —Ç–æ —è –ø—Ä—è–º–æ –≥–æ–≤–æ—Ä—é –∏–º –æ–± —ç—Ç–æ–º." },
        { id: 10, text: "–í —Å–∏–ª—å–Ω–æ–º –≥–Ω–µ–≤–µ —è —É–ø–æ—Ç—Ä–µ–±–ª—è—é –∫—Ä–µ–ø–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è, —Å–∫–≤–µ—Ä–Ω–æ—Å–ª–æ–≤–ª—é." },
        { id: 11, text: "–ï—Å–ª–∏ –∫—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ–¥–Ω–∏–º–µ—Ç –Ω–∞ –º–µ–Ω—è —Ä—É–∫—É, —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å —É–¥–∞—Ä–∏—Ç—å –µ–≥–æ –ø–µ—Ä–≤—ã–º." },
        { id: 12, text: "–Ø –±—ã–≤–∞—é –Ω–∞—Å—Ç–æ–ª—å–∫–æ –≤–∑–±–µ—à–µ–Ω, —á—Ç–æ —à–≤—ã—Ä—è—é —Ä–∞–∑–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã." },
        { id: 13, text: "–£ –º–µ–Ω—è —á–∞—Å—Ç–æ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—Å—Ç–∞–≤–∏—Ç—å –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ –º–µ–±–µ–ª—å –∏–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–º–µ–Ω–∏—Ç—å –µ–µ." },
        { id: 14, text: "–í –æ–±—â–µ–Ω–∏–∏ —Å –ª—é–¥—å–º–∏ —è —á–∞—Å—Ç–æ —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è ¬´–ø–æ—Ä–æ—Ö–æ–≤–æ–π –±–æ—á–∫–æ–π¬ª, –∫–æ—Ç–æ—Ä–∞—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –≥–æ—Ç–æ–≤–∞ –≤–∑–æ—Ä–≤–∞—Ç—å—Å—è." },
        { id: 15, text: "–ü–æ—Ä–æ–π —É –º–µ–Ω—è –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∂–µ–ª–∞–Ω–∏–µ –∑–ª–æ –ø–æ—à—É—Ç–∏—Ç—å –Ω–∞–¥ –¥—Ä—É–≥–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º." },
        { id: 16, text: "–ö–æ–≥–¥–∞ —è —Å–µ—Ä–¥–∏—Ç, —Ç–æ –æ–±—ã—á–Ω–æ –º—Ä–∞—á–Ω–µ—é." },
        { id: 17, text: "–í —Ä–∞–∑–≥–æ–≤–æ—Ä–µ —Å —á–µ–ª–æ–≤–µ–∫–æ–º —è —Å—Ç–∞—Ä–∞—é—Å—å –µ–≥–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –≤—ã—Å–ª—É—à–∞—Ç—å, –Ω–µ –ø–µ—Ä–µ–±–∏–≤–∞—è." },
        { id: 18, text: "–ü–∞—Ä—É –ª–µ—Ç –Ω–∞–∑–∞–¥ —É –º–µ–Ω—è —á–∞—Å—Ç–æ ¬´—á–µ—Å–∞–ª–∏—Å—å –∫—É–ª–∞–∫–∏¬ª –∏ —è –≤—Å–µ–≥–¥–∞ –±—ã–ª –≥–æ—Ç–æ–≤ –ø—É—Å—Ç–∏—Ç—å –∏—Ö –≤ —Ö–æ–¥." },
        { id: 19, text: "–ï—Å–ª–∏ —è –∑–Ω–∞—é, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ –Ω–∞–º–µ—Ä–µ–Ω–Ω–æ –º–µ–Ω—è —Ç–æ–ª–∫–Ω—É–ª, —Ç–æ –¥–µ–ª–æ –º–æ–∂–µ—Ç –¥–æ–π—Ç–∏ –¥–æ –¥—Ä–∞–∫–∏." },
        { id: 20, text: "–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –±–µ—Å–ø–æ—Ä—è–¥–æ–∫ –Ω–∞ –º–æ–µ–º —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –º–Ω–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å." },
        { id: 21, text: "–Ø –ø–æ–º–Ω—é, —á—Ç–æ –±—ã–≤–∞–ª –Ω–∞—Å—Ç–æ–ª—å–∫–æ —Å–µ—Ä–¥–∏—Ç—ã–º, —á—Ç–æ —Ö–≤–∞—Ç–∞–ª –≤—Å–µ, —á—Ç–æ –ø–æ–ø–∞–¥–∞–ª–æ –ø–æ–¥ —Ä—É–∫—É, –∏ –ª–æ–º–∞–ª." },
        { id: 22, text: "–ò–Ω–æ–≥–¥–∞ –ª—é–¥–∏ —Ä–∞–∑–¥—Ä–∞–∂–∞—é—Ç –º–µ–Ω—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∏–º —Å–≤–æ–∏–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ–º." },
        { id: 23, text: "–Ø —á–∞—Å—Ç–æ —É–¥–∏–≤–ª—è—é—Å—å, –∫–∞–∫–∏–µ —Å–∫—Ä—ã—Ç—ã–µ –ø—Ä–∏—á–∏–Ω—ã –∑–∞—Å—Ç–∞–≤–ª—è—é—Ç –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –¥–µ–ª–∞—Ç—å –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å —Ö–æ—Ä–æ—à–µ–µ." },
        { id: 24, text: "–ï—Å–ª–∏ –º–Ω–µ –Ω–∞–Ω–µ—Å—É—Ç –æ–±–∏–¥—É, —É –º–µ–Ω—è –ø—Ä–æ–ø–∞–¥–µ—Ç –∂–µ–ª–∞–Ω–∏–µ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å —Å –∫–µ–º –±—ã —Ç–æ –Ω–∏ –±—ã–ª–æ." },
        { id: 25, text: "–ò–Ω–æ–≥–¥–∞ —è –Ω–∞–º–µ—Ä–µ–Ω–Ω–æ –≥–æ–≤–æ—Ä—é –≥–∞–¥–æ—Å—Ç–∏ –æ —á–µ–ª–æ–≤–µ–∫–µ, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ –ª—é–±–ª—é." },
        { id: 26, text: "–ö–æ–≥–¥–∞ —è –≤–∑–±–µ—à–µ–Ω, —è –∫—Ä–∏—á—É —Å–∞–º–æ–µ –∑–ª–æ–±–Ω–æ–µ —Ä—É–≥–∞—Ç–µ–ª—å—Å—Ç–≤–æ." },
        { id: 27, text: "–í –¥–µ—Ç—Å—Ç–≤–µ —è –∏–∑–±–µ–≥–∞–ª –¥—Ä–∞—Ç—å—Å—è." },
        { id: 28, text: "–Ø –∑–Ω–∞—é, –ø–æ –∫–∞–∫–æ–π –ø—Ä–∏—á–∏–Ω–µ –∏ –∫–æ–≥–¥–∞ –º–æ–∂–Ω–æ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å —É–¥–∞—Ä–∏—Ç—å." },
        { id: 29, text: "–ö–æ–≥–¥–∞ —è –≤–∑–±–µ—à–µ–Ω, —Ç–æ –º–æ–≥—É —Ö–ª–æ–ø–Ω—É—Ç—å –¥–≤–µ—Ä—å—é." },
        { id: 30, text: "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –æ–∫—Ä—É–∂–∞—é—â–∏–µ –ª—é–¥–∏ –º–µ–Ω—è –Ω–µ –ª—é–±—è—Ç." },
        { id: 31, text: "–Ø –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –¥–µ–ª—é—Å—å —Å –¥—Ä—É–≥–∏–º–∏ —Å–≤–æ–∏–º–∏ —á—É–≤—Å—Ç–≤–∞–º–∏ –∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è–º–∏." },
        { id: 32, text: "–û—á–µ–Ω—å —á–∞—Å—Ç–æ —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ –∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ —è —Å–∞–º —Å–µ–±–µ –ø—Ä–∏–Ω–æ—à—É –≤—Ä–µ–¥." },
        { id: 33, text: "–ö–æ–≥–¥–∞ –ª—é–¥–∏ –æ—Ä—É—Ç –Ω–∞ –º–µ–Ω—è, —è –æ—Ç–≤–µ—á–∞—é —Ç–µ–º –∂–µ." },
        { id: 34, text: "–ï—Å–ª–∏ –∫—Ç–æ-–Ω–∏–±—É–¥—å —É–¥–∞—Ä–∏—Ç –º–µ–Ω—è –ø–µ—Ä–≤—ã–º, —è –≤ –æ—Ç–≤–µ—Ç —É–¥–∞—Ä—é –µ–≥–æ." },
        { id: 35, text: "–ú–µ–Ω—è —Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç, –∫–æ–≥–¥–∞ –ø—Ä–µ–¥–º–µ—Ç—ã –ª–µ–∂–∞—Ç –Ω–µ –Ω–∞ —Å–≤–æ–µ–º –º–µ—Å—Ç–µ." },
        { id: 36, text: "–ï—Å–ª–∏ –º–Ω–µ –Ω–µ —É–¥–∞–µ—Ç—Å—è –ø–æ—á–∏–Ω–∏—Ç—å —Å–ª–æ–º–∞–≤—à–∏–π—Å—è –∏–ª–∏ –ø–æ—Ä–≤–∞–≤—à–∏–π—Å—è –ø—Ä–µ–¥–º–µ—Ç, —Ç–æ —è –≤ –≥–Ω–µ–≤–µ –ª–æ–º–∞—é –∏–ª–∏ —Ä–≤—É –µ–≥–æ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ." },
        { id: 37, text: "–î—Ä—É–≥–∏–µ –ª—é–¥–∏ –º–Ω–µ –≤—Å–µ–≥–¥–∞ –∫–∞–∂—É—Ç—Å—è –ø—Ä–µ—É—Å–ø–µ–≤–∞—é—â–∏–º–∏." },
        { id: 38, text: "–ö–æ–≥–¥–∞ —è –¥—É–º–∞—é –æ–± –æ—á–µ–Ω—å –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ–º –º–Ω–µ —á–µ–ª–æ–≤–µ–∫–µ, —è –º–æ–≥—É –ø—Ä–∏–π—Ç–∏ –≤ –≤–æ–∑–±—É–∂–¥–µ–Ω–∏–µ –æ—Ç –∂–µ–ª–∞–Ω–∏—è –ø—Ä–∏—á–∏–Ω–∏—Ç—å –µ–º—É –∑–ª–æ." },
        { id: 39, text: "–ò–Ω–æ–≥–¥–∞ –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ —Å—É–¥—å–±–∞ —Å—ã–≥—Ä–∞–ª–∞ —Å–æ –º–Ω–æ–π –∑–ª—É—é —à—É—Ç–∫—É." },
        { id: 40, text: "–ï—Å–ª–∏ –∫—Ç–æ-–Ω–∏–±—É–¥—å –æ–±—Ä–∞—â–∞–µ—Ç—Å—è —Å–æ –º–Ω–æ–π –Ω–µ —Ç–∞–∫, –∫–∞–∫ —Å–ª–µ–¥—É–µ—Ç, —è –æ—á–µ–Ω—å —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞—é—Å—å –ø–æ —ç—Ç–æ–º—É –ø–æ–≤–æ–¥—É." }
    ],
    // –ö–ª—é—á –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    scoringKey: {
        verbal: {
            name: "–í–µ—Ä–±–∞–ª—å–Ω–∞—è –∞–≥—Ä–µ—Å—Å–∏—è (–í–ê)",
            description: "–í—ã—Ä–∞–∂–µ–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–∏ –≤–µ—Ä–±–∞–ª—å–Ω–æ, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π",
            yes: [1, 2, 9, 10, 25, 26, 33],
            no: [17]
        },
        physical: {
            name: "–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–≥—Ä–µ—Å—Å–∏—è (–§–ê)", 
            description: "–í—ã—Ä–∞–∂–µ–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π —Å–∏–ª—ã",
            yes: [3, 4, 11, 18, 19, 28, 34],
            no: [27]
        },
        object: {
            name: "–ü—Ä–µ–¥–º–µ—Ç–Ω–∞—è –∞–≥—Ä–µ—Å—Å–∏—è (–ü–ê)",
            description: "–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–∏ –Ω–∞ –æ–∫—Ä—É–∂–∞—é—â–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã",
            yes: [5, 12, 13, 21, 29, 35, 36],
            no: [20]
        },
        emotional: {
            name: "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–≥—Ä–µ—Å—Å–∏—è (–≠–ê)",
            description: "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ—Ç—á—É–∂–¥–µ–Ω–∏–µ, –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –≤—Ä–∞–∂–¥–µ–±–Ω–æ—Å—Ç—å",
            yes: [6, 14, 15, 22, 30, 37, 38],
            no: [23]
        },
        self: {
            name: "–°–∞–º–æ–∞–≥—Ä–µ—Å—Å–∏—è (–°–ê)",
            description: "–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø–æ–∫–æ—è, –æ—Å–ª–∞–±–ª–µ–Ω–Ω—ã–µ –∑–∞—â–∏—Ç–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã",
            yes: [7, 8, 16, 24, 32, 39, 40],
            no: [31]
        }
    }
};

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ –°–ê–ù
const sanTestData = {
    name: "–°–ê–ù (–°–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ - –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å - –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ)",
    questions: [
        { id: 1, left: "–°–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ —Ö–æ—Ä–æ—à–µ–µ", right: "–°–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ –ø–ª–æ—Ö–æ–µ", category: "wellbeing", reverse: false },
        { id: 2, left: "–ß—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —Å–∏–ª—å–Ω—ã–º", right: "–ß—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —Å–ª–∞–±—ã–º", category: "wellbeing", reverse: false },
        { id: 3, left: "–ü–∞—Å—Å–∏–≤–Ω—ã–π", right: "–ê–∫—Ç–∏–≤–Ω—ã–π", category: "activity", reverse: true },
        { id: 4, left: "–ú–∞–ª–æ–ø–æ–¥–≤–∏–∂–Ω—ã–π", right: "–ü–æ–¥–≤–∏–∂–Ω—ã–π", category: "activity", reverse: true },
        { id: 5, left: "–í–µ—Å–µ–ª—ã–π", right: "–ì—Ä—É—Å—Ç–Ω—ã–π", category: "mood", reverse: false },
        { id: 6, left: "–•–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", right: "–ü–ª–æ—Ö–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", category: "mood", reverse: false },
        { id: 7, left: "–†–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω—ã–π", right: "–†–∞–∑–±–∏—Ç—ã–π", category: "wellbeing", reverse: false },
        { id: 8, left: "–ü–æ–ª–Ω—ã–π —Å–∏–ª", right: "–û–±–µ—Å—Å–∏–ª–µ–Ω–Ω—ã–π", category: "wellbeing", reverse: false },
        { id: 9, left: "–ú–µ–¥–ª–∏—Ç–µ–ª—å–Ω—ã–π", right: "–ë—ã—Å—Ç—Ä—ã–π", category: "activity", reverse: true },
        { id: 10, left: "–ë–µ–∑–¥–µ—è—Ç–µ–ª—å–Ω—ã–π", right: "–î–µ—è—Ç–µ–ª—å–Ω—ã–π", category: "activity", reverse: true },
        { id: 11, left: "–°—á–∞—Å—Ç–ª–∏–≤—ã–π", right: "–ù–µ—Å—á–∞—Å—Ç–Ω—ã–π", category: "mood", reverse: false },
        { id: 12, left: "–ñ–∏–∑–Ω–µ—Ä–∞–¥–æ—Å—Ç–Ω—ã–π", right: "–ú—Ä–∞—á–Ω—ã–π", category: "mood", reverse: false },
        { id: 13, left: "–ù–∞–ø—Ä—è–∂–µ–Ω–Ω—ã–π", right: "–†–∞—Å—Å–ª–∞–±–ª–µ–Ω–Ω—ã–π", category: "wellbeing", reverse: true },
        { id: 14, left: "–ó–¥–æ—Ä–æ–≤—ã–π", right: "–ë–æ–ª—å–Ω–æ–π", category: "wellbeing", reverse: false },
        { id: 15, left: "–ë–µ–∑—É—á–∞—Å—Ç–Ω—ã–π", right: "–£–≤–ª–µ—á–µ–Ω–Ω—ã–π", category: "activity", reverse: true },
        { id: 16, left: "–†–∞–≤–Ω–æ–¥—É—à–Ω—ã–π", right: "–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–π", category: "activity", reverse: true },
        { id: 17, left: "–í–æ—Å—Ç–æ—Ä–∂–µ–Ω–Ω—ã–π", right: "–£–Ω—ã–ª—ã–π", category: "mood", reverse: false },
        { id: 18, left: "–†–∞–¥–æ—Å—Ç–Ω—ã–π", right: "–ü–µ—á–∞–ª—å–Ω—ã–π", category: "mood", reverse: false },
        { id: 19, left: "–û—Ç–¥–æ—Ö–Ω—É–≤—à–∏–π", right: "–£—Å—Ç–∞–ª—ã–π", category: "wellbeing", reverse: false },
        { id: 20, left: "–°–≤–µ–∂–∏–π", right: "–ò–∑–Ω—É—Ä–µ–Ω–Ω—ã–π", category: "wellbeing", reverse: false },
        { id: 21, left: "–°–æ–Ω–ª–∏–≤—ã–π", right: "–í–æ–∑–±—É–∂–¥–µ–Ω–Ω—ã–π", category: "activity", reverse: true },
        { id: 22, left: "–ñ–µ–ª–∞–Ω–∏–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å", right: "–ñ–µ–ª–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—Ç—å", category: "activity", reverse: true },
        { id: 23, left: "–°–ø–æ–∫–æ–π–Ω—ã–π", right: "–í–∑–≤–æ–ª–Ω–æ–≤–∞–Ω–Ω—ã–π", category: "mood", reverse: true },
        { id: 24, left: "–û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π", right: "–ü–µ—Å—Å–∏–º–∏—Å—Ç–∏—á–Ω—ã–π", category: "mood", reverse: false },
        { id: 25, left: "–í—ã–Ω–æ—Å–ª–∏–≤—ã–π", right: "–£—Ç–æ–º–ª—è–µ–º—ã–π", category: "wellbeing", reverse: false },
        { id: 26, left: "–ë–æ–¥—Ä—ã–π", right: "–í—è–ª—ã–π", category: "wellbeing", reverse: false },
        { id: 27, left: "–°–æ–æ–±—Ä–∞–∂–∞—Ç—å —Ç—Ä—É–¥–Ω–æ", right: "–°–æ–æ–±—Ä–∞–∂–∞—Ç—å –ª–µ–≥–∫–æ", category: "activity", reverse: true },
        { id: 28, left: "–†–∞—Å—Å–µ—è–Ω–Ω—ã–π", right: "–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π", category: "activity", reverse: true },
        { id: 29, left: "–ü–æ–ª–Ω—ã–π –Ω–∞–¥–µ–∂–¥", right: "–†–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–Ω—ã–π", category: "mood", reverse: false },
        { id: 30, left: "–î–æ–≤–æ–ª—å–Ω—ã–π", right: "–ù–µ–¥–æ–≤–æ–ª—å–Ω—ã–π", category: "mood", reverse: false }
    ]
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    initializeApp();
});

function initializeApp() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    document.getElementById('user-info-form').addEventListener('submit', handleUserInfoSubmit);
    document.getElementById('back-to-menu').addEventListener('click', showMainScreen);
    document.getElementById('restart-test').addEventListener('click', restartTest);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—É–Ω–∫—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    document.querySelectorAll('.menu-item').forEach(item => {
        item.addEventListener('click', handleMenuClick);
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    document.querySelectorAll('.test-card').forEach(card => {
        card.addEventListener('click', handleTestCardClick);
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    initConsultationForm();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç—É –°–ê–ù
    document.getElementById('next-question').addEventListener('click', nextQuestion);
    document.getElementById('prev-question').addEventListener('click', prevQuestion);
    document.getElementById('finish-test').addEventListener('click', finishTest);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç—É PSM-25
    document.getElementById('psm25-next-question').addEventListener('click', nextPsm25Question);
    document.getElementById('psm25-prev-question').addEventListener('click', prevPsm25Question);
    document.getElementById('psm25-finish-test').addEventListener('click', finishPsm25Test);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ PSM-25
    document.getElementById('psm25-back-to-menu').addEventListener('click', showMainScreen);
    document.getElementById('psm25-restart-test').addEventListener('click', restartPsm25Test);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞ –≤—ã–≥–æ—Ä–∞–Ω–∏—è
    document.getElementById('burnout-back-to-menu').addEventListener('click', showMainScreen);
    document.getElementById('burnout-restart-test').addEventListener('click', restartBurnoutTest);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞ —Ç—Ä–µ–≤–æ–≥–∏
    document.getElementById('anxiety-back-to-menu').addEventListener('click', showMainScreen);
    document.getElementById('anxiety-restart-test').addEventListener('click', restartAnxietyTest);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞ –¥–µ–ø—Ä–µ—Å—Å–∏–∏
    document.getElementById('depression-back-to-menu').addEventListener('click', showMainScreen);
    document.getElementById('depression-restart-test').addEventListener('click', restartDepressionTest);
    
    // –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    loadUserInfo();
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
    showScreen('main-screen');
}

function showScreen(screenId) {
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    document.getElementById(screenId).classList.add('active');
}

function showMainScreen() {
    showScreen('main-screen');
    updateTestStatuses();
}

function handleMenuClick(e) {
    const sectionId = e.currentTarget.dataset.section;
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    showScreen(`${sectionId}-screen`);
}

function handleUserInfoSubmit(e) {
    e.preventDefault();
    
    // –ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π
    const gender = document.getElementById('gender').value;
    const age = document.getElementById('age').value;
    const group = document.getElementById('group').value;
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    if (!gender) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª');
        return;
    }
    
    if (!age || age < 1 || age > 120) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (–æ—Ç 1 –¥–æ 120 –ª–µ—Ç)');
        return;
    }
    
    // –ù–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
    
    userInfo = {
        gender: gender,
        age: parseInt(age),
        group: group.trim() || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
    };
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    localStorage.setItem('userInfo', JSON.stringify(userInfo));
    
    // –ï—Å–ª–∏ –±—ã–ª –≤—ã–±—Ä–∞–Ω —Ç–µ—Å—Ç, –Ω–∞—á–∞—Ç—å –µ–≥–æ
    if (currentTest === 'san') {
        startSanTest();
    } else if (currentTest === 'psm25') {
        startPsm25Test();
    } else if (currentTest === 'burnout') {
        startBurnoutTest();
    } else if (currentTest === 'anxiety') {
        startAnxietyTest();
    } else if (currentTest === 'depression') {
        startDepressionTest();
    } else if (currentTest === 'bullying') {
        startBullyingTest();
    } else if (currentTest === 'olweus-bullying') {
        startOlweusBullyingTest();
    } else if (currentTest === 'aggression') {
        startAggressionTest();
    } else {
        // –ï—Å–ª–∏ —Ç–µ—Å—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω, –ø–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —Ç–µ—Å—Ç–æ–≤
        showTestsMenu();
    }
}

function loadUserInfo() {
    const savedUserInfo = localStorage.getItem('userInfo');
    if (savedUserInfo) {
        userInfo = JSON.parse(savedUserInfo);
    }
}

function fillUserInfoForm() {
    // –û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É –ø–µ—Ä–µ–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º
    document.getElementById('gender').value = '';
    document.getElementById('age').value = '';
    document.getElementById('group').value = '';
    
    // –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (userInfo.gender) {
        document.getElementById('gender').value = userInfo.gender;
    }
    if (userInfo.age) {
        document.getElementById('age').value = userInfo.age;
    }
    if (userInfo.group && userInfo.group !== '–ù–µ —É–∫–∞–∑–∞–Ω–æ') {
        document.getElementById('group').value = userInfo.group;
    }
}

function showTestsMenu() {
    showMainScreen();
}

function updateTestStatuses() {
    const completedTests = JSON.parse(localStorage.getItem('completedTests') || '{}');
    
    Object.keys(completedTests).forEach(testId => {
        const statusElement = document.getElementById(`${testId}-status`);
        if (statusElement) {
            statusElement.textContent = '–ü—Ä–æ–π–¥–µ–Ω';
            statusElement.classList.add('completed');
        }
    });
}

function handleTestCardClick(e) {
    const card = e.currentTarget;
    if (card.classList.contains('disabled')) return;
    
    const testId = card.dataset.test;
    currentTest = testId;
    
    // –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —ç–∫—Ä–∞–Ω –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç–µ—Å—Ç–µ
    showSelectedTestInfo(testId);
    showScreen('user-info-screen');
    fillUserInfoForm();
}

function showSelectedTestInfo(testId) {
    const testInfo = document.getElementById('selected-test-info');
    const testName = document.getElementById('test-name');
    const testDescription = document.getElementById('test-description');
    
    if (testId === 'san') {
        testName.textContent = '–°–ê–ù';
        testDescription.textContent = '–°–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ - –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å - –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ';
        testInfo.style.display = 'block';
    } else if (testId === 'psm25') {
        testName.textContent = 'PSM-25';
        testDescription.textContent = '–®–∫–∞–ª–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç—Ä–µ—Å—Å–∞';
        testInfo.style.display = 'block';
    } else if (testId === 'burnout') {
        testName.textContent = '–û–ø—Ä–æ—Å–Ω–∏–∫ –≤—ã–≥–æ—Ä–∞–Ω–∏—è';
        testDescription.textContent = '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã–≥–æ—Ä–∞–Ω–∏–µ';
        testInfo.style.display = 'block';
    } else if (testId === 'anxiety') {
        testName.textContent = '–®–∫–∞–ª–∞ —Ç—Ä–µ–≤–æ–≥–∏';
        testDescription.textContent = '–°–∏—Ç—É–∞—Ü–∏–æ–Ω–Ω–∞—è –∏ –ª–∏—á–Ω–æ—Å—Ç–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å';
        testInfo.style.display = 'block';
    } else if (testId === 'depression') {
        testName.textContent = '–®–∫–∞–ª–∞ –¥–µ–ø—Ä–µ—Å—Å–∏–∏';
        testDescription.textContent = '–û—Ü–µ–Ω–∫–∞ –¥–µ–ø—Ä–µ—Å—Å–∏–≤–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤';
        testInfo.style.display = 'block';
    } else if (testId === 'bullying') {
        testName.textContent = '–û–ø—Ä–æ—Å–Ω–∏–∫ —Ä–∏—Å–∫–∞ –±—É–ª–ª–∏–Ω–≥–∞';
        testDescription.textContent = '–û—Ü–µ–Ω–∫–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã –≤ —à–∫–æ–ª–µ –∏ —Ä–∏—Å–∫–∞ –±—É–ª–ª–∏–Ω–≥–∞';
        testInfo.style.display = 'block';
    } else if (testId === 'olweus-bullying') {
        testName.textContent = '–û–ø—Ä–æ—Å–Ω–∏–∫ –î. –û–ª–≤–µ—É—Å–∞ ¬´–ë—É–ª–ª–∏–Ω–≥¬ª';
        testDescription.textContent = '–í—ã—è–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—è–≤–ª–µ–Ω–∏–π –±—É–ª–ª–∏–Ω–≥–∞ –∏ –ø–æ–¥–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç–∏ –µ–º—É';
        testInfo.style.display = 'block';
    } else if (testId === 'aggression') {
        testName.textContent = '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è';
        testDescription.textContent = '–û–ø—Ä–æ—Å–Ω–∏–∫ –õ.–ì. –ü–æ—á–µ–±—É—Ç –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è';
        testInfo.style.display = 'block';
    } else {
        testInfo.style.display = 'none';
    }
}

function startSanTest() {
    currentQuestion = 0;
    testAnswers = {};
    
    showScreen('san-test-screen');
    displayQuestion();
    updateProgress();
    updateNavigationButtons();
}

function displayQuestion() {
    const question = sanTestData.questions[currentQuestion];
    const container = document.getElementById('question-container');
    
    container.innerHTML = `
        <div class="question-item">
            <div class="question-number">–í–æ–ø—Ä–æ—Å ${question.id}</div>
            <div class="question-pair">
                <div class="question-text">${question.left}</div>
                <div class="scale">
                    <div class="scale-option">
                        <input type="radio" name="question_${question.id}" value="3" id="q${question.id}_3">
                        <span class="scale-number">3</span>
                    </div>
                    <div class="scale-option">
                        <input type="radio" name="question_${question.id}" value="2" id="q${question.id}_2">
                        <span class="scale-number">2</span>
                    </div>
                    <div class="scale-option">
                        <input type="radio" name="question_${question.id}" value="1" id="q${question.id}_1">
                        <span class="scale-number">1</span>
                    </div>
                    <div class="scale-option">
                        <input type="radio" name="question_${question.id}" value="0" id="q${question.id}_0">
                        <span class="scale-number">0</span>
                    </div>
                    <div class="scale-option">
                        <input type="radio" name="question_${question.id}" value="1" id="q${question.id}_1r">
                        <span class="scale-number">1</span>
                    </div>
                    <div class="scale-option">
                        <input type="radio" name="question_${question.id}" value="2" id="q${question.id}_2r">
                        <span class="scale-number">2</span>
                    </div>
                    <div class="scale-option">
                        <input type="radio" name="question_${question.id}" value="3" id="q${question.id}_3r">
                        <span class="scale-number">3</span>
                    </div>
                </div>
                <div class="question-text">${question.right}</div>
            </div>
        </div>
    `;
    
    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –µ—Å–ª–∏ –µ—Å—Ç—å
    if (testAnswers[question.id] !== undefined) {
        const radio = document.querySelector(`input[name="question_${question.id}"][value="${testAnswers[question.id]}"]`);
        if (radio) radio.checked = true;
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫
    document.querySelectorAll(`input[name="question_${question.id}"]`).forEach(radio => {
        radio.addEventListener('change', function() {
            testAnswers[question.id] = parseInt(this.value);
            updateNavigationButtons();
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–∞ –¥–ª—è –æ–ø—Ü–∏–π —à–∫–∞–ª—ã
    document.querySelectorAll(`.scale-option`).forEach(option => {
        option.addEventListener('click', function() {
            const radio = this.querySelector('input[type="radio"]');
            if (radio) {
                radio.checked = true;
                testAnswers[question.id] = parseInt(radio.value);
                updateNavigationButtons();
            }
        });
    });
    
    document.getElementById('current-question').textContent = currentQuestion + 1;
}

function updateProgress() {
    const progress = ((currentQuestion + 1) / sanTestData.questions.length) * 100;
    document.getElementById('san-progress').style.width = progress + '%';
}

function updateNavigationButtons() {
    const nextBtn = document.getElementById('next-question');
    const prevBtn = document.getElementById('prev-question');
    const finishBtn = document.getElementById('finish-test');
    
    prevBtn.disabled = currentQuestion === 0;
    
    if (currentQuestion === sanTestData.questions.length - 1) {
        nextBtn.style.display = 'none';
        finishBtn.style.display = 'inline-block';
        finishBtn.disabled = testAnswers[sanTestData.questions[currentQuestion].id] === undefined;
    } else {
        nextBtn.style.display = 'inline-block';
        finishBtn.style.display = 'none';
        nextBtn.disabled = testAnswers[sanTestData.questions[currentQuestion].id] === undefined;
    }
}

function nextQuestion() {
    if (currentQuestion < sanTestData.questions.length - 1) {
        currentQuestion++;
        displayQuestion();
        updateProgress();
        updateNavigationButtons();
    }
}

function prevQuestion() {
    if (currentQuestion > 0) {
        currentQuestion--;
        displayQuestion();
        updateProgress();
        updateNavigationButtons();
    }
}

function finishTest() {
    if (currentTest === 'san') {
        calculateSanResults();
    }
}

function calculateSanResults() {
    const results = {
        wellbeing: 0,
        activity: 0,
        mood: 0,
        total: 0
    };
    
    // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const categories = {
        wellbeing: [1, 2, 7, 8, 13, 14, 19, 20, 25, 26],
        activity: [3, 4, 9, 10, 15, 16, 21, 22, 27, 28],
        mood: [5, 6, 11, 12, 17, 18, 23, 24, 29, 30]
    };
    
    // –ü–æ–¥—Å—á–µ—Ç –±–∞–ª–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    Object.keys(categories).forEach(category => {
        let sum = 0;
        categories[category].forEach(questionId => {
            const answer = testAnswers[questionId];
            const question = sanTestData.questions.find(q => q.id === questionId);
            
            if (answer !== undefined) {
                // –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –≤ –±–∞–ª–ª—ã –æ—Ç 1 –¥–æ 7
                let score = answer + 4; // 0->4, 1->5, 2->6, 3->7
                
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—Ä–∞—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
                if (question.reverse) {
                    score = 8 - score; // –ò–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —à–∫–∞–ª—É
                }
                
                sum += score;
            }
        });
        
        results[category] = (sum / categories[category].length).toFixed(1);
        results.total += sum;
    });
    
    results.total = (results.total / 30).toFixed(1);
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    const completedTests = JSON.parse(localStorage.getItem('completedTests') || '{}');
    completedTests.san = {
        results: results,
        timestamp: new Date().toISOString(),
        userInfo: userInfo
    };
    localStorage.setItem('completedTests', JSON.stringify(completedTests));
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ Telegram
    sendTestResultsToTelegram(results, userInfo, '–°–ê–ù');
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    displayResults(results);
}

function displayResults(results) {
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤
    document.getElementById('wellbeing-score').textContent = results.wellbeing;
    document.getElementById('activity-score').textContent = results.activity;
    document.getElementById('mood-score').textContent = results.mood;
    document.getElementById('total-score').textContent = results.total;
    
    // –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    document.getElementById('wellbeing-interpretation').textContent = interpretScore(results.wellbeing, 'wellbeing');
    document.getElementById('activity-interpretation').textContent = interpretScore(results.activity, 'activity');
    document.getElementById('mood-interpretation').textContent = interpretScore(results.mood, 'mood');
    document.getElementById('total-interpretation').textContent = interpretTotalScore(results.total);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    document.getElementById('summary-text').textContent = generateSummary(results);
    document.getElementById('recommendations-text').innerHTML = generateRecommendations(results);
    
    showScreen('results-screen');
}

function interpretScore(score, category) {
    const numScore = parseFloat(score);
    
    if (numScore >= 5.0 && numScore <= 5.5) {
        return getNormalInterpretation(category);
    } else if (numScore > 5.5) {
        return getFavorableInterpretation(category, numScore);
    } else {
        return getUnfavorableInterpretation(category, numScore);
    }
}

function getNormalInterpretation(category) {
    const interpretations = {
        wellbeing: "–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ. –§–∏–∑–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã.",
        activity: "–ù–æ—Ä–º–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –£–º–µ—Ä–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–æ–π.",
        mood: "–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ. –°—Ç–∞–±–∏–ª—å–Ω–æ–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–µ–∑ –≤—ã—Ä–∞–∂–µ–Ω–Ω—ã—Ö –∫–æ–ª–µ–±–∞–Ω–∏–π."
    };
    return interpretations[category] || "–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ";
}

function getFavorableInterpretation(category, score) {
    const interpretations = {
        wellbeing: `–û—Ç–ª–∏—á–Ω–æ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ (${score.toFixed(1)} –±–∞–ª–ª–æ–≤). –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–º—Ñ–æ—Ä—Ç–∞, –±–æ–¥—Ä–æ—Å—Ç—å, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–µ–¥–æ–º–æ–≥–∞–Ω–∏–π.`,
        activity: `–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (${score.toFixed(1)} –±–∞–ª–ª–æ–≤). –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–æ–π, –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å, —ç–Ω–µ—Ä–≥–∏—á–Ω–æ—Å—Ç—å.`,
        mood: `–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (${score.toFixed(1)} –±–∞–ª–ª–æ–≤). –ü—Ä–∏–ø–æ–¥–Ω—è—Ç—ã–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–æ–Ω, –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π –Ω–∞—Å—Ç—Ä–æ–π, –∂–∏–∑–Ω–µ—Ä–∞–¥–æ—Å—Ç–Ω–æ—Å—Ç—å.`
    };
    return interpretations[category] || `–ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (${score.toFixed(1)} –±–∞–ª–ª–æ–≤)`;
}

function getUnfavorableInterpretation(category, score) {
    const interpretations = {
        wellbeing: `–°–Ω–∏–∂–µ–Ω–Ω–æ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ (${score.toFixed(1)} –±–∞–ª–ª–æ–≤). –í–æ–∑–º–æ–∂–Ω—ã —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –Ω–µ–¥–æ–º–æ–≥–∞–Ω–∏—è, —É—Å—Ç–∞–ª–æ—Å—Ç—å, –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Ç–¥—ã—Ö –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –∑–¥–æ—Ä–æ–≤—å—é.`,
        activity: `–ù–∏–∑–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (${score.toFixed(1)} –±–∞–ª–ª–æ–≤). –°–Ω–∏–∂–µ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å, –ø–∞—Å—Å–∏–≤–Ω–æ—Å—Ç—å, –≤–æ–∑–º–æ–∂–Ω–æ –ø–µ—Ä–µ—É—Ç–æ–º–ª–µ–Ω–∏–µ.`,
        mood: `–ü–æ–¥–∞–≤–ª–µ–Ω–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (${score.toFixed(1)} –±–∞–ª–ª–æ–≤). –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–ø–∞–¥, –≤–æ–∑–º–æ–∂–Ω—ã –≥—Ä—É—Å—Ç—å, –∞–ø–∞—Ç–∏—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.`
    };
    return interpretations[category] || `–ù–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (${score.toFixed(1)} –±–∞–ª–ª–æ–≤)`;
}

function interpretTotalScore(score) {
    const numScore = parseFloat(score);
    
    if (numScore >= 1 && numScore <= 3) {
        return `–ü—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç –ø–ª–æ—Ö–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (${score} –±–∞–ª–ª–æ–≤). –û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç—Å—è –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º —Ñ–æ–Ω–æ–º, –≤–æ–∑–º–æ–∂–Ω—ã –¥–µ–ø—Ä–µ—Å—Å–∏–≤–Ω—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.`;
    } else if (numScore >= 3.5 && numScore <= 4.5) {
        return `–ò–∑–º–µ–Ω—á–∏–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (${score} –±–∞–ª–ª–æ–≤). –ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–ª–∏ –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏—è –≤ —Å–∞–º–æ–æ—Ü–µ–Ω–∫–µ. –í–æ–∑–º–æ–∂–Ω—ã –ø–µ—Ä–µ–ø–∞–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è, –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç—å –≤ –æ—Ü–µ–Ω–∫–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.`;
    } else if (numScore >= 5 && numScore <= 7) {
        return `–ü—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç —Ö–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (${score} –±–∞–ª–ª–æ–≤). –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–æ–Ω, —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –æ–±—â–∏–π –æ–ø—Ç–∏–º–∏–∑–º –∏ –∂–∏–∑–Ω–µ—Ä–∞–¥–æ—Å—Ç–Ω–æ—Å—Ç—å.`;
    } else {
        return `–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (${score} –±–∞–ª–ª–æ–≤). –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏.`;
    }
}

function generateSummary(results) {
    const wellbeing = parseFloat(results.wellbeing);
    const activity = parseFloat(results.activity);
    const mood = parseFloat(results.mood);
    const total = parseFloat(results.total);
    
    let summary = `–í–∞—à–µ –æ–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç—Å—è –≤ ${total} –±–∞–ª–ª–æ–≤ –∏–∑ 7. `;
    
    // –ê–Ω–∞–ª–∏–∑ –æ–±—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if (total >= 5.5) {
        summary += "–£ –≤–∞—Å –æ—Ç–ª–∏—á–Ω–æ–µ –æ–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –≤—ã—Å–æ–∫–∏–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ –ø–æ –≤—Å–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º. ";
    } else if (total >= 4.5) {
        summary += "–í–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Ü–µ–ª–æ–º –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–µ —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –∫–æ–ª–µ–±–∞–Ω–∏—è–º–∏. ";
    } else if (total >= 3.5) {
        summary += "–°–æ—Å—Ç–æ—è–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç—Å—è –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å—é –∏ —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è. ";
    } else {
        summary += "–û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç —Å–µ—Ä—å–µ–∑–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è –∏ –≤–æ–∑–º–æ–∂–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏. ";
    }
    
    // –ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
    const maxScore = Math.max(wellbeing, activity, mood);
    const minScore = Math.min(wellbeing, activity, mood);
    const difference = maxScore - minScore;
    
    if (difference <= 1.0) {
        summary += "–í—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –≥–∞—Ä–º–æ–Ω–∏–∏ –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º. ";
    } else if (difference <= 2.0) {
        summary += "–ù–∞–±–ª—é–¥–∞–µ—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä—ã–π –¥–∏—Å–±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏. ";
    } else {
        summary += "–í—ã—Ä–∞–∂–µ–Ω–Ω—ã–π –¥–∏—Å–±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∞—Å–ø–µ–∫—Ç–∞–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è. ";
    }
    
    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ–¥—É—â–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è
    if (wellbeing === maxScore) {
        summary += "–í–µ–¥—É—â–∏–º —Ñ–∞–∫—Ç–æ—Ä–æ–º —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ. ";
    } else if (activity === maxScore) {
        summary += "–í–µ–¥—É—â–∏–º —Ñ–∞–∫—Ç–æ—Ä–æ–º —è–≤–ª—è–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. ";
    } else {
        summary += "–í–µ–¥—É—â–∏–º —Ñ–∞–∫—Ç–æ—Ä–æ–º —è–≤–ª—è–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ. ";
    }
    
    return summary;
}

function generateRecommendations(results) {
    const wellbeing = parseFloat(results.wellbeing);
    const activity = parseFloat(results.activity);
    const mood = parseFloat(results.mood);
    const total = parseFloat(results.total);
    
    let recommendations = "<ul>";
    
    // –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–±—â–µ–º—É –±–∞–ª–ª—É
    if (total < 4.0) {
        recommendations += "<li><strong>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞:</strong> –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –ø—Å–∏—Ö–æ–ª–æ–≥—É –∏–ª–∏ –≤—Ä–∞—á—É –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è</li>";
        recommendations += "<li><strong>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è:</strong> –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫ –±–ª–∏–∑–∫–∏–º –ª—é–¥—è–º</li>";
    }
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—é
    if (wellbeing < 4.0) {
        recommendations += "<li><strong>–§–∏–∑–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ:</strong> –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ä–µ–∂–∏–º —Å–Ω–∞, –ø–∏—Ç–∞–Ω–∏—è –∏ —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</li>";
        recommendations += "<li><strong>–û—Ç–¥—ã—Ö:</strong> –£–¥–µ–ª–∏—Ç–µ –≤—Ä–µ–º—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–º—É –æ—Ç–¥—ã—Ö—É –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é</li>";
    } else if (wellbeing > 6.0) {
        recommendations += "<li><strong>–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã:</strong> –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–≤–æ–µ–º –∑–¥–æ—Ä–æ–≤—å–µ</li>";
    }
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    if (activity < 4.0) {
        recommendations += "<li><strong>–ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–∏–∑–∞—Ü–∏—è:</strong> –ù–∞—á–Ω–∏—Ç–µ —Å –Ω–µ–±–æ–ª—å—à–∏—Ö, –Ω–æ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π</li>";
        recommendations += "<li><strong>–ò–Ω—Ç–µ—Ä–µ—Å—ã:</strong> –ù–∞–π–¥–∏—Ç–µ –Ω–æ–≤—ã–µ —É–≤–ª–µ—á–µ–Ω–∏—è –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Å—Ç–∞—Ä—ã–º</li>";
    } else if (activity > 6.0) {
        recommendations += "<li><strong>–ë–∞–ª–∞–Ω—Å:</strong> –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –ø–µ—Ä–µ—É—Ç–æ–º–ª–µ–Ω–∏—é</li>";
    }
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é
    if (mood < 4.0) {
        recommendations += "<li><strong>–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:</strong> –ó–∞–Ω–∏–º–∞–π—Ç–µ—Å—å —Ç–µ–º, —á—Ç–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ä–∞–¥–æ—Å—Ç—å</li>";
        recommendations += "<li><strong>–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã:</strong> –ü—Ä–æ–≤–æ–¥–∏—Ç–µ –≤—Ä–µ–º—è —Å –±–ª–∏–∑–∫–∏–º–∏ –∏ –¥—Ä—É–∑—å—è–º–∏</li>";
        recommendations += "<li><strong>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å:</strong> –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º</li>";
    } else if (mood > 6.0) {
        recommendations += "<li><strong>–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–æ–∑–∏—Ç–∏–≤–∞:</strong> –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å —Ç–æ, —á—Ç–æ —É–ª—É—á—à–∞–µ—Ç –≤–∞—à–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ</li>";
    }
    
    // –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö
    recommendations += "<li><strong>–†–µ–≥—É–ª—è—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞:</strong> –ü–æ–≤—Ç–æ—Ä—è–π—Ç–µ —Ç–µ—Å—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–∏–Ω–∞–º–∏–∫–∏</li>";
    recommendations += "<li><strong>–ó–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏:</strong> –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –±–∞–ª–∞–Ω—Å —Ä–∞–±–æ—Ç—ã, –æ—Ç–¥—ã—Ö–∞ –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π</li>";
    
    recommendations += "</ul>";
    
    return recommendations;
}

function restartTest() {
    if (currentTest === 'san') {
        startSanTest();
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∞ PSM-25
function startPsm25Test() {
    currentQuestion = 0;
    testAnswers = {};
    
    showScreen('psm25-test-screen');
    displayPsm25Question();
    updatePsm25Progress();
    updatePsm25NavigationButtons();
}

function displayPsm25Question() {
    const question = psm25TestData.questions[currentQuestion];
    const container = document.getElementById('psm25-question-container');
    
    container.innerHTML = `
        <div class="question-item">
            <div class="question-number">–í–æ–ø—Ä–æ—Å ${question.id}</div>
            <div class="question-pair">
                <div class="question-text">${question.text}</div>
                <div class="psm25-scale">
                    <div class="psm25-scale-option">
                        <input type="radio" name="question_${question.id}" value="1" id="q${question.id}_1">
                        <span class="psm25-scale-number">1</span>
                    </div>
                    <div class="psm25-scale-option">
                        <input type="radio" name="question_${question.id}" value="2" id="q${question.id}_2">
                        <span class="psm25-scale-number">2</span>
                    </div>
                    <div class="psm25-scale-option">
                        <input type="radio" name="question_${question.id}" value="3" id="q${question.id}_3">
                        <span class="psm25-scale-number">3</span>
                    </div>
                    <div class="psm25-scale-option">
                        <input type="radio" name="question_${question.id}" value="4" id="q${question.id}_4">
                        <span class="psm25-scale-number">4</span>
                    </div>
                    <div class="psm25-scale-option">
                        <input type="radio" name="question_${question.id}" value="5" id="q${question.id}_5">
                        <span class="psm25-scale-number">5</span>
                    </div>
                    <div class="psm25-scale-option">
                        <input type="radio" name="question_${question.id}" value="6" id="q${question.id}_6">
                        <span class="psm25-scale-number">6</span>
                    </div>
                    <div class="psm25-scale-option">
                        <input type="radio" name="question_${question.id}" value="7" id="q${question.id}_7">
                        <span class="psm25-scale-number">7</span>
                    </div>
                    <div class="psm25-scale-option">
                        <input type="radio" name="question_${question.id}" value="8" id="q${question.id}_8">
                        <span class="psm25-scale-number">8</span>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –µ—Å–ª–∏ –µ—Å—Ç—å
    if (testAnswers[question.id] !== undefined) {
        const radio = document.querySelector(`input[name="question_${question.id}"][value="${testAnswers[question.id]}"]`);
        if (radio) radio.checked = true;
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫
    document.querySelectorAll(`input[name="question_${question.id}"]`).forEach(radio => {
        radio.addEventListener('change', function() {
            testAnswers[question.id] = parseInt(this.value);
            updatePsm25NavigationButtons();
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–∞ –¥–ª—è –æ–ø—Ü–∏–π —à–∫–∞–ª—ã PSM-25
    document.querySelectorAll(`.psm25-scale-option`).forEach(option => {
        option.addEventListener('click', function() {
            const radio = this.querySelector('input[type="radio"]');
            if (radio) {
                radio.checked = true;
                testAnswers[question.id] = parseInt(radio.value);
                updatePsm25NavigationButtons();
            }
        });
    });
    
    document.getElementById('psm25-current-question').textContent = currentQuestion + 1;
}

function updatePsm25Progress() {
    const progress = ((currentQuestion + 1) / psm25TestData.questions.length) * 100;
    document.getElementById('psm25-progress').style.width = progress + '%';
}

function updatePsm25NavigationButtons() {
    const nextBtn = document.getElementById('psm25-next-question');
    const prevBtn = document.getElementById('psm25-prev-question');
    const finishBtn = document.getElementById('psm25-finish-test');
    
    prevBtn.disabled = currentQuestion === 0;
    
    if (currentQuestion === psm25TestData.questions.length - 1) {
        nextBtn.style.display = 'none';
        finishBtn.style.display = 'inline-block';
        finishBtn.disabled = testAnswers[psm25TestData.questions[currentQuestion].id] === undefined;
    } else {
        nextBtn.style.display = 'inline-block';
        finishBtn.style.display = 'none';
        nextBtn.disabled = testAnswers[psm25TestData.questions[currentQuestion].id] === undefined;
    }
}

function nextPsm25Question() {
    if (currentQuestion < psm25TestData.questions.length - 1) {
        currentQuestion++;
        displayPsm25Question();
        updatePsm25Progress();
        updatePsm25NavigationButtons();
    }
}

function prevPsm25Question() {
    if (currentQuestion > 0) {
        currentQuestion--;
        displayPsm25Question();
        updatePsm25Progress();
        updatePsm25NavigationButtons();
    }
}

function finishPsm25Test() {
    calculatePsm25Results();
}

function calculatePsm25Results() {
    const results = {
        total: 0,
        level: 0
    };
    
    // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –±–∞–ª–ª–∞
    Object.values(testAnswers).forEach(answer => {
        results.total += answer;
    });
    
    // –†–∞—Å—á–µ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è —Å—Ç—Ä–µ—Å—Å–∞
    results.level = (results.total / psm25TestData.questions.length).toFixed(1);
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    const completedTests = JSON.parse(localStorage.getItem('completedTests') || '{}');
    completedTests.psm25 = {
        results: results,
        timestamp: new Date().toISOString(),
        userInfo: userInfo
    };
    localStorage.setItem('completedTests', JSON.stringify(completedTests));
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ Telegram
    sendTestResultsToTelegram(results, userInfo, 'PSM-25');
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    displayPsm25Results(results);
}

function displayPsm25Results(results) {
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤
    document.getElementById('psm25-total-score').textContent = results.total;
    document.getElementById('psm25-level-score').textContent = results.level;
    
    // –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    document.getElementById('psm25-total-interpretation').textContent = interpretPsm25TotalScore(results.total);
    document.getElementById('psm25-level-interpretation').textContent = interpretPsm25Level(results.level);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    document.getElementById('psm25-summary-text').textContent = generatePsm25Summary(results);
    document.getElementById('psm25-recommendations-text').innerHTML = generatePsm25Recommendations(results);
    
    showScreen('psm25-results-screen');
}

function interpretPsm25TotalScore(score) {
    if (score <= 50) {
        return `–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ (${score} –±–∞–ª–ª–æ–≤). –£ –≤–∞—Å —Ö–æ—Ä–æ—à–∞—è —Å—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å.`;
    } else if (score <= 100) {
        return `–£–º–µ—Ä–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ (${score} –±–∞–ª–ª–æ–≤). –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–µ—Å—Å-—Ñ–∞–∫—Ç–æ—Ä—ã.`;
    } else if (score <= 150) {
        return `–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ (${score} –±–∞–ª–ª–æ–≤). –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –º–µ—Ä—ã –ø–æ —Å–Ω–∏–∂–µ–Ω–∏—é —Å—Ç—Ä–µ—Å—Å–∞.`;
    } else {
        return `–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ (${score} –±–∞–ª–ª–æ–≤). –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.`;
    }
}

function interpretPsm25Level(level) {
    const numLevel = parseFloat(level);
    if (numLevel <= 2) {
        return `–û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π (${level}/8). –û—Ç–ª–∏—á–Ω–∞—è —Å—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å.`;
    } else if (numLevel <= 4) {
        return `–ù–∏–∑–∫–∏–π (${level}/8). –•–æ—Ä–æ—à–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∫ —Å—Ç—Ä–µ—Å—Å—É.`;
    } else if (numLevel <= 6) {
        return `–£–º–µ—Ä–µ–Ω–Ω—ã–π (${level}/8). –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–Ω–∏–º–∞–Ω–∏–µ –∫ —Å—Ç—Ä–µ—Å—Å-—Ñ–∞–∫—Ç–æ—Ä–∞–º.`;
    } else {
        return `–í—ã—Å–æ–∫–∏–π (${level}/8). –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –ø–æ–º–æ—â—å –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–µ—Å—Å–æ–º.`;
    }
}

function generatePsm25Summary(results) {
    let summary = `–í–∞—à –æ–±—â–∏–π –±–∞–ª–ª —Å—Ç—Ä–µ—Å—Å–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${results.total} –∏–∑ 200 –≤–æ–∑–º–æ–∂–Ω—ã—Ö. `;
    summary += `–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞: ${results.level} –∏–∑ 8. `;
    
    if (results.total <= 50) {
        summary += "–£ –≤–∞—Å –æ—Ç–ª–∏—á–Ω–∞—è —Å—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∏ —Ö–æ—Ä–æ—à–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏.";
    } else if (results.total <= 100) {
        summary += "–£ –≤–∞—Å —É–º–µ—Ä–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ä.";
    } else if (results.total <= 150) {
        summary += "–£ –≤–∞—Å –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞, —Ç—Ä–µ–±—É—é—â–∏–π –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏.";
    } else {
        summary += "–£ –≤–∞—Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞, —Ç—Ä–µ–±—É—é—â–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–º–æ—â–∏.";
    }
    
    return summary;
}

function generatePsm25Recommendations(results) {
    let recommendations = "<ul>";
    
    if (results.total <= 50) {
        recommendations += "<li><strong>–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è:</strong> –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å –∑–¥–æ—Ä–æ–≤—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏</li>";
        recommendations += "<li><strong>–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞:</strong> –†–µ–≥—É–ª—è—Ä–Ω–æ –∑–∞–Ω–∏–º–∞–π—Ç–µ—Å—å —Å–ø–æ—Ä—Ç–æ–º –∏ –º–µ–¥–∏—Ç–∞—Ü–∏–µ–π</li>";
    } else if (results.total <= 100) {
        recommendations += "<li><strong>–†–µ–ª–∞–∫—Å–∞—Ü–∏—è:</strong> –ò–∑—É—á–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ –¥—ã—Ö–∞–Ω–∏—è –∏ –º–µ–¥–∏—Ç–∞—Ü–∏–∏</li>";
        recommendations += "<li><strong>–í—Ä–µ–º—è –¥–ª—è —Å–µ–±—è:</strong> –í—ã–¥–µ–ª—è–π—Ç–µ –≤—Ä–µ–º—è –Ω–∞ —Ö–æ–±–±–∏ –∏ –æ—Ç–¥—ã—Ö</li>";
        recommendations += "<li><strong>–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</strong> –†–µ–≥—É–ª—è—Ä–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ–º–æ–≥—É—Ç —Å–Ω–∏–∑–∏—Ç—å —Å—Ç—Ä–µ—Å—Å</li>";
    } else if (results.total <= 150) {
        recommendations += "<li><strong>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å:</strong> –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø—Å–∏—Ö–æ–ª–æ–≥–∞</li>";
        recommendations += "<li><strong>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏:</strong> –ü–µ—Ä–µ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∏ –Ω–∞–≥—Ä—É–∑–∫–∏</li>";
        recommendations += "<li><strong>–¢–µ—Ö–Ω–∏–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–µ—Å—Å–æ–º:</strong> –ò–∑—É—á–∏—Ç–µ –º–µ—Ç–æ–¥—ã –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–æ–π —Ç–µ—Ä–∞–ø–∏–∏</li>";
    } else {
        recommendations += "<li><strong>–ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å:</strong> –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ø–æ –ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–º—É –∑–¥–æ—Ä–æ–≤—å—é</li>";
        recommendations += "<li><strong>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è:</strong> –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫ –±–ª–∏–∑–∫–∏–º</li>";
        recommendations += "<li><strong>–ö—Ä–∏–∑–∏—Å–Ω–∞—è –ø–æ–º–æ—â—å:</strong> –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ä—è—á–∏–µ –ª–∏–Ω–∏–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â–∏</li>";
    }
    
    recommendations += "<li><strong>–†–µ–≥—É–ª—è—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞:</strong> –ü–æ–≤—Ç–æ—Ä—è–π—Ç–µ —Ç–µ—Å—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–∏–Ω–∞–º–∏–∫–∏</li>";
    recommendations += "<li><strong>–ó–¥–æ—Ä–æ–≤—ã–π —Å–æ–Ω:</strong> –û–±–µ—Å–ø–µ—á—å—Ç–µ 7-9 —á–∞—Å–æ–≤ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–Ω–∞</li>";
    recommendations += "<li><strong>–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ:</strong> –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∑–¥–æ—Ä–æ–≤—ã–π —Ä–∞—Ü–∏–æ–Ω</li>";
    
    recommendations += "</ul>";
    
    return recommendations;
}

function restartPsm25Test() {
    startPsm25Test();
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∞ –≤—ã–≥–æ—Ä–∞–Ω–∏—è
function startBurnoutTest() {
    burnoutCurrentQuestion = 0;
    burnoutAnswers = {};
    showScreen('burnout-test-screen');
    displayBurnoutQuestion();
    updateBurnoutProgress();
    updateBurnoutNavigationButtons();
}

function displayBurnoutQuestion() {
    const question = burnoutTestData.questions[burnoutCurrentQuestion];
    const container = document.getElementById('burnout-question-container');
    
    container.innerHTML = `
        <div class="question">
            <h3>${question.id}. ${question.text}</h3>
            <div class="burnout-radio-scale">
                <label class="burnout-radio-option">
                    <input type="radio" name="burnout-answer" value="0" data-value="0">
                    <span class="burnout-radio-number">0</span>
                </label>
                <label class="burnout-radio-option">
                    <input type="radio" name="burnout-answer" value="1" data-value="1">
                    <span class="burnout-radio-number">1</span>
                </label>
                <label class="burnout-radio-option">
                    <input type="radio" name="burnout-answer" value="2" data-value="2">
                    <span class="burnout-radio-number">2</span>
                </label>
                <label class="burnout-radio-option">
                    <input type="radio" name="burnout-answer" value="3" data-value="3">
                    <span class="burnout-radio-number">3</span>
                </label>
                <label class="burnout-radio-option">
                    <input type="radio" name="burnout-answer" value="4" data-value="4">
                    <span class="burnout-radio-number">4</span>
                </label>
                <label class="burnout-radio-option">
                    <input type="radio" name="burnout-answer" value="5" data-value="5">
                    <span class="burnout-radio-number">5</span>
                </label>
                <label class="burnout-radio-option">
                    <input type="radio" name="burnout-answer" value="6" data-value="6">
                    <span class="burnout-radio-number">6</span>
                </label>
            </div>
        </div>
    `;
    
    // –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫
    container.querySelectorAll('input[name="burnout-answer"]').forEach(radio => {
        radio.addEventListener('change', function() {
            if (this.checked) {
                // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç
                const value = parseInt(this.value);
                burnoutAnswers[question.id] = value;
                
                // –û–±–Ω–æ–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                updateBurnoutNavigationButtons();
            }
        });
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (burnoutAnswers[question.id] !== undefined) {
        const selectedRadio = container.querySelector(`input[value="${burnoutAnswers[question.id]}"]`);
        if (selectedRadio) {
            selectedRadio.checked = true;
        }
    }
}

function updateBurnoutProgress() {
    const progress = ((burnoutCurrentQuestion + 1) / burnoutTestData.questions.length) * 100;
    document.getElementById('burnout-progress').style.width = progress + '%';
    document.getElementById('burnout-current-question').textContent = burnoutCurrentQuestion + 1;
}

function updateBurnoutNavigationButtons() {
    const prevBtn = document.getElementById('burnout-prev-question');
    const nextBtn = document.getElementById('burnout-next-question');
    const finishBtn = document.getElementById('burnout-finish-test');
    
    prevBtn.disabled = burnoutCurrentQuestion === 0;
    
    if (burnoutCurrentQuestion === burnoutTestData.questions.length - 1) {
        nextBtn.style.display = 'none';
        finishBtn.style.display = 'inline-block';
        finishBtn.disabled = burnoutAnswers[burnoutTestData.questions[burnoutCurrentQuestion].id] === undefined;
    } else {
        nextBtn.style.display = 'inline-block';
        finishBtn.style.display = 'none';
        nextBtn.disabled = burnoutAnswers[burnoutTestData.questions[burnoutCurrentQuestion].id] === undefined;
    }
}

function nextBurnoutQuestion() {
    if (burnoutCurrentQuestion < burnoutTestData.questions.length - 1) {
        burnoutCurrentQuestion++;
        displayBurnoutQuestion();
        updateBurnoutProgress();
        updateBurnoutNavigationButtons();
    }
}

function prevBurnoutQuestion() {
    if (burnoutCurrentQuestion > 0) {
        burnoutCurrentQuestion--;
        displayBurnoutQuestion();
        updateBurnoutProgress();
        updateBurnoutNavigationButtons();
    }
}

function finishBurnoutTest() {
    calculateBurnoutResults();
    displayBurnoutResults();
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
    const completedTests = JSON.parse(localStorage.getItem('completedTests') || '{}');
    completedTests.burnout = true;
    localStorage.setItem('completedTests', JSON.stringify(completedTests));
    
    showScreen('burnout-results-screen');
}

function calculateBurnoutResults() {
    let emotionalScore = 0;
    let depersonalizationScore = 0;
    let professionalScore = 0;
    
    burnoutTestData.questions.forEach(question => {
        const answer = burnoutAnswers[question.id];
        if (answer !== undefined) {
            let score = answer;
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—Ä–∞—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
            if (question.reverse) {
                score = 6 - answer;
            }
            
            if (question.scale === 'emotional') {
                emotionalScore += score;
            } else if (question.scale === 'depersonalization') {
                depersonalizationScore += score;
            } else if (question.scale === 'professional') {
                professionalScore += score;
            }
        }
    });
    
    return {
        emotional: emotionalScore,
        depersonalization: depersonalizationScore,
        professional: professionalScore
    };
}

function displayBurnoutResults() {
    const results = calculateBurnoutResults();
    
    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –±–∞–ª–ª—ã
    document.getElementById('burnout-emotional-score').textContent = results.emotional;
    document.getElementById('burnout-depersonalization-score').textContent = results.depersonalization;
    document.getElementById('burnout-professional-score').textContent = results.professional;
    
    // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É—Ä–æ–≤–Ω–∏
    const emotionalLevel = getBurnoutLevel('emotional', results.emotional);
    const depersonalizationLevel = getBurnoutLevel('depersonalization', results.depersonalization);
    const professionalLevel = getBurnoutLevel('professional', results.professional);
    
    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —É—Ä–æ–≤–Ω–∏
    const emotionalLevelEl = document.getElementById('burnout-emotional-level');
    const depersonalizationLevelEl = document.getElementById('burnout-depersonalization-level');
    const professionalLevelEl = document.getElementById('burnout-professional-level');
    
    emotionalLevelEl.textContent = emotionalLevel.text;
    emotionalLevelEl.className = `level-indicator ${emotionalLevel.class}`;
    
    depersonalizationLevelEl.textContent = depersonalizationLevel.text;
    depersonalizationLevelEl.className = `level-indicator ${depersonalizationLevel.class}`;
    
    professionalLevelEl.textContent = professionalLevel.text;
    professionalLevelEl.className = `level-indicator ${professionalLevel.class}`;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–¥–∫—É –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    generateBurnoutSummary(results, emotionalLevel, depersonalizationLevel, professionalLevel);
    
    // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ Telegram
    sendTestResultsToTelegram({
        emotional: results.emotional,
        depersonalization: results.depersonalization,
        professional: results.professional,
        emotionalLevel: emotionalLevel.text,
        depersonalizationLevel: depersonalizationLevel.text,
        professionalLevel: professionalLevel.text
    }, userInfo, '–û–ø—Ä–æ—Å–Ω–∏–∫ –≤—ã–≥–æ—Ä–∞–Ω–∏—è');
}

function getBurnoutLevel(scale, score) {
    if (scale === 'emotional') {
        if (score <= 15) return { text: '–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å', class: 'low' };
        if (score <= 24) return { text: '–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å', class: 'medium' };
        return { text: '–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å', class: 'high' };
    } else if (scale === 'depersonalization') {
        if (score <= 5) return { text: '–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å', class: 'low' };
        if (score <= 10) return { text: '–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å', class: 'medium' };
        return { text: '–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å', class: 'high' };
    } else if (scale === 'professional') {
        if (score >= 37) return { text: '–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å', class: 'low' };
        if (score >= 31) return { text: '–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å', class: 'medium' };
        return { text: '–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å', class: 'high' };
    }
}

function generateBurnoutSummary(results, emotionalLevel, depersonalizationLevel, professionalLevel) {
    const summary = document.getElementById('burnout-summary');
    const recommendations = document.getElementById('burnout-recommendations');
    
    let summaryText = '<h3>–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</h3>';
    summaryText += '<p><strong>–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∏—Å—Ç–æ—â–µ–Ω–∏–µ</strong> - —á—É–≤—Å—Ç–≤–æ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –æ–ø—É—Å—Ç–æ—à–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —É—Å—Ç–∞–ª–æ—Å—Ç–∏ –æ—Ç —Ä–∞–±–æ—Ç—ã.</p>';
    summaryText += '<p><strong>–î–µ–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è</strong> - —Ü–∏–Ω–∏—á–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Ä–∞–±–æ—Ç–µ –∏ –ª—é–¥—è–º, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å.</p>';
    summaryText += '<p><strong>–†–µ–¥—É–∫—Ü–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º–∞</strong> - –æ—â—É—â–µ–Ω–∏–µ –Ω–µ–∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –∏ –Ω–µ—É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.</p>';
    
    let recommendationsText = '<h3>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>';
    
    if (emotionalLevel.class === 'high' || depersonalizationLevel.class === 'high' || professionalLevel.class === 'high') {
        recommendationsText += '<p><strong>–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –≤—ã–≥–æ—Ä–∞–Ω–∏—è:</strong></p>';
        recommendationsText += '<ul>';
        recommendationsText += '<li>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–º–æ—â—å—é –∫ –ø—Å–∏—Ö–æ–ª–æ–≥—É</li>';
        recommendationsText += '<li>–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞ –≤ —Ä–∞–±–æ—Ç–µ</li>';
        recommendationsText += '<li>–û–±—Å—É–¥–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é —Å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º</li>';
        recommendationsText += '<li>–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏ –∏ –º–µ–¥–∏—Ç–∞—Ü–∏–∏</li>';
        recommendationsText += '</ul>';
    } else if (emotionalLevel.class === 'medium' || depersonalizationLevel.class === 'medium' || professionalLevel.class === 'medium') {
        recommendationsText += '<p><strong>–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –≤—ã–≥–æ—Ä–∞–Ω–∏—è:</strong></p>';
        recommendationsText += '<ul>';
        recommendationsText += '<li>–£–¥–µ–ª–∏—Ç–µ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–¥—ã—Ö—É –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é</li>';
        recommendationsText += '<li>–ù–∞–π–¥–∏—Ç–µ –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Ä–∞–±–æ—Ç–æ–π –∏ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω—å—é</li>';
        recommendationsText += '<li>–†–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–µ—Å—Å–æ–º</li>';
        recommendationsText += '<li>–û–±—â–∞–π—Ç–µ—Å—å —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ –∏ –¥—Ä—É–∑—å—è–º–∏</li>';
        recommendationsText += '</ul>';
    } else {
        recommendationsText += '<p><strong>–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –≤—ã–≥–æ—Ä–∞–Ω–∏—è:</strong></p>';
        recommendationsText += '<p>–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∑–¥–æ—Ä–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Ä–∞–±–æ—Ç–æ–π –∏ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω—å—é.</p>';
    }
    
    summary.innerHTML = summaryText;
    recommendations.innerHTML = recommendationsText;
}

function restartBurnoutTest() {
    startBurnoutTest();
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∞ —Ç—Ä–µ–≤–æ–≥–∏
function startAnxietyTest() {
    anxietyCurrentQuestion = 0;
    anxietyAnswers = {};
    anxietyCurrentScale = 'state';
    showScreen('anxiety-test-screen');
    updateAnxietyInstruction();
    displayAnxietyQuestion();
    updateAnxietyProgress();
    updateAnxietyNavigationButtons();
}

function updateAnxietyInstruction() {
    const instructionText = document.getElementById('anxiety-instruction-text');
    const scaleText1 = document.getElementById('anxiety-scale-text-1');
    const scaleText2 = document.getElementById('anxiety-scale-text-2');
    const scaleText3 = document.getElementById('anxiety-scale-text-3');
    const scaleText4 = document.getElementById('anxiety-scale-text-4');
    
    if (anxietyCurrentScale === 'state') {
        instructionText.textContent = '–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –∫–∞–∂–¥–æ–µ –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ –æ–±–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –≥—Ä–∞—Ñ–µ —Å–ø—Ä–∞–≤–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.';
        scaleText1.textContent = '–ù–µ—Ç, —ç—Ç–æ –Ω–µ —Ç–∞–∫';
        scaleText2.textContent = '–ü–æ–∂–∞–ª—É–π, —Ç–∞–∫';
        scaleText3.textContent = '–í–µ—Ä–Ω–æ';
        scaleText4.textContent = '–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –≤–µ—Ä–Ω–æ';
    } else {
        instructionText.textContent = '–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –∫–∞–∂–¥–æ–µ –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ –æ–±–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –≥—Ä–∞—Ñ–µ —Å–ø—Ä–∞–≤–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ –≤—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç–µ –æ–±—ã—á–Ω–æ.';
        scaleText1.textContent = '–ù–∏–∫–æ–≥–¥–∞';
        scaleText2.textContent = '–ü–æ—á—Ç–∏ –Ω–∏–∫–æ–≥–¥–∞';
        scaleText3.textContent = '–ß–∞—Å—Ç–æ';
        scaleText4.textContent = '–ü–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞';
    }
}

function displayAnxietyQuestion() {
    const questions = anxietyCurrentScale === 'state' ? anxietyTestData.stateQuestions : anxietyTestData.traitQuestions;
    const question = questions[anxietyCurrentQuestion];
    const container = document.getElementById('anxiety-question-container');
    
    container.innerHTML = `
        <div class="question">
            <h3>${question.id}. ${question.text}</h3>
            <div class="anxiety-radio-scale">
                <label class="anxiety-radio-option">
                    <input type="radio" name="anxiety-answer" value="1" data-value="1">
                    <span class="anxiety-radio-number">1</span>
                </label>
                <label class="anxiety-radio-option">
                    <input type="radio" name="anxiety-answer" value="2" data-value="2">
                    <span class="anxiety-radio-number">2</span>
                </label>
                <label class="anxiety-radio-option">
                    <input type="radio" name="anxiety-answer" value="3" data-value="3">
                    <span class="anxiety-radio-number">3</span>
                </label>
                <label class="anxiety-radio-option">
                    <input type="radio" name="anxiety-answer" value="4" data-value="4">
                    <span class="anxiety-radio-number">4</span>
                </label>
            </div>
        </div>
    `;
    
    // –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫
    container.querySelectorAll('input[name="anxiety-answer"]').forEach(radio => {
        radio.addEventListener('change', function() {
            if (this.checked) {
                // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç
                const value = parseInt(this.value);
                anxietyAnswers[question.id] = value;
                
                // –û–±–Ω–æ–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                updateAnxietyNavigationButtons();
            }
        });
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (anxietyAnswers[question.id] !== undefined) {
        const selectedRadio = container.querySelector(`input[value="${anxietyAnswers[question.id]}"]`);
        if (selectedRadio) {
            selectedRadio.checked = true;
        }
    }
}

function updateAnxietyProgress() {
    const totalQuestions = anxietyTestData.stateQuestions.length + anxietyTestData.traitQuestions.length;
    const currentProgress = anxietyCurrentScale === 'state' ? 
        anxietyCurrentQuestion + 1 : 
        anxietyTestData.stateQuestions.length + anxietyCurrentQuestion + 1;
    
    const progress = (currentProgress / totalQuestions) * 100;
    document.getElementById('anxiety-progress').style.width = progress + '%';
    document.getElementById('anxiety-current-question').textContent = currentProgress;
}

function updateAnxietyNavigationButtons() {
    const prevBtn = document.getElementById('anxiety-prev-question');
    const nextBtn = document.getElementById('anxiety-next-question');
    const finishBtn = document.getElementById('anxiety-finish-test');
    
    const questions = anxietyCurrentScale === 'state' ? anxietyTestData.stateQuestions : anxietyTestData.traitQuestions;
    const isLastQuestionOfScale = anxietyCurrentQuestion === questions.length - 1;
    const isLastQuestionOfTest = anxietyCurrentScale === 'trait' && isLastQuestionOfScale;
    
    prevBtn.disabled = anxietyCurrentQuestion === 0 && anxietyCurrentScale === 'state';
    
    if (isLastQuestionOfTest) {
        nextBtn.style.display = 'none';
        finishBtn.style.display = 'inline-block';
        finishBtn.disabled = anxietyAnswers[questions[anxietyCurrentQuestion].id] === undefined;
    } else {
        nextBtn.style.display = 'inline-block';
        finishBtn.style.display = 'none';
        nextBtn.disabled = anxietyAnswers[questions[anxietyCurrentQuestion].id] === undefined;
    }
}

function nextAnxietyQuestion() {
    const questions = anxietyCurrentScale === 'state' ? anxietyTestData.stateQuestions : anxietyTestData.traitQuestions;
    const isLastQuestionOfScale = anxietyCurrentQuestion === questions.length - 1;
    
    if (isLastQuestionOfScale && anxietyCurrentScale === 'state') {
        // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–π —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏
        anxietyCurrentScale = 'trait';
        anxietyCurrentQuestion = 0;
        updateAnxietyInstruction();
    } else if (anxietyCurrentQuestion < questions.length - 1) {
        anxietyCurrentQuestion++;
    }
    
    displayAnxietyQuestion();
    updateAnxietyProgress();
    updateAnxietyNavigationButtons();
}

function prevAnxietyQuestion() {
    if (anxietyCurrentQuestion > 0) {
        anxietyCurrentQuestion--;
    } else if (anxietyCurrentScale === 'trait') {
        // –ü–µ—Ä–µ—Ö–æ–¥ –æ–±—Ä–∞—Ç–Ω–æ –∫ —Å–∏—Ç—É–∞—Ü–∏–æ–Ω–Ω–æ–π —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏
        anxietyCurrentScale = 'state';
        anxietyCurrentQuestion = anxietyTestData.stateQuestions.length - 1;
        updateAnxietyInstruction();
    }
    
    displayAnxietyQuestion();
    updateAnxietyProgress();
    updateAnxietyNavigationButtons();
}

function finishAnxietyTest() {
    calculateAnxietyResults();
    displayAnxietyResults();
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
    const completedTests = JSON.parse(localStorage.getItem('completedTests') || '{}');
    completedTests.anxiety = true;
    localStorage.setItem('completedTests', JSON.stringify(completedTests));
    
    showScreen('anxiety-results-screen');
}

function calculateAnxietyResults() {
    let stateScore = 0;
    let traitScore = 0;
    
    // –†–∞—Å—á–µ—Ç —Å–∏—Ç—É–∞—Ü–∏–æ–Ω–Ω–æ–π —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏
    anxietyTestData.stateQuestions.forEach(question => {
        const answer = anxietyAnswers[question.id];
        if (answer !== undefined) {
            let score = answer;
            if (question.reverse) {
                score = 5 - answer;
            }
            stateScore += score;
        }
    });
    
    // –†–∞—Å—á–µ—Ç –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–π —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏
    anxietyTestData.traitQuestions.forEach(question => {
        const answer = anxietyAnswers[question.id];
        if (answer !== undefined) {
            let score = answer;
            if (question.reverse) {
                score = 5 - answer;
            }
            traitScore += score;
        }
    });
    
    // –í—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è (—Å—É–º–º–∞ –±–∞–ª–ª–æ–≤ / 20)
    const stateAverage = stateScore / 20;
    const traitAverage = traitScore / 20;
    
    return {
        state: stateScore,
        trait: traitScore,
        stateAverage: stateAverage,
        traitAverage: traitAverage
    };
}

function displayAnxietyResults() {
    const results = calculateAnxietyResults();
    
    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –±–∞–ª–ª—ã –∏ —Å—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    document.getElementById('anxiety-state-score').textContent = `${results.state} (—Å—Ä–µ–¥–Ω–∏–π: ${results.stateAverage.toFixed(1)})`;
    document.getElementById('anxiety-trait-score').textContent = `${results.trait} (—Å—Ä–µ–¥–Ω–∏–π: ${results.traitAverage.toFixed(1)})`;
    
    // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É—Ä–æ–≤–Ω–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    const stateLevel = getAnxietyLevel('state', results.stateAverage);
    const traitLevel = getAnxietyLevel('trait', results.traitAverage);
    
    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —É—Ä–æ–≤–Ω–∏
    const stateLevelEl = document.getElementById('anxiety-state-level');
    const traitLevelEl = document.getElementById('anxiety-trait-level');
    
    stateLevelEl.textContent = stateLevel.text;
    stateLevelEl.className = `level-indicator ${stateLevel.class}`;
    
    traitLevelEl.textContent = traitLevel.text;
    traitLevelEl.className = `level-indicator ${traitLevel.class}`;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–¥–∫—É –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    generateAnxietySummary(results, stateLevel, traitLevel);
    
    // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ Telegram
    sendTestResultsToTelegram({
        state: results.state,
        trait: results.trait,
        stateAverage: results.stateAverage,
        traitAverage: results.traitAverage,
        stateLevel: stateLevel.text,
        traitLevel: traitLevel.text
    }, userInfo, '–®–∫–∞–ª–∞ —Ç—Ä–µ–≤–æ–≥–∏');
}

function getAnxietyLevel(scale, score) {
    // –î–∏–∞–ø–∞–∑–æ–Ω—ã –¥–ª—è —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π (1.0-4.0)
    if (score < 1.5) return { text: '–ù–∏–∑–∫–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å', class: 'low' };
    if (score < 2.0) return { text: '–ù–∏–∑–∫–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å', class: 'low' };
    if (score < 3.0) return { text: '–°—Ä–µ–¥–Ω—è—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å', class: 'medium' };
    if (score < 3.5) return { text: '–í—ã—Å–æ–∫–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å', class: 'high' };
    return { text: '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å', class: 'high' };
}

function generateAnxietySummary(results, stateLevel, traitLevel) {
    const summary = document.getElementById('anxiety-summary');
    const recommendations = document.getElementById('anxiety-recommendations');
    
    let summaryText = '<h3>–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</h3>';
    summaryText += '<p><strong>–°–∏—Ç—É–∞—Ü–∏–æ–Ω–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å</strong> - –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É—é—â–µ–µ—Å—è —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω—ã–º–∏ –æ—â—É—â–µ–Ω–∏—è–º–∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è, –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–∞, –æ–∑–∞–±–æ—á–µ–Ω–Ω–æ—Å—Ç–∏.</p>';
    summaryText += '<p><strong>–õ–∏—á–Ω–æ—Å—Ç–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å</strong> - —É—Å—Ç–æ–π—á–∏–≤–∞—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞, –æ—Ç—Ä–∞–∂–∞—é—â–∞—è –ø—Ä–µ–¥—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å –∫ —Ç—Ä–µ–≤–æ–≥–µ –∏ —Å–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—Ç—å —à–∏—Ä–æ–∫–∏–π –∫—Ä—É–≥ —Å–∏—Ç—É–∞—Ü–∏–π –∫–∞–∫ —É–≥—Ä–æ–∂–∞—é—â–∏–µ.</p>';
    
    summaryText += '<h3>–£—Ä–æ–≤–Ω–∏ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏:</h3>';
    summaryText += '<ul>';
    summaryText += '<li><strong>–ù–∏–∑–∫–∏–π (1.5-1.9 –±–∞–ª–ª–∞)</strong> - –Ω–∏–∑–∫–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å</li>';
    summaryText += '<li><strong>–°—Ä–µ–¥–Ω–∏–π (2.0-2.9 –±–∞–ª–ª–∞)</strong> - —Å—Ä–µ–¥–Ω—è—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å</li>';
    summaryText += '<li><strong>–í—ã—Å–æ–∫–∏–π (3.0-3.4 –±–∞–ª–ª–∞)</strong> - –≤—ã—Å–æ–∫–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å</li>';
    summaryText += '<li><strong>–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π (3.5-4.0 –±–∞–ª–ª–∞)</strong> - –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å</li>';
    summaryText += '</ul>';
    
    let recommendationsText = '<h3>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>';
    
    if (stateLevel.class === 'high' || traitLevel.class === 'high') {
        recommendationsText += '<p><strong>–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏:</strong></p>';
        recommendationsText += '<ul>';
        recommendationsText += '<li>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π –∫ –ø—Å–∏—Ö–æ–ª–æ–≥—É</li>';
        recommendationsText += '<li>–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏ –∏ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è</li>';
        recommendationsText += '<li>–ò–∑—É—á–∏—Ç–µ –º–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–µ—Å—Å–æ–º</li>';
        recommendationsText += '<li>–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏–ª–∏ –π–æ–≥–∏</li>';
        recommendationsText += '</ul>';
    } else if (stateLevel.class === 'medium' || traitLevel.class === 'medium') {
        recommendationsText += '<p><strong>–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏:</strong></p>';
        recommendationsText += '<ul>';
        recommendationsText += '<li>–†–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏ —Å–∞–º–æ—Ä–µ–≥—É–ª—è—Ü–∏–∏</li>';
        recommendationsText += '<li>–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è</li>';
        recommendationsText += '<li>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∑–¥–æ—Ä–æ–≤—ã–π —Ä–µ–∂–∏–º —Å–Ω–∞</li>';
        recommendationsText += '<li>–ò–∑—É—á–∞–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ–π —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏</li>';
        recommendationsText += '</ul>';
    } else {
        recommendationsText += '<p><strong>–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏:</strong></p>';
        recommendationsText += '<p>–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ –∏ –∑–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏.</p>';
    }
    
    summary.innerHTML = summaryText;
    recommendations.innerHTML = recommendationsText;
}

function restartAnxietyTest() {
    startAnxietyTest();
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∞ –¥–µ–ø—Ä–µ—Å—Å–∏–∏
function startDepressionTest() {
    depressionCurrentQuestion = 0;
    depressionAnswers = {};
    showScreen('depression-test-screen');
    displayDepressionQuestion();
    updateDepressionProgress();
    updateDepressionNavigationButtons();
}

function displayDepressionQuestion() {
    const questionGroup = getDepressionQuestionGroup(depressionCurrentQuestion + 1);
    const container = document.getElementById('depression-question-container');
    
    container.innerHTML = `
        <div class="question">
            <h3>–í–æ–ø—Ä–æ—Å ${depressionCurrentQuestion + 1}</h3>
            <p>–í—ã–±–µ—Ä–∏—Ç–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ª—É—á—à–µ –≤—Å–µ–≥–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é:</p>
            <div class="depression-options">
                ${questionGroup.map((option, index) => `
                    <label class="depression-option">
                        <input type="radio" name="depression-answer" value="${option.score}" data-score="${option.score}">
                        <span class="depression-option-text">${option.text}</span>
                    </label>
                `).join('')}
            </div>
        </div>
    `;
    
    // –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫
    container.querySelectorAll('input[name="depression-answer"]').forEach(radio => {
        radio.addEventListener('change', function() {
            if (this.checked) {
                // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç
                const score = parseInt(this.value);
                depressionAnswers[depressionCurrentQuestion + 1] = score;
                
                // –û–±–Ω–æ–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                updateDepressionNavigationButtons();
            }
        });
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (depressionAnswers[depressionCurrentQuestion + 1] !== undefined) {
        const selectedRadio = container.querySelector(`input[value="${depressionAnswers[depressionCurrentQuestion + 1]}"]`);
        if (selectedRadio) {
            selectedRadio.checked = true;
        }
    }
}

function getDepressionQuestionGroup(questionNumber) {
    return beckDepressionTestData.questions.filter(q => q.id === questionNumber);
}

function updateDepressionProgress() {
    const progress = ((depressionCurrentQuestion + 1) / 21) * 100;
    document.getElementById('depression-progress').style.width = progress + '%';
    document.getElementById('depression-current-question').textContent = depressionCurrentQuestion + 1;
}

function updateDepressionNavigationButtons() {
    const prevBtn = document.getElementById('depression-prev-question');
    const nextBtn = document.getElementById('depression-next-question');
    const finishBtn = document.getElementById('depression-finish-test');
    
    prevBtn.disabled = depressionCurrentQuestion === 0;
    
    if (depressionCurrentQuestion === 20) { // 21 –≤–æ–ø—Ä–æ—Å (0-20)
        nextBtn.style.display = 'none';
        finishBtn.style.display = 'inline-block';
        finishBtn.disabled = depressionAnswers[depressionCurrentQuestion + 1] === undefined;
    } else {
        nextBtn.style.display = 'inline-block';
        finishBtn.style.display = 'none';
        nextBtn.disabled = depressionAnswers[depressionCurrentQuestion + 1] === undefined;
    }
}

function nextDepressionQuestion() {
    if (depressionCurrentQuestion < 20) {
        depressionCurrentQuestion++;
        displayDepressionQuestion();
        updateDepressionProgress();
        updateDepressionNavigationButtons();
    }
}

function prevDepressionQuestion() {
    if (depressionCurrentQuestion > 0) {
        depressionCurrentQuestion--;
        displayDepressionQuestion();
        updateDepressionProgress();
        updateDepressionNavigationButtons();
    }
}

function finishDepressionTest() {
    calculateDepressionResults();
    displayDepressionResults();
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
    const completedTests = JSON.parse(localStorage.getItem('completedTests') || '{}');
    completedTests.depression = true;
    localStorage.setItem('completedTests', JSON.stringify(completedTests));
    
    showScreen('depression-results-screen');
}

function calculateDepressionResults() {
    let totalScore = 0;
    let cognitiveAffectiveScore = 0;
    let somaticScore = 0;
    
    // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –±–∞–ª–ª–∞
    for (let i = 1; i <= 21; i++) {
        const answer = depressionAnswers[i];
        if (answer !== undefined) {
            totalScore += answer;
        }
    }
    
    // –ü–æ–¥—Å—á–µ—Ç —Å—É–±—à–∫–∞–ª
    // –ö–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–∞—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è —Å—É–±—à–∫–∞–ª–∞ (–≤–æ–ø—Ä–æ—Å—ã 1-13)
    for (let i = 1; i <= 13; i++) {
        const answer = depressionAnswers[i];
        if (answer !== undefined) {
            cognitiveAffectiveScore += answer;
        }
    }
    
    // –°–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å—É–±—à–∫–∞–ª–∞ (–≤–æ–ø—Ä–æ—Å—ã 14-21)
    for (let i = 14; i <= 21; i++) {
        const answer = depressionAnswers[i];
        if (answer !== undefined) {
            somaticScore += answer;
        }
    }
    
    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –¥–µ–ø—Ä–µ—Å—Å–∏–∏
    let level = '';
    if (totalScore <= 9) {
        level = '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–µ–ø—Ä–µ—Å—Å–∏–≤–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤';
    } else if (totalScore <= 15) {
        level = '–õ–µ–≥–∫–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è (—Å—É–±–¥–µ–ø—Ä–µ—Å—Å–∏—è)';
    } else if (totalScore <= 19) {
        level = '–£–º–µ—Ä–µ–Ω–Ω–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è';
    } else if (totalScore <= 29) {
        level = '–í—ã—Ä–∞–∂–µ–Ω–Ω–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è (—Å—Ä–µ–¥–Ω–µ–π —Ç—è–∂–µ—Å—Ç–∏)';
    } else {
        level = '–¢—è–∂–µ–ª–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è';
    }
    
    return {
        total: totalScore,
        cognitiveAffective: cognitiveAffectiveScore,
        somatic: somaticScore,
        level: level
    };
}

function displayDepressionResults() {
    const results = calculateDepressionResults();
    
    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –±–∞–ª–ª—ã
    document.getElementById('depression-total-score').textContent = results.total;
    document.getElementById('depression-cognitive-affective-score').textContent = results.cognitiveAffective;
    document.getElementById('depression-somatic-score').textContent = results.somatic;
    document.getElementById('depression-level').textContent = results.level;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–¥–∫—É –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    generateDepressionSummary(results);
    
    // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ Telegram
    sendTestResultsToTelegram(results, userInfo, '–®–∫–∞–ª–∞ –¥–µ–ø—Ä–µ—Å—Å–∏–∏');
}

function generateDepressionSummary(results) {
    const summary = document.getElementById('depression-summary');
    const recommendations = document.getElementById('depression-recommendations');
    
    let summaryText = '<h3>–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</h3>';
    summaryText += `<p><strong>–û–±—â–∏–π –±–∞–ª–ª:</strong> ${results.total} –∏–∑ 63 –≤–æ–∑–º–æ–∂–Ω—ã—Ö</p>`;
    summaryText += `<p><strong>–£—Ä–æ–≤–µ–Ω—å –¥–µ–ø—Ä–µ—Å—Å–∏–∏:</strong> ${results.level}</p>`;
    summaryText += `<p><strong>–ö–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–∞—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è —Å—É–±—à–∫–∞–ª–∞:</strong> ${results.cognitiveAffective} –±–∞–ª–ª–æ–≤ (–≤–æ–ø—Ä–æ—Å—ã 1-13)</p>`;
    summaryText += `<p><strong>–°–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å—É–±—à–∫–∞–ª–∞:</strong> ${results.somatic} –±–∞–ª–ª–æ–≤ (–≤–æ–ø—Ä–æ—Å—ã 14-21)</p>`;
    
    summaryText += '<h3>–®–∫–∞–ª–∞ –æ—Ü–µ–Ω–∫–∏:</h3>';
    summaryText += '<ul>';
    summaryText += '<li><strong>0-9 –±–∞–ª–ª–æ–≤:</strong> –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–µ–ø—Ä–µ—Å—Å–∏–≤–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤</li>';
    summaryText += '<li><strong>10-15 –±–∞–ª–ª–æ–≤:</strong> –õ–µ–≥–∫–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è (—Å—É–±–¥–µ–ø—Ä–µ—Å—Å–∏—è)</li>';
    summaryText += '<li><strong>16-19 –±–∞–ª–ª–æ–≤:</strong> –£–º–µ—Ä–µ–Ω–Ω–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è</li>';
    summaryText += '<li><strong>20-29 –±–∞–ª–ª–æ–≤:</strong> –í—ã—Ä–∞–∂–µ–Ω–Ω–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è (—Å—Ä–µ–¥–Ω–µ–π —Ç—è–∂–µ—Å—Ç–∏)</li>';
    summaryText += '<li><strong>30-63 –±–∞–ª–ª–∞:</strong> –¢—è–∂–µ–ª–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è</li>';
    summaryText += '</ul>';
    
    let recommendationsText = '<h3>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>';
    
    if (results.total <= 9) {
        recommendationsText += '<p><strong>–û—Ç–ª–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!</strong></p>';
        recommendationsText += '<ul>';
        recommendationsText += '<li>–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∑–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏</li>';
        recommendationsText += '<li>–†–µ–≥—É–ª—è—Ä–Ω–æ –∑–∞–Ω–∏–º–∞–π—Ç–µ—Å—å —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏</li>';
        recommendationsText += '<li>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏</li>';
        recommendationsText += '<li>–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–µ—Å—Å–æ–º</li>';
        recommendationsText += '</ul>';
    } else if (results.total <= 15) {
        recommendationsText += '<p><strong>–õ–µ–≥–∫–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è:</strong></p>';
        recommendationsText += '<ul>';
        recommendationsText += '<li>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ä–µ–∂–∏–º —Å–Ω–∞ –∏ –ø–∏—Ç–∞–Ω–∏—è</li>';
        recommendationsText += '<li>–£–≤–µ–ª–∏—á—å—Ç–µ —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</li>';
        recommendationsText += '<li>–ü—Ä–æ–≤–æ–¥–∏—Ç–µ –≤—Ä–µ–º—è —Å –±–ª–∏–∑–∫–∏–º–∏ –ª—é–¥—å–º–∏</li>';
        recommendationsText += '<li>–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø—Å–∏—Ö–æ–ª–æ–≥–∞</li>';
        recommendationsText += '</ul>';
    } else if (results.total <= 19) {
        recommendationsText += '<p><strong>–£–º–µ—Ä–µ–Ω–Ω–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è:</strong></p>';
        recommendationsText += '<ul>';
        recommendationsText += '<li>–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –∏–ª–∏ –ø—Å–∏—Ö–∏–∞—Ç—Ä–∞</li>';
        recommendationsText += '<li>–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏</li>';
        recommendationsText += '<li>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫ –±–ª–∏–∑–∫–∏–º</li>';
        recommendationsText += '<li>–°–æ–±–ª—é–¥–∞–π—Ç–µ —Ä–µ–∂–∏–º –¥–Ω—è</li>';
        recommendationsText += '</ul>';
    } else if (results.total <= 29) {
        recommendationsText += '<p><strong>–í—ã—Ä–∞–∂–µ–Ω–Ω–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è:</strong></p>';
        recommendationsText += '<ul>';
        recommendationsText += '<li>–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Å–∏—Ö–∏–∞—Ç—Ä—É</li>';
        recommendationsText += '<li>–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–∑–Ω–æ–≥–æ –ª–µ—á–µ–Ω–∏—è</li>';
        recommendationsText += '<li>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫ –±–ª–∏–∑–∫–∏–º</li>';
        recommendationsText += '<li>–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ä—è—á–∏–µ –ª–∏–Ω–∏–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â–∏</li>';
        recommendationsText += '</ul>';
    } else {
        recommendationsText += '<p><strong>–¢—è–∂–µ–ª–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è:</strong></p>';
        recommendationsText += '<ul>';
        recommendationsText += '<li>–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–º–æ—â—å—é</li>';
        recommendationsText += '<li>–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≥–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏</li>';
        recommendationsText += '<li>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫ –±–ª–∏–∑–∫–∏–º</li>';
        recommendationsText += '<li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫—Ä–∏–∑–∏—Å–Ω—ã–µ —Å–ª—É–∂–±—ã –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â–∏</li>';
        recommendationsText += '</ul>';
    }
    
    summary.innerHTML = summaryText;
    recommendations.innerHTML = recommendationsText;
}

function restartDepressionTest() {
    startDepressionTest();
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∞ –Ω–∞ –±—É–ª–ª–∏–Ω–≥
function startBullyingTest() {
    bullyingCurrentSection = 0;
    bullyingCurrentQuestion = 0;
    bullyingAnswers = {};
    showScreen('bullying-test-screen');
    displayBullyingQuestion();
    updateBullyingProgress();
    updateBullyingNavigationButtons();
}

function displayBullyingQuestion() {
    const section = bullyingTestData.sections[bullyingCurrentSection];
    const question = section.questions[bullyingCurrentQuestion];
    const container = document.getElementById('bullying-question-container');
    
    container.innerHTML = `
        <div class="question">
            <h3>${section.title}</h3>
            <div class="bullying-question-text">${question.text}</div>
            <div class="bullying-radio-scale">
                <label class="bullying-radio-option">
                    <input type="radio" name="bullying-answer" value="0" data-value="0">
                    <span class="bullying-radio-text">–ù–ï–¢</span>
                </label>
                <label class="bullying-radio-option">
                    <input type="radio" name="bullying-answer" value="1" data-value="1">
                    <span class="bullying-radio-text">–î–ê</span>
                </label>
            </div>
        </div>
    `;
    
    // –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫
    container.querySelectorAll('input[name="bullying-answer"]').forEach(radio => {
        radio.addEventListener('change', function() {
            if (this.checked) {
                // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç
                const value = parseInt(this.value);
                bullyingAnswers[question.id] = value;
                
                // –û–±–Ω–æ–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                updateBullyingNavigationButtons();
            }
        });
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (bullyingAnswers[question.id] !== undefined) {
        const selectedRadio = container.querySelector(`input[value="${bullyingAnswers[question.id]}"]`);
        if (selectedRadio) {
            selectedRadio.checked = true;
        }
    }
}

function updateBullyingProgress() {
    const totalQuestions = 48; // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ —Ç–µ—Å—Ç–µ
    let currentQuestionNumber = 0;
    
    for (let i = 0; i < bullyingCurrentSection; i++) {
        currentQuestionNumber += bullyingTestData.sections[i].questions.length;
    }
    currentQuestionNumber += bullyingCurrentQuestion + 1;
    
    const progress = (currentQuestionNumber / totalQuestions) * 100;
    document.getElementById('bullying-progress').style.width = progress + '%';
    document.getElementById('bullying-current-question').textContent = currentQuestionNumber;
}

function updateBullyingNavigationButtons() {
    const prevBtn = document.getElementById('bullying-prev-question');
    const nextBtn = document.getElementById('bullying-next-question');
    const finishBtn = document.getElementById('bullying-finish-test');
    
    const section = bullyingTestData.sections[bullyingCurrentSection];
    const isLastQuestionOfSection = bullyingCurrentQuestion === section.questions.length - 1;
    const isLastSection = bullyingCurrentSection === bullyingTestData.sections.length - 1;
    const isLastQuestionOfTest = isLastSection && isLastQuestionOfSection;
    
    prevBtn.disabled = bullyingCurrentSection === 0 && bullyingCurrentQuestion === 0;
    
    if (isLastQuestionOfTest) {
        nextBtn.style.display = 'none';
        finishBtn.style.display = 'inline-block';
        finishBtn.disabled = bullyingAnswers[section.questions[bullyingCurrentQuestion].id] === undefined;
    } else {
        nextBtn.style.display = 'inline-block';
        finishBtn.style.display = 'none';
        nextBtn.disabled = bullyingAnswers[section.questions[bullyingCurrentQuestion].id] === undefined;
    }
}

function nextBullyingQuestion() {
    const section = bullyingTestData.sections[bullyingCurrentSection];
    const isLastQuestionOfSection = bullyingCurrentQuestion === section.questions.length - 1;
    
    if (isLastQuestionOfSection) {
        // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å–µ–∫—Ü–∏–∏
        if (bullyingCurrentSection < bullyingTestData.sections.length - 1) {
            bullyingCurrentSection++;
            bullyingCurrentQuestion = 0;
        }
    } else {
        // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ —Å–µ–∫—Ü–∏–∏
        bullyingCurrentQuestion++;
    }
    
    displayBullyingQuestion();
    updateBullyingProgress();
    updateBullyingNavigationButtons();
}

function prevBullyingQuestion() {
    if (bullyingCurrentQuestion > 0) {
        bullyingCurrentQuestion--;
    } else if (bullyingCurrentSection > 0) {
        // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å–µ–∫—Ü–∏–∏
        bullyingCurrentSection--;
        bullyingCurrentQuestion = bullyingTestData.sections[bullyingCurrentSection].questions.length - 1;
    }
    
    displayBullyingQuestion();
    updateBullyingProgress();
    updateBullyingNavigationButtons();
}

function finishBullyingTest() {
    calculateBullyingResults();
    displayBullyingResults();
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
    const completedTests = JSON.parse(localStorage.getItem('completedTests') || '{}');
    completedTests.bullying = true;
    localStorage.setItem('completedTests', JSON.stringify(completedTests));
    
    showScreen('bullying-results-screen');
}

function calculateBullyingResults() {
    const results = {
        insecurity: 0,
        wellbeing: 0,
        disunity: 0,
        equality: 0
    };
    
    // –ü–æ–¥—Å—á–µ—Ç –±–∞–ª–ª–æ–≤ –ø–æ —à–∫–∞–ª–∞–º
    bullyingTestData.sections.forEach(section => {
        section.questions.forEach(question => {
            const answer = bullyingAnswers[question.id];
            if (answer !== undefined) {
                let score = answer;
                
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—Ä–∞—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
                if (question.reverse) {
                    score = 1 - answer;
                }
                
                results[question.scale] += score;
            }
        });
    });
    
    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω–µ–π –¥–ª—è –∫–∞–∂–¥–æ–π —à–∫–∞–ª—ã
    results.insecurityLevel = getBullyingLevel('insecurity', results.insecurity);
    results.wellbeingLevel = getBullyingLevel('wellbeing', results.wellbeing);
    results.disunityLevel = getBullyingLevel('disunity', results.disunity);
    results.equalityLevel = getBullyingLevel('equality', results.equality);
    
    return results;
}

function getBullyingLevel(scale, score) {
    // –ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∞–±–ª–∏—Ü—ã –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const norms = {
        insecurity: { low: 0, medium: 8, high: 12 },
        wellbeing: { low: 0, medium: 6, high: 9 },
        disunity: { low: 0, medium: 2, high: 4 },
        equality: { low: 0, medium: 3, high: 6 }
    };
    
    const norm = norms[scale];
    if (score <= norm.low) return '–ù–∏–∑–∫–∏–π';
    if (score <= norm.medium) return '–°—Ä–µ–¥–Ω–∏–π';
    if (score <= norm.high) return '–í—ã—Å–æ–∫–∏–π';
    return '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π';
}

function displayBullyingResults() {
    const results = calculateBullyingResults();
    
    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –±–∞–ª–ª—ã
    document.getElementById('bullying-insecurity-score').textContent = results.insecurity;
    document.getElementById('bullying-wellbeing-score').textContent = results.wellbeing;
    document.getElementById('bullying-disunity-score').textContent = results.disunity;
    document.getElementById('bullying-equality-score').textContent = results.equality;
    
    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —É—Ä–æ–≤–Ω–∏
    const insecurityLevelEl = document.getElementById('bullying-insecurity-level');
    const wellbeingLevelEl = document.getElementById('bullying-wellbeing-level');
    const disunityLevelEl = document.getElementById('bullying-disunity-level');
    const equalityLevelEl = document.getElementById('bullying-equality-level');
    
    insecurityLevelEl.textContent = results.insecurityLevel;
    insecurityLevelEl.className = `level-indicator ${getBullyingLevelClass(results.insecurityLevel)}`;
    
    wellbeingLevelEl.textContent = results.wellbeingLevel;
    wellbeingLevelEl.className = `level-indicator ${getBullyingLevelClass(results.wellbeingLevel)}`;
    
    disunityLevelEl.textContent = results.disunityLevel;
    disunityLevelEl.className = `level-indicator ${getBullyingLevelClass(results.disunityLevel)}`;
    
    equalityLevelEl.textContent = results.equalityLevel;
    equalityLevelEl.className = `level-indicator ${getBullyingLevelClass(results.equalityLevel)}`;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–¥–∫—É –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    generateBullyingSummary(results);
    
    // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ Telegram
    sendTestResultsToTelegram(results, userInfo, '–û–ø—Ä–æ—Å–Ω–∏–∫ —Ä–∏—Å–∫–∞ –±—É–ª–ª–∏–Ω–≥–∞');
}

function getBullyingLevelClass(level) {
    switch(level) {
        case '–ù–∏–∑–∫–∏–π': return 'low';
        case '–°—Ä–µ–¥–Ω–∏–π': return 'medium';
        case '–í—ã—Å–æ–∫–∏–π': return 'high';
        case '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π': return 'high';
        default: return 'medium';
    }
}

function generateBullyingSummary(results) {
    const summary = document.getElementById('bullying-summary');
    const recommendations = document.getElementById('bullying-recommendations');
    
    let summaryText = '<h3>–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</h3>';
    summaryText += '<p><strong>–®–∫–∞–ª–∞ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</strong> - —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω–æ—Å—Ç—å –Ω–µ—É–≤–∞–∂–µ–Ω–∏—è, –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–Ω–µ–±—Ä–µ–∂–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ –≤ –∫–ª–∞—Å—Å–µ.</p>';
    summaryText += '<p><strong>–®–∫–∞–ª–∞ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è</strong> - —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –≥—Ä–∞–Ω–∏—Ü, —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —É–≤–∞–∂–µ–Ω–∏—è –∫–∞–∫ –Ω–æ—Ä–º—ã –≤ –≥—Ä—É–ø–ø–µ.</p>';
    summaryText += '<p><strong>–®–∫–∞–ª–∞ —Ä–∞–∑–æ–±—â–µ–Ω–Ω–æ—Å—Ç–∏</strong> - –≤—ã—è–≤–ª—è–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–ø–ª–æ—á–µ–Ω–Ω–æ—Å—Ç–∏, —Å—Ç–µ–ø–µ–Ω—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –º–µ–∂–¥—É –ø–æ–¥—Ä–æ—Å—Ç–∫–∞–º–∏ –∏ –º–µ–∂–¥—É –ø–æ–¥—Ä–æ—Å—Ç–∫–∞–º–∏ –∏ —É—á–∏—Ç–µ–ª—è–º–∏.</p>';
    summaryText += '<p><strong>–®–∫–∞–ª–∞ —Ä–∞–≤–Ω–æ–ø—Ä–∞–≤–∏—è</strong> - –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≥—Ä—É–ø–ø—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ä–æ–ª–∏ –∏ –≤—Å—Ç—É–ø–∞—Ç—å –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ.</p>';
    
    let recommendationsText = '<h3>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>';
    
    if (results.insecurityLevel === '–í—ã—Å–æ–∫–∏–π' || results.insecurityLevel === '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π') {
        recommendationsText += '<p><strong>–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:</strong></p>';
        recommendationsText += '<ul>';
        recommendationsText += '<li>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å–∏–ª–∏—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å –∑–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º –ø—Ä–∞–≤–∏–ª –≤ –∫–ª–∞—Å—Å–µ</li>';
        recommendationsText += '<li>–ü—Ä–æ–≤–µ—Å—Ç–∏ —Ä–∞–±–æ—Ç—É –ø–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—é —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –º–µ–∂–¥—É —É—á–µ–Ω–∏–∫–∞–º–∏</li>';
        recommendationsText += '<li>–û–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–ª—É—á–∞–∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è</li>';
        recommendationsText += '<li>–†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è —à–∫–æ–ª—å–Ω–æ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∞</li>';
        recommendationsText += '</ul>';
    }
    
    if (results.wellbeingLevel === '–ù–∏–∑–∫–∏–π') {
        recommendationsText += '<p><strong>–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è:</strong></p>';
        recommendationsText += '<ul>';
        recommendationsText += '<li>–£—Å–∏–ª–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã –≤ –∫–ª–∞—Å—Å–µ</li>';
        recommendationsText += '<li>–ü—Ä–æ–≤–µ—Å—Ç–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –ø–æ —Å–ø–ª–æ—á–µ–Ω–∏—é –∫–æ–ª–ª–µ–∫—Ç–∏–≤–∞</li>';
        recommendationsText += '<li>–û–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É—á–µ–Ω–∏–∫–æ–≤</li>';
        recommendationsText += '</ul>';
    }
    
    if (results.disunityLevel === '–í—ã—Å–æ–∫–∏–π' || results.disunityLevel === '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π') {
        recommendationsText += '<p><strong>–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞–∑–æ–±—â–µ–Ω–Ω–æ—Å—Ç–∏:</strong></p>';
        recommendationsText += '<ul>';
        recommendationsText += '<li>–ü—Ä–æ–≤–µ—Å—Ç–∏ —Ä–∞–±–æ—Ç—É –ø–æ —Å–ø–ª–æ—á–µ–Ω–∏—é –∫–ª–∞—Å—Å–Ω–æ–≥–æ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–∞</li>';
        recommendationsText += '<li>–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –ø—Ä–æ–µ–∫—Ç—ã</li>';
        recommendationsText += '<li>–£–ª—É—á—à–∏—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É —É—á–µ–Ω–∏–∫–∞–º–∏ –∏ —É—á–∏—Ç–µ–ª—è–º–∏</li>';
        recommendationsText += '</ul>';
    }
    
    if (results.equalityLevel === '–ù–∏–∑–∫–∏–π') {
        recommendationsText += '<p><strong>–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞–≤–Ω–æ–ø—Ä–∞–≤–∏—è:</strong></p>';
        recommendationsText += '<ul>';
        recommendationsText += '<li>–†–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –ø—Ä–∏–Ω—è—Ç–∏–µ–º —Ä–∞–∑–ª–∏—á–∏–π –º–µ–∂–¥—É —É—á–µ–Ω–∏–∫–∞–º–∏</li>';
        recommendationsText += '<li>–§–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª–µ—Ä–∞–Ω—Ç–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –≤ –∫–ª–∞—Å—Å–µ</li>';
        recommendationsText += '<li>–†–∞–∑–≤–∏–≤–∞—Ç—å –Ω–∞–≤—ã–∫–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è</li>';
        recommendationsText += '</ul>';
    }
    
    summary.innerHTML = summaryText;
    recommendations.innerHTML = recommendationsText;
}

function restartBullyingTest() {
    startBullyingTest();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ Telegram
tg.BackButton.onClick(() => {
    if (document.getElementById('san-test-screen').classList.contains('active')) {
        showScreen('user-info-screen');
        fillUserInfoForm();
    } else if (document.getElementById('psm25-test-screen').classList.contains('active')) {
        showScreen('user-info-screen');
        fillUserInfoForm();
    } else if (document.getElementById('burnout-test-screen').classList.contains('active')) {
        showScreen('user-info-screen');
        fillUserInfoForm();
    } else if (document.getElementById('anxiety-test-screen').classList.contains('active')) {
        showScreen('user-info-screen');
        fillUserInfoForm();
    } else if (document.getElementById('depression-test-screen').classList.contains('active')) {
        showScreen('user-info-screen');
        fillUserInfoForm();
    } else if (document.getElementById('bullying-test-screen').classList.contains('active')) {
        showScreen('user-info-screen');
        fillUserInfoForm();
    } else if (document.getElementById('aggression-test-screen').classList.contains('active')) {
        showScreen('user-info-screen');
        fillUserInfoForm();
    } else if (document.getElementById('results-screen').classList.contains('active')) {
        showScreen('burnout-stress-depression-screen');
    } else if (document.getElementById('psm25-results-screen').classList.contains('active')) {
        showScreen('burnout-stress-depression-screen');
    } else if (document.getElementById('burnout-results-screen').classList.contains('active')) {
        showScreen('burnout-stress-depression-screen');
    } else if (document.getElementById('anxiety-results-screen').classList.contains('active')) {
        showScreen('burnout-stress-depression-screen');
    } else if (document.getElementById('depression-results-screen').classList.contains('active')) {
        showScreen('burnout-stress-depression-screen');
    } else if (document.getElementById('bullying-results-screen').classList.contains('active')) {
        showScreen('bullying-screen');
    } else if (document.getElementById('aggression-results-screen').classList.contains('active')) {
        showScreen('bullying-screen');
    } else if (document.getElementById('user-info-screen').classList.contains('active')) {
        showScreen('burnout-stress-depression-screen');
    } else if (document.getElementById('burnout-stress-depression-screen').classList.contains('active')) {
        showMainScreen();
    } else if (document.getElementById('bullying-screen').classList.contains('active')) {
        showMainScreen();
    } else if (document.getElementById('consultation-screen').classList.contains('active')) {
        showMainScreen();
    }
});

// –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ
function updateBackButton() {
    const currentScreen = document.querySelector('.screen.active');
    if (currentScreen.id === 'main-screen') {
        // –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" —Ç–æ–ª—å–∫–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
        tg.BackButton.hide();
    } else {
        tg.BackButton.show();
    }
}

// –û–±–Ω–æ–≤–ª—è—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –ø—Ä–∏ —Å–º–µ–Ω–µ —ç–∫—Ä–∞–Ω–æ–≤
const originalShowScreen = showScreen;
showScreen = function(screenId) {
    originalShowScreen(screenId);
    updateBackButton();
};

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ç–µ—Å—Ç–æ–≤
document.addEventListener('DOMContentLoaded', function() {
    // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∞ –≤—ã–≥–æ—Ä–∞–Ω–∏—è
    document.getElementById('burnout-next-question').addEventListener('click', nextBurnoutQuestion);
    document.getElementById('burnout-prev-question').addEventListener('click', prevBurnoutQuestion);
    document.getElementById('burnout-finish-test').addEventListener('click', finishBurnoutTest);
    
    // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∞ —Ç—Ä–µ–≤–æ–≥–∏
    document.getElementById('anxiety-next-question').addEventListener('click', nextAnxietyQuestion);
    document.getElementById('anxiety-prev-question').addEventListener('click', prevAnxietyQuestion);
    document.getElementById('anxiety-finish-test').addEventListener('click', finishAnxietyTest);
    
    // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∞ –¥–µ–ø—Ä–µ—Å—Å–∏–∏
    document.getElementById('depression-next-question').addEventListener('click', nextDepressionQuestion);
    document.getElementById('depression-prev-question').addEventListener('click', prevDepressionQuestion);
    document.getElementById('depression-finish-test').addEventListener('click', finishDepressionTest);
    
    // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∞ –Ω–∞ –±—É–ª–ª–∏–Ω–≥
    document.getElementById('bullying-next-question').addEventListener('click', nextBullyingQuestion);
    document.getElementById('bullying-prev-question').addEventListener('click', prevBullyingQuestion);
    document.getElementById('bullying-finish-test').addEventListener('click', finishBullyingTest);
    
    // –ö–Ω–æ–ø–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞ –Ω–∞ –±—É–ª–ª–∏–Ω–≥
    document.getElementById('bullying-back-to-menu').addEventListener('click', showMainScreen);
    document.getElementById('bullying-restart-test').addEventListener('click', restartBullyingTest);
    
    // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∞ –î. –û–ª–≤–µ—É—Å–∞
    document.getElementById('olweus-bullying-next-question').addEventListener('click', nextOlweusBullyingQuestion);
    document.getElementById('olweus-bullying-prev-question').addEventListener('click', prevOlweusBullyingQuestion);
    document.getElementById('olweus-bullying-finish-test').addEventListener('click', finishOlweusBullyingTest);
    
    // –ö–Ω–æ–ø–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞ –î. –û–ª–≤–µ—É—Å–∞
    document.getElementById('olweus-bullying-back-to-menu').addEventListener('click', showMainScreen);
    document.getElementById('olweus-bullying-restart-test').addEventListener('click', restartOlweusBullyingTest);
    
    // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∞ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è
    document.getElementById('aggression-next-question').addEventListener('click', nextAggressionQuestion);
    document.getElementById('aggression-prev-question').addEventListener('click', prevAggressionQuestion);
    document.getElementById('aggression-finish-test').addEventListener('click', finishAggressionTest);
    
    // –ö–Ω–æ–ø–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è
    document.getElementById('aggression-back-to-menu').addEventListener('click', showMainScreen);
    document.getElementById('aggression-restart-test').addEventListener('click', restartAggressionTest);
});

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∞ –î. –û–ª–≤–µ—É—Å–∞ "–ë—É–ª–ª–∏–Ω–≥"
function startOlweusBullyingTest() {
    olweusBullyingCurrentQuestion = 0;
    olweusBullyingAnswers = {};
    showScreen('olweus-bullying-test-screen');
    displayOlweusBullyingQuestion();
    updateOlweusBullyingProgress();
    updateOlweusBullyingNavigationButtons();
}

function displayOlweusBullyingQuestion() {
    const question = olweusBullyingTestData.questions[olweusBullyingCurrentQuestion];
    const container = document.getElementById('olweus-bullying-question-container');
    
    container.innerHTML = `
        <div class="question">
            <div class="question-text">${question.text}</div>
            <div class="olweus-radio-scale">
                <label class="olweus-radio-option">
                    <input type="radio" name="olweus-bullying-answer" value="0" data-value="0">
                    <span class="olweus-radio-text">–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –±—ã–ª–æ</span>
                </label>
                <label class="olweus-radio-option">
                    <input type="radio" name="olweus-bullying-answer" value="1" data-value="1">
                    <span class="olweus-radio-text">–ë—ã–ª–æ —Ä–∞–∑ –∏–ª–∏ –¥–≤–∞</span>
                </label>
                <label class="olweus-radio-option">
                    <input type="radio" name="olweus-bullying-answer" value="2" data-value="2">
                    <span class="olweus-radio-text">–ë—ã–≤–∞–µ—Ç –∏–Ω–æ–≥–¥–∞</span>
                </label>
                <label class="olweus-radio-option">
                    <input type="radio" name="olweus-bullying-answer" value="3" data-value="3">
                    <span class="olweus-radio-text">–ë—ã–≤–∞–µ—Ç —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é</span>
                </label>
                <label class="olweus-radio-option">
                    <input type="radio" name="olweus-bullying-answer" value="4" data-value="4">
                    <span class="olweus-radio-text">–ë—ã–≤–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é</span>
                </label>
            </div>
        </div>
    `;
    
    // –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫
    container.querySelectorAll('input[name="olweus-bullying-answer"]').forEach(radio => {
        radio.addEventListener('change', function() {
            if (this.checked) {
                // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç
                const value = parseInt(this.value);
                olweusBullyingAnswers[question.id] = value;
                
                // –û–±–Ω–æ–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                updateOlweusBullyingNavigationButtons();
            }
        });
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (olweusBullyingAnswers[question.id] !== undefined) {
        const selectedRadio = container.querySelector(`input[value="${olweusBullyingAnswers[question.id]}"]`);
        if (selectedRadio) {
            selectedRadio.checked = true;
        }
    }
}

function updateOlweusBullyingProgress() {
    const totalQuestions = olweusBullyingTestData.questions.length;
    const currentQuestionNumber = olweusBullyingCurrentQuestion + 1;
    
    const progress = (currentQuestionNumber / totalQuestions) * 100;
    document.getElementById('olweus-bullying-progress').style.width = progress + '%';
    document.getElementById('olweus-bullying-current-question').textContent = currentQuestionNumber;
}

function updateOlweusBullyingNavigationButtons() {
    const prevBtn = document.getElementById('olweus-bullying-prev-question');
    const nextBtn = document.getElementById('olweus-bullying-next-question');
    const finishBtn = document.getElementById('olweus-bullying-finish-test');
    
    const isLastQuestion = olweusBullyingCurrentQuestion === olweusBullyingTestData.questions.length - 1;
    const currentQuestion = olweusBullyingTestData.questions[olweusBullyingCurrentQuestion];
    
    prevBtn.disabled = olweusBullyingCurrentQuestion === 0;
    
    if (isLastQuestion) {
        nextBtn.style.display = 'none';
        finishBtn.style.display = 'inline-block';
        finishBtn.disabled = olweusBullyingAnswers[currentQuestion.id] === undefined;
    } else {
        nextBtn.style.display = 'inline-block';
        finishBtn.style.display = 'none';
        nextBtn.disabled = olweusBullyingAnswers[currentQuestion.id] === undefined;
    }
}

function nextOlweusBullyingQuestion() {
    if (olweusBullyingCurrentQuestion < olweusBullyingTestData.questions.length - 1) {
        olweusBullyingCurrentQuestion++;
        displayOlweusBullyingQuestion();
        updateOlweusBullyingProgress();
        updateOlweusBullyingNavigationButtons();
    }
}

function prevOlweusBullyingQuestion() {
    if (olweusBullyingCurrentQuestion > 0) {
        olweusBullyingCurrentQuestion--;
        displayOlweusBullyingQuestion();
        updateOlweusBullyingProgress();
        updateOlweusBullyingNavigationButtons();
    }
}

function finishOlweusBullyingTest() {
    calculateOlweusBullyingResults();
    displayOlweusBullyingResults();
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
    const completedTests = JSON.parse(localStorage.getItem('completedTests') || '{}');
    completedTests['olweus-bullying'] = true;
    localStorage.setItem('completedTests', JSON.stringify(completedTests));
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ Telegram
    const results = calculateOlweusBullyingResults();
    sendTestResultsToTelegram(results, userInfo, '–û–ø—Ä–æ—Å–Ω–∏–∫ –î. –û–ª–≤–µ—É—Å–∞ ¬´–ë—É–ª–ª–∏–Ω–≥¬ª');
    
    showScreen('olweus-bullying-results-screen');
}

function calculateOlweusBullyingResults() {
    const results = {
        directActive: 0,
        indirectActive: 0,
        directVictim: 0,
        indirectVictim: 0
    };
    
    // –ü–æ–¥—Å—á–µ—Ç –±–∞–ª–ª–æ–≤ –ø–æ —à–∫–∞–ª–∞–º
    Object.keys(olweusBullyingTestData.scales).forEach(scaleKey => {
        const scale = olweusBullyingTestData.scales[scaleKey];
        let sum = 0;
        let count = 0;
        
        scale.questions.forEach(questionId => {
            const answer = olweusBullyingAnswers[questionId];
            if (answer !== undefined) {
                sum += answer;
                count++;
            }
        });
        
        const average = count > 0 ? sum / count : 0;
        
        switch(scaleKey) {
            case 'direct_active':
                results.directActive = average;
                break;
            case 'indirect_active':
                results.indirectActive = average;
                break;
            case 'direct_victim':
                results.directVictim = average;
                break;
            case 'indirect_victim':
                results.indirectVictim = average;
                break;
        }
    });
    
    // –û–±—â–∏–µ —à–∫–∞–ª—ã
    results.activeBullying = (results.directActive + results.indirectActive) / 2;
    results.passiveBullying = (results.directVictim + results.indirectVictim) / 2;
    
    // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É—Ä–æ–≤–Ω–∏ –≤—ã—Ä–∞–∂–µ–Ω–Ω–æ—Å—Ç–∏
    results.activeBullyingLevel = getOlweusBullyingLevel(results.activeBullying);
    results.directActiveLevel = getOlweusBullyingLevel(results.directActive);
    results.indirectActiveLevel = getOlweusBullyingLevel(results.indirectActive);
    results.passiveBullyingLevel = getOlweusBullyingLevel(results.passiveBullying);
    results.directVictimLevel = getOlweusBullyingLevel(results.directVictim);
    results.indirectVictimLevel = getOlweusBullyingLevel(results.indirectVictim);
    
    return results;
}

function displayOlweusBullyingResults() {
    const results = calculateOlweusBullyingResults();
    
    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –±–∞–ª–ª—ã
    document.getElementById('olweus-active-bullying-score').textContent = results.activeBullying.toFixed(2);
    document.getElementById('olweus-direct-active-score').textContent = results.directActive.toFixed(2);
    document.getElementById('olweus-indirect-active-score').textContent = results.indirectActive.toFixed(2);
    document.getElementById('olweus-passive-bullying-score').textContent = results.passiveBullying.toFixed(2);
    document.getElementById('olweus-direct-victim-score').textContent = results.directVictim.toFixed(2);
    document.getElementById('olweus-indirect-victim-score').textContent = results.indirectVictim.toFixed(2);
    
    // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É—Ä–æ–≤–Ω–∏ –≤—ã—Ä–∞–∂–µ–Ω–Ω–æ—Å—Ç–∏
    const activeLevel = getOlweusBullyingLevel(results.activeBullying);
    const directActiveLevel = getOlweusBullyingLevel(results.directActive);
    const indirectActiveLevel = getOlweusBullyingLevel(results.indirectActive);
    const passiveLevel = getOlweusBullyingLevel(results.passiveBullying);
    const directVictimLevel = getOlweusBullyingLevel(results.directVictim);
    const indirectVictimLevel = getOlweusBullyingLevel(results.indirectVictim);
    
    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —É—Ä–æ–≤–Ω–∏
    document.getElementById('olweus-active-bullying-level').textContent = activeLevel;
    document.getElementById('olweus-direct-active-level').textContent = directActiveLevel;
    document.getElementById('olweus-indirect-active-level').textContent = indirectActiveLevel;
    document.getElementById('olweus-passive-bullying-level').textContent = passiveLevel;
    document.getElementById('olweus-direct-victim-level').textContent = directVictimLevel;
    document.getElementById('olweus-indirect-victim-level').textContent = indirectVictimLevel;
    
    // –î–æ–±–∞–≤–∏—Ç—å CSS –∫–ª–∞—Å—Å—ã –¥–ª—è —É—Ä–æ–≤–Ω–µ–π
    setOlweusBullyingLevelClass('olweus-active-bullying-level', activeLevel);
    setOlweusBullyingLevelClass('olweus-direct-active-level', directActiveLevel);
    setOlweusBullyingLevelClass('olweus-indirect-active-level', indirectActiveLevel);
    setOlweusBullyingLevelClass('olweus-passive-bullying-level', passiveLevel);
    setOlweusBullyingLevelClass('olweus-direct-victim-level', directVictimLevel);
    setOlweusBullyingLevelClass('olweus-indirect-victim-level', indirectVictimLevel);
    
    // –°–≤–æ–¥–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    const summary = generateOlweusBullyingSummary(results);
    document.getElementById('olweus-bullying-summary').innerHTML = summary;
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    const recommendations = generateOlweusBullyingRecommendations(results);
    document.getElementById('olweus-bullying-recommendations').innerHTML = recommendations;
}

function getOlweusBullyingLevel(score) {
    if (score <= 1) return '–°–ª–∞–±–æ –≤—ã—Ä–∞–∂–µ–Ω';
    if (score < 3) return '–£–º–µ—Ä–µ–Ω–Ω–æ –≤—ã—Ä–∞–∂–µ–Ω';
    return '–Ø—Ä–∫–æ –≤—ã—Ä–∞–∂–µ–Ω';
}

function setOlweusBullyingLevelClass(elementId, level) {
    const element = document.getElementById(elementId);
    element.className = 'level-indicator';
    
    if (level === '–°–ª–∞–±–æ –≤—ã—Ä–∞–∂–µ–Ω') {
        element.classList.add('low');
    } else if (level === '–£–º–µ—Ä–µ–Ω–Ω–æ –≤—ã—Ä–∞–∂–µ–Ω') {
        element.classList.add('medium');
    } else if (level === '–Ø—Ä–∫–æ –≤—ã—Ä–∞–∂–µ–Ω') {
        element.classList.add('high');
    }
}

function generateOlweusBullyingSummary(results) {
    let summary = '<h3>–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</h3>';
    
    summary += '<p><strong>–ê–∫—Ç–∏–≤–Ω—ã–π –±—É–ª–ª–∏–Ω–≥ (–ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ –∞–≥—Ä–µ—Å—Å–∏–∏):</strong> ';
    if (results.activeBullying <= 1) {
        summary += '–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è.';
    } else if (results.activeBullying < 3) {
        summary += '–£–º–µ—Ä–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è.';
    } else {
        summary += '–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è.';
    }
    summary += '</p>';
    
    summary += '<p><strong>–ü–∞—Å—Å–∏–≤–Ω—ã–π –±—É–ª–ª–∏–Ω–≥ (–≤–∏–∫—Ç–∏–º–∏–∑–∞—Ü–∏—è):</strong> ';
    if (results.passiveBullying <= 1) {
        summary += '–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç–∏ –±—É–ª–ª–∏–Ω–≥—É.';
    } else if (results.passiveBullying < 3) {
        summary += '–£–º–µ—Ä–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç–∏ –±—É–ª–ª–∏–Ω–≥—É.';
    } else {
        summary += '–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç–∏ –±—É–ª–ª–∏–Ω–≥—É.';
    }
    summary += '</p>';
    
    return summary;
}

function generateOlweusBullyingRecommendations(results) {
    let recommendations = '<h3>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3><ul>';
    
    if (results.activeBullying > 1) {
        recommendations += '<li>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Å–∏—Ö–æ–ª–æ–≥—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º</li>';
        recommendations += '<li>–ò–∑—É—á–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–Ω–µ–≤–æ–º –∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏</li>';
        recommendations += '<li>–†–∞–∑–≤–∏–≤–∞–π—Ç–µ —ç–º–ø–∞—Ç–∏—é –∏ –Ω–∞–≤—ã–∫–∏ –æ–±—â–µ–Ω–∏—è</li>';
    }
    
    if (results.passiveBullying > 1) {
        recommendations += '<li>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫ –≤–∑—Ä–æ—Å–ª—ã–º (—Ä–æ–¥–∏—Ç–µ–ª—è–º, —É—á–∏—Ç–µ–ª—è–º, –ø—Å–∏—Ö–æ–ª–æ–≥—É)</li>';
        recommendations += '<li>–†–∞–∑–≤–∏–≤–∞–π—Ç–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ –∏ –Ω–∞–≤—ã–∫–∏ —Å–∞–º–æ–∑–∞—â–∏—Ç—ã</li>';
        recommendations += '<li>–ò—â–∏—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∫—É —É –¥—Ä—É–∑–µ–π –∏ –±–ª–∏–∑–∫–∏—Ö</li>';
    }
    
    if (results.activeBullying <= 1 && results.passiveBullying <= 1) {
        recommendations += '<li>–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∑–¥–æ—Ä–æ–≤—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –æ–∫—Ä—É–∂–∞—é—â–∏–º–∏</li>';
        recommendations += '<li>–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –∫ –¥—Ä—É–≥–∏–º –∏ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å —Ç–µ–º, –∫—Ç–æ –º–æ–∂–µ—Ç –Ω—É–∂–¥–∞—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ</li>';
    }
    
    recommendations += '</ul>';
    return recommendations;
}

function restartOlweusBullyingTest() {
    startOlweusBullyingTest();
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∞ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è
function startAggressionTest() {
    aggressionCurrentQuestion = 0;
    aggressionAnswers = {};
    showScreen('aggression-test-screen');
    displayAggressionQuestion();
    updateAggressionProgress();
    updateAggressionNavigationButtons();
}

function displayAggressionQuestion() {
    const question = aggressionTestData.questions[aggressionCurrentQuestion];
    const container = document.getElementById('aggression-question-container');
    
    container.innerHTML = `
        <div class="question">
            <div class="question-text">${question.text}</div>
            <div class="aggression-radio-scale">
                <label class="aggression-radio-option">
                    <input type="radio" name="aggression-answer" value="1">
                    <span class="aggression-radio-text">–î–∞</span>
                </label>
                <label class="aggression-radio-option">
                    <input type="radio" name="aggression-answer" value="0">
                    <span class="aggression-radio-text">–ù–µ—Ç</span>
                </label>
            </div>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    container.querySelectorAll('input[name="aggression-answer"]').forEach(radio => {
        radio.addEventListener('change', function() {
            if (this.checked) {
                aggressionAnswers[question.id] = parseInt(this.value);
                updateAggressionNavigationButtons();
            }
        });
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (aggressionAnswers[question.id] !== undefined) {
        const selectedRadio = container.querySelector(`input[value="${aggressionAnswers[question.id]}"]`);
        if (selectedRadio) {
            selectedRadio.checked = true;
        }
    }
}

function updateAggressionProgress() {
    const totalQuestions = aggressionTestData.questions.length;
    const currentQuestionNumber = aggressionCurrentQuestion + 1;
    
    const progress = (currentQuestionNumber / totalQuestions) * 100;
    document.getElementById('aggression-progress').style.width = progress + '%';
    document.getElementById('aggression-current-question').textContent = currentQuestionNumber;
}

function updateAggressionNavigationButtons() {
    const prevBtn = document.getElementById('aggression-prev-question');
    const nextBtn = document.getElementById('aggression-next-question');
    const finishBtn = document.getElementById('aggression-finish-test');
    
    const isLastQuestion = aggressionCurrentQuestion === aggressionTestData.questions.length - 1;
    const currentQuestion = aggressionTestData.questions[aggressionCurrentQuestion];
    
    prevBtn.disabled = aggressionCurrentQuestion === 0;
    
    if (isLastQuestion) {
        nextBtn.style.display = 'none';
        finishBtn.style.display = 'inline-block';
        finishBtn.disabled = aggressionAnswers[currentQuestion.id] === undefined;
    } else {
        nextBtn.style.display = 'inline-block';
        finishBtn.style.display = 'none';
        nextBtn.disabled = aggressionAnswers[currentQuestion.id] === undefined;
    }
}

function nextAggressionQuestion() {
    if (aggressionCurrentQuestion < aggressionTestData.questions.length - 1) {
        aggressionCurrentQuestion++;
        displayAggressionQuestion();
        updateAggressionProgress();
        updateAggressionNavigationButtons();
    }
}

function prevAggressionQuestion() {
    if (aggressionCurrentQuestion > 0) {
        aggressionCurrentQuestion--;
        displayAggressionQuestion();
        updateAggressionProgress();
        updateAggressionNavigationButtons();
    }
}

function finishAggressionTest() {
    calculateAggressionResults();
    displayAggressionResults();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const results = calculateAggressionResults();
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
    const completedTests = JSON.parse(localStorage.getItem('completedTests') || '{}');
    completedTests.aggression = true;
    localStorage.setItem('completedTests', JSON.stringify(completedTests));
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ Telegram
    sendTestResultsToTelegram(results, userInfo, '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è');
    
    showScreen('aggression-results-screen');
}

function calculateAggressionResults() {
    const results = {
        verbal: 0,
        physical: 0,
        object: 0,
        emotional: 0,
        self: 0,
        total: 0
    };
    
    // –ü–æ–¥—Å—á–µ—Ç –±–∞–ª–ª–æ–≤ –ø–æ –∫–∞–∂–¥–æ–π —à–∫–∞–ª–µ
    Object.keys(aggressionTestData.scoringKey).forEach(scaleKey => {
        const scale = aggressionTestData.scoringKey[scaleKey];
        let score = 0;
        
        // –ü–æ–¥—Å—á–µ—Ç –±–∞–ª–ª–æ–≤ –∑–∞ –æ—Ç–≤–µ—Ç—ã "–î–∞"
        scale.yes.forEach(questionId => {
            if (aggressionAnswers[questionId] === 1) {
                score++;
            }
        });
        
        // –ü–æ–¥—Å—á–µ—Ç –±–∞–ª–ª–æ–≤ –∑–∞ –æ—Ç–≤–µ—Ç—ã "–ù–µ—Ç"
        scale.no.forEach(questionId => {
            if (aggressionAnswers[questionId] === 0) {
                score++;
            }
        });
        
        results[scaleKey] = score;
    });
    
    // –û–±—â–∏–π –±–∞–ª–ª
    results.total = results.verbal + results.physical + results.object + results.emotional + results.self;
    
    return results;
}

function displayAggressionResults() {
    const results = calculateAggressionResults();
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –±–∞–ª–ª—ã
    document.getElementById('aggression-verbal-score').textContent = results.verbal;
    document.getElementById('aggression-physical-score').textContent = results.physical;
    document.getElementById('aggression-object-score').textContent = results.object;
    document.getElementById('aggression-emotional-score').textContent = results.emotional;
    document.getElementById('aggression-self-score').textContent = results.self;
    document.getElementById('aggression-total-score').textContent = results.total;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–Ω–∏
    const verbalLevel = getAggressionLevel('verbal', results.verbal);
    const physicalLevel = getAggressionLevel('physical', results.physical);
    const objectLevel = getAggressionLevel('object', results.object);
    const emotionalLevel = getAggressionLevel('emotional', results.emotional);
    const selfLevel = getAggressionLevel('self', results.self);
    const totalLevel = getAggressionTotalLevel(results.total);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —É—Ä–æ–≤–Ω–µ–π
    document.getElementById('aggression-verbal-level').textContent = verbalLevel.text;
    document.getElementById('aggression-verbal-level').className = `level-indicator ${verbalLevel.class}`;
    
    document.getElementById('aggression-physical-level').textContent = physicalLevel.text;
    document.getElementById('aggression-physical-level').className = `level-indicator ${physicalLevel.class}`;
    
    document.getElementById('aggression-object-level').textContent = objectLevel.text;
    document.getElementById('aggression-object-level').className = `level-indicator ${objectLevel.class}`;
    
    document.getElementById('aggression-emotional-level').textContent = emotionalLevel.text;
    document.getElementById('aggression-emotional-level').className = `level-indicator ${emotionalLevel.class}`;
    
    document.getElementById('aggression-self-level').textContent = selfLevel.text;
    document.getElementById('aggression-self-level').className = `level-indicator ${selfLevel.class}`;
    
    document.getElementById('aggression-total-level').textContent = totalLevel.text;
    document.getElementById('aggression-total-level').className = `level-indicator ${totalLevel.class}`;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–≤–æ–¥–∫—É –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    generateAggressionSummary(results);
}

function getAggressionLevel(scale, score) {
    if (score > 5) {
        return { text: '–í—ã—Å–æ–∫–∞—è —Å—Ç–µ–ø–µ–Ω—å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç–∏', class: 'high' };
    } else if (score >= 3) {
        return { text: '–°—Ä–µ–¥–Ω—è—è —Å—Ç–µ–ø–µ–Ω—å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç–∏', class: 'medium' };
    } else {
        return { text: '–ù–∏–∑–∫–∞—è —Å—Ç–µ–ø–µ–Ω—å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç–∏', class: 'low' };
    }
}

function getAggressionTotalLevel(totalScore) {
    if (totalScore > 25) {
        return { text: '–í—ã—Å–æ–∫–∞—è —Å—Ç–µ–ø–µ–Ω—å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç–∏', class: 'high' };
    } else if (totalScore >= 11) {
        return { text: '–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç–∏', class: 'medium' };
    } else {
        return { text: '–ù–∏–∑–∫–∞—è —Å—Ç–µ–ø–µ–Ω—å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç–∏', class: 'low' };
    }
}

function generateAggressionSummary(results) {
    const summary = document.getElementById('aggression-summary');
    const recommendations = document.getElementById('aggression-recommendations');
    
    // –°–∫—Ä—ã–≤–∞–µ–º –±–ª–æ–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏, —Ç–∞–∫ –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–∂–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –∫—Ä–∞—Å–∏–≤—ã—Ö –±–ª–æ–∫–∞—Ö
    summary.style.display = 'none';
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    let recommendationsText = '<h3>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h3><ul>';
    
    if (results.total > 25) {
        recommendationsText += '<li>–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º</li>';
        recommendationsText += '<li>–ò–∑—É—á–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–Ω–µ–≤–æ–º –∏ —Å—Ç—Ä–µ—Å—Å–æ–º</li>';
        recommendationsText += '<li>–†–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è</li>';
    } else if (results.total >= 11) {
        recommendationsText += '<li>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤ —Å–∞–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—è</li>';
        recommendationsText += '<li>–ò–∑—É—á–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏ –∏ –º–µ–¥–∏—Ç–∞—Ü–∏–∏</li>';
        recommendationsText += '<li>–ü—Ä–∞–∫—Ç–∏–∫–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤</li>';
    } else {
        recommendationsText += '<li>–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å –Ω–∞–≤—ã–∫–∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è</li>';
        recommendationsText += '<li>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∑–¥–æ—Ä–æ–≤—ã–µ —Å–ø–æ—Å–æ–±—ã –≤—ã—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ—Ü–∏–π</li>';
    }
    
    recommendationsText += '</ul>';
    recommendations.innerHTML = recommendationsText;
}

function restartAggressionTest() {
    startAggressionTest();
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
function initConsultationForm() {
    const form = document.getElementById('consultation-form');
    const problemTextarea = document.getElementById('consultation-problem');
    const charCount = document.getElementById('problem-char-count');
    const submitBtn = document.getElementById('consultation-submit-btn');
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ textarea
    problemTextarea.addEventListener('input', function() {
        const currentLength = this.value.length;
        charCount.textContent = currentLength;
        
        // –ò–∑–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç —Å—á–µ—Ç—á–∏–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–∏–º–≤–æ–ª–æ–≤
        charCount.className = 'char-counter';
        if (currentLength > 800) {
            charCount.classList.add('error');
        } else if (currentLength > 600) {
            charCount.classList.add('warning');
        }
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        const formData = new FormData(form);
        const consultationData = {
            name: formData.get('name').trim(),
            phone: formData.get('phone').trim(),
            problem: formData.get('problem').trim()
        };
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!consultationData.name || !consultationData.phone || !consultationData.problem) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
            return;
        }
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–ø—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
        const phoneRegex = /^[\+]?[0-9\s\-\(\)]{10,}$/;
        if (!phoneRegex.test(consultationData.phone)) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
            return;
        }
        
        // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
        submitBtn.disabled = true;
        submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
        
        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram
            await sendConsultationToTelegram(consultationData);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            showConsultationSuccess();
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏:', error);
            alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
            
            // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
            submitBtn.disabled = false;
            submitBtn.textContent = '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é';
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –≤ Telegram
async function sendConsultationToTelegram(consultationData) {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ Telegram
        const telegramUser = tg.initDataUnsafe?.user;
        const userName = telegramUser ? `${telegramUser.first_name} ${telegramUser.last_name || ''}`.trim() : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        const userId = telegramUser?.id || 'unknown';
        const username = telegramUser?.username ? `@${telegramUser.username}` : '–ù–µ—Ç username';
        
        const message = `
üìã <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</b>

üë§ <b>–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>
‚Ä¢ –ò–º—è: ${userName}
‚Ä¢ Username: ${username}
‚Ä¢ Telegram ID: ${userId}

üìù <b>–î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:</b>
‚Ä¢ –ò–º—è: ${consultationData.name}
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: ${consultationData.phone}
‚Ä¢ –ü—Ä–æ–±–ª–µ–º–∞: ${consultationData.problem}

‚è∞ –í—Ä–µ–º—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏: ${new Date().toLocaleString('ru-RU')}
üîó –ò—Å—Ç–æ—á–Ω–∏–∫: Telegram WebApp`;

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
        const sendPromises = CONFIG.ADMIN_CHAT_IDS.map(async (adminId) => {
            const data = {
                chat_id: adminId,
                text: message,
                parse_mode: 'HTML'
            };
            return await sendToTelegram(data);
        });

        try {
            const responses = await Promise.all(sendPromises);
            const successCount = responses.filter(response => response !== null).length;
            console.log(`–ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ${successCount} –∏–∑ ${CONFIG.ADMIN_CHAT_IDS.length} –∞–¥–º–∏–Ω–æ–≤ –≤ Telegram`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω–∞–º:', error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é:', error);
        throw error;
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
function showConsultationSuccess() {
    const form = document.getElementById('consultation-form');
    const successMessage = document.getElementById('consultation-success');
    
    form.style.display = 'none';
    successMessage.style.display = 'block';
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    successMessage.style.opacity = '0';
    successMessage.style.transform = 'translateY(20px)';
    
    setTimeout(() => {
        successMessage.style.transition = 'all 0.5s ease';
        successMessage.style.opacity = '1';
        successMessage.style.transform = 'translateY(0)';
    }, 100);
}

// –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
function resetConsultationForm() {
    const form = document.getElementById('consultation-form');
    const successMessage = document.getElementById('consultation-success');
    const submitBtn = document.getElementById('consultation-submit-btn');
    const charCount = document.getElementById('problem-char-count');
    
    form.reset();
    form.style.display = 'block';
    successMessage.style.display = 'none';
    
    submitBtn.disabled = false;
    submitBtn.textContent = '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é';
    charCount.textContent = '0';
    charCount.className = 'char-counter';
}

